{"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\AorderScriptTest.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\AorderScriptTest.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"15":{"start":{"line":16,"column":17},"end":{"line":16,"column":51}},"16":{"start":{"line":17,"column":15},"end":{"line":17,"column":30}},"17":{"start":{"line":18,"column":15},"end":{"line":18,"column":30}},"18":{"start":{"line":19,"column":20},"end":{"line":19,"column":57}},"19":{"start":{"line":20,"column":17},"end":{"line":20,"column":34}},"20":{"start":{"line":21,"column":13},"end":{"line":21,"column":35}},"21":{"start":{"line":22,"column":16},"end":{"line":22,"column":45}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":44}},"23":{"start":{"line":24,"column":27},"end":{"line":24,"column":54}},"24":{"start":{"line":25,"column":15},"end":{"line":25,"column":47}},"25":{"start":{"line":26,"column":20},"end":{"line":26,"column":55}},"26":{"start":{"line":27,"column":19},"end":{"line":27,"column":51}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":185}},"29":{"start":{"line":30,"column":15},"end":{"line":30,"column":66}},"30":{"start":{"line":31,"column":0},"end":{"line":33,"column":3}},"31":{"start":{"line":32,"column":4},"end":{"line":32,"column":36}},"32":{"start":{"line":34,"column":0},"end":{"line":36,"column":3}},"33":{"start":{"line":35,"column":4},"end":{"line":35,"column":37}},"34":{"start":{"line":37,"column":0},"end":{"line":270,"column":4}},"35":{"start":{"line":37,"column":87},"end":{"line":270,"column":2}},"36":{"start":{"line":39,"column":18},"end":{"line":39,"column":26}},"37":{"start":{"line":40,"column":19},"end":{"line":40,"column":52}},"38":{"start":{"line":41,"column":19},"end":{"line":41,"column":67}},"39":{"start":{"line":42,"column":14},"end":{"line":42,"column":57}},"40":{"start":{"line":43,"column":15},"end":{"line":43,"column":59}},"41":{"start":{"line":44,"column":16},"end":{"line":44,"column":86}},"42":{"start":{"line":45,"column":16},"end":{"line":45,"column":86}},"43":{"start":{"line":46,"column":21},"end":{"line":46,"column":23}},"44":{"start":{"line":47,"column":17},"end":{"line":47,"column":19}},"45":{"start":{"line":48,"column":23},"end":{"line":48,"column":75}},"46":{"start":{"line":49,"column":16},"end":{"line":49,"column":18}},"47":{"start":{"line":50,"column":18},"end":{"line":50,"column":20}},"48":{"start":{"line":51,"column":15},"end":{"line":51,"column":50}},"49":{"start":{"line":52,"column":17},"end":{"line":52,"column":65}},"50":{"start":{"line":53,"column":20},"end":{"line":53,"column":21}},"51":{"start":{"line":54,"column":20},"end":{"line":54,"column":22}},"52":{"start":{"line":55,"column":25},"end":{"line":55,"column":28}},"53":{"start":{"line":56,"column":4},"end":{"line":60,"column":8}},"54":{"start":{"line":56,"column":17},"end":{"line":60,"column":6}},"55":{"start":{"line":59,"column":8},"end":{"line":59,"column":34}},"56":{"start":{"line":91,"column":4},"end":{"line":159,"column":8}},"57":{"start":{"line":91,"column":92},"end":{"line":159,"column":6}},"58":{"start":{"line":93,"column":23},"end":{"line":98,"column":9}},"59":{"start":{"line":100,"column":22},"end":{"line":112,"column":9}},"60":{"start":{"line":114,"column":22},"end":{"line":124,"column":9}},"61":{"start":{"line":125,"column":8},"end":{"line":125,"column":27}},"62":{"start":{"line":127,"column":32},"end":{"line":127,"column":80}},"63":{"start":{"line":128,"column":8},"end":{"line":128,"column":41}},"64":{"start":{"line":129,"column":8},"end":{"line":131,"column":11}},"65":{"start":{"line":132,"column":30},"end":{"line":132,"column":139}},"66":{"start":{"line":133,"column":26},"end":{"line":133,"column":166}},"67":{"start":{"line":134,"column":18},"end":{"line":150,"column":10}},"68":{"start":{"line":151,"column":31},"end":{"line":151,"column":140}},"69":{"start":{"line":153,"column":8},"end":{"line":153,"column":52}},"70":{"start":{"line":154,"column":8},"end":{"line":154,"column":62}},"71":{"start":{"line":155,"column":8},"end":{"line":155,"column":56}},"72":{"start":{"line":156,"column":8},"end":{"line":156,"column":90}},"73":{"start":{"line":157,"column":8},"end":{"line":157,"column":60}},"74":{"start":{"line":158,"column":8},"end":{"line":158,"column":197}},"75":{"start":{"line":160,"column":4},"end":{"line":166,"column":8}},"76":{"start":{"line":160,"column":48},"end":{"line":166,"column":6}},"77":{"start":{"line":161,"column":19},"end":{"line":161,"column":87}},"78":{"start":{"line":162,"column":8},"end":{"line":162,"column":52}},"79":{"start":{"line":163,"column":8},"end":{"line":163,"column":57}},"80":{"start":{"line":164,"column":8},"end":{"line":164,"column":77}},"81":{"start":{"line":165,"column":8},"end":{"line":165,"column":26}},"82":{"start":{"line":167,"column":4},"end":{"line":224,"column":8}},"83":{"start":{"line":167,"column":47},"end":{"line":224,"column":6}},"84":{"start":{"line":170,"column":33},"end":{"line":170,"column":61}},"85":{"start":{"line":171,"column":33},"end":{"line":171,"column":61}},"86":{"start":{"line":172,"column":34},"end":{"line":172,"column":63}},"87":{"start":{"line":173,"column":34},"end":{"line":173,"column":63}},"88":{"start":{"line":174,"column":22},"end":{"line":174,"column":123}},"89":{"start":{"line":175,"column":8},"end":{"line":175,"column":51}},"90":{"start":{"line":176,"column":8},"end":{"line":176,"column":51}},"91":{"start":{"line":177,"column":8},"end":{"line":177,"column":52}},"92":{"start":{"line":178,"column":8},"end":{"line":178,"column":52}},"93":{"start":{"line":180,"column":30},"end":{"line":180,"column":139}},"94":{"start":{"line":181,"column":8},"end":{"line":181,"column":166}},"95":{"start":{"line":182,"column":8},"end":{"line":182,"column":71}},"96":{"start":{"line":183,"column":22},"end":{"line":183,"column":140}},"97":{"start":{"line":184,"column":8},"end":{"line":184,"column":28}},"98":{"start":{"line":185,"column":34},"end":{"line":185,"column":62}},"99":{"start":{"line":186,"column":35},"end":{"line":186,"column":64}},"100":{"start":{"line":187,"column":35},"end":{"line":187,"column":64}},"101":{"start":{"line":188,"column":34},"end":{"line":188,"column":62}},"102":{"start":{"line":189,"column":23},"end":{"line":189,"column":128}},"103":{"start":{"line":190,"column":8},"end":{"line":190,"column":53}},"104":{"start":{"line":191,"column":8},"end":{"line":191,"column":54}},"105":{"start":{"line":192,"column":8},"end":{"line":192,"column":54}},"106":{"start":{"line":193,"column":8},"end":{"line":193,"column":53}},"107":{"start":{"line":194,"column":18},"end":{"line":194,"column":50}},"108":{"start":{"line":195,"column":29},"end":{"line":195,"column":133}},"109":{"start":{"line":196,"column":29},"end":{"line":196,"column":137}},"110":{"start":{"line":197,"column":8},"end":{"line":197,"column":153}},"111":{"start":{"line":198,"column":8},"end":{"line":202,"column":66}},"112":{"start":{"line":203,"column":8},"end":{"line":203,"column":197}},"113":{"start":{"line":204,"column":8},"end":{"line":207,"column":66}},"114":{"start":{"line":208,"column":19},"end":{"line":218,"column":9}},"115":{"start":{"line":209,"column":12},"end":{"line":217,"column":15}},"116":{"start":{"line":210,"column":32},"end":{"line":212,"column":25}},"117":{"start":{"line":211,"column":20},"end":{"line":211,"column":46}},"118":{"start":{"line":213,"column":16},"end":{"line":216,"column":19}},"119":{"start":{"line":214,"column":20},"end":{"line":214,"column":44}},"120":{"start":{"line":215,"column":20},"end":{"line":215,"column":46}},"121":{"start":{"line":219,"column":18},"end":{"line":219,"column":30}},"122":{"start":{"line":220,"column":8},"end":{"line":220,"column":52}},"123":{"start":{"line":221,"column":8},"end":{"line":223,"column":12}},"124":{"start":{"line":221,"column":43},"end":{"line":223,"column":10}},"125":{"start":{"line":222,"column":12},"end":{"line":222,"column":41}},"126":{"start":{"line":225,"column":4},"end":{"line":236,"column":8}},"127":{"start":{"line":225,"column":58},"end":{"line":236,"column":6}},"128":{"start":{"line":227,"column":27},"end":{"line":227,"column":83}},"129":{"start":{"line":228,"column":27},"end":{"line":228,"column":136}},"130":{"start":{"line":229,"column":27},"end":{"line":229,"column":82}},"131":{"start":{"line":230,"column":8},"end":{"line":230,"column":196}},"132":{"start":{"line":231,"column":8},"end":{"line":231,"column":56}},"133":{"start":{"line":232,"column":8},"end":{"line":232,"column":132}},"134":{"start":{"line":233,"column":8},"end":{"line":233,"column":137}},"135":{"start":{"line":234,"column":8},"end":{"line":234,"column":56}},"136":{"start":{"line":235,"column":8},"end":{"line":235,"column":192}},"137":{"start":{"line":237,"column":4},"end":{"line":260,"column":8}},"138":{"start":{"line":237,"column":74},"end":{"line":260,"column":6}},"139":{"start":{"line":238,"column":30},"end":{"line":238,"column":139}},"140":{"start":{"line":239,"column":20},"end":{"line":239,"column":114}},"141":{"start":{"line":240,"column":8},"end":{"line":240,"column":28}},"142":{"start":{"line":241,"column":19},"end":{"line":251,"column":9}},"143":{"start":{"line":242,"column":12},"end":{"line":250,"column":15}},"144":{"start":{"line":243,"column":32},"end":{"line":245,"column":25}},"145":{"start":{"line":244,"column":20},"end":{"line":244,"column":46}},"146":{"start":{"line":246,"column":16},"end":{"line":249,"column":19}},"147":{"start":{"line":247,"column":20},"end":{"line":247,"column":44}},"148":{"start":{"line":248,"column":20},"end":{"line":248,"column":46}},"149":{"start":{"line":252,"column":18},"end":{"line":252,"column":30}},"150":{"start":{"line":253,"column":8},"end":{"line":253,"column":52}},"151":{"start":{"line":254,"column":20},"end":{"line":254,"column":75}},"152":{"start":{"line":255,"column":31},"end":{"line":255,"column":140}},"153":{"start":{"line":256,"column":8},"end":{"line":256,"column":53}},"154":{"start":{"line":257,"column":8},"end":{"line":257,"column":105}},"155":{"start":{"line":258,"column":8},"end":{"line":258,"column":64}},"156":{"start":{"line":259,"column":8},"end":{"line":259,"column":323}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":31,"column":45},"end":{"line":31,"column":46}},"loc":{"start":{"line":31,"column":55},"end":{"line":33,"column":1}},"line":31},"9":{"name":"(anonymous_9)","decl":{"start":{"line":34,"column":47},"end":{"line":34,"column":48}},"loc":{"start":{"line":34,"column":57},"end":{"line":36,"column":1}},"line":34},"10":{"name":"(anonymous_10)","decl":{"start":{"line":37,"column":81},"end":{"line":37,"column":82}},"loc":{"start":{"line":37,"column":87},"end":{"line":270,"column":2}},"line":37},"11":{"name":"(anonymous_11)","decl":{"start":{"line":37,"column":121},"end":{"line":37,"column":122}},"loc":{"start":{"line":37,"column":134},"end":{"line":270,"column":1}},"line":37},"12":{"name":"(anonymous_12)","decl":{"start":{"line":56,"column":11},"end":{"line":56,"column":12}},"loc":{"start":{"line":56,"column":17},"end":{"line":60,"column":6}},"line":56},"13":{"name":"(anonymous_13)","decl":{"start":{"line":56,"column":51},"end":{"line":56,"column":52}},"loc":{"start":{"line":56,"column":64},"end":{"line":60,"column":5}},"line":56},"14":{"name":"(anonymous_14)","decl":{"start":{"line":91,"column":86},"end":{"line":91,"column":87}},"loc":{"start":{"line":91,"column":92},"end":{"line":159,"column":6}},"line":91},"15":{"name":"(anonymous_15)","decl":{"start":{"line":91,"column":126},"end":{"line":91,"column":127}},"loc":{"start":{"line":91,"column":139},"end":{"line":159,"column":5}},"line":91},"16":{"name":"(anonymous_16)","decl":{"start":{"line":160,"column":42},"end":{"line":160,"column":43}},"loc":{"start":{"line":160,"column":48},"end":{"line":166,"column":6}},"line":160},"17":{"name":"(anonymous_17)","decl":{"start":{"line":160,"column":82},"end":{"line":160,"column":83}},"loc":{"start":{"line":160,"column":95},"end":{"line":166,"column":5}},"line":160},"18":{"name":"(anonymous_18)","decl":{"start":{"line":167,"column":41},"end":{"line":167,"column":42}},"loc":{"start":{"line":167,"column":47},"end":{"line":224,"column":6}},"line":167},"19":{"name":"(anonymous_19)","decl":{"start":{"line":167,"column":81},"end":{"line":167,"column":82}},"loc":{"start":{"line":167,"column":94},"end":{"line":224,"column":5}},"line":167},"20":{"name":"(anonymous_20)","decl":{"start":{"line":208,"column":19},"end":{"line":208,"column":20}},"loc":{"start":{"line":208,"column":25},"end":{"line":218,"column":9}},"line":208},"21":{"name":"(anonymous_21)","decl":{"start":{"line":209,"column":31},"end":{"line":209,"column":32}},"loc":{"start":{"line":209,"column":52},"end":{"line":217,"column":13}},"line":209},"22":{"name":"(anonymous_22)","decl":{"start":{"line":210,"column":43},"end":{"line":210,"column":44}},"loc":{"start":{"line":210,"column":49},"end":{"line":212,"column":17}},"line":210},"23":{"name":"(anonymous_23)","decl":{"start":{"line":213,"column":63},"end":{"line":213,"column":64}},"loc":{"start":{"line":213,"column":73},"end":{"line":216,"column":17}},"line":213},"24":{"name":"(anonymous_24)","decl":{"start":{"line":221,"column":33},"end":{"line":221,"column":34}},"loc":{"start":{"line":221,"column":43},"end":{"line":223,"column":10}},"line":221},"25":{"name":"(anonymous_25)","decl":{"start":{"line":221,"column":77},"end":{"line":221,"column":78}},"loc":{"start":{"line":221,"column":90},"end":{"line":223,"column":9}},"line":221},"26":{"name":"(anonymous_26)","decl":{"start":{"line":225,"column":52},"end":{"line":225,"column":53}},"loc":{"start":{"line":225,"column":58},"end":{"line":236,"column":6}},"line":225},"27":{"name":"(anonymous_27)","decl":{"start":{"line":225,"column":92},"end":{"line":225,"column":93}},"loc":{"start":{"line":225,"column":105},"end":{"line":236,"column":5}},"line":225},"28":{"name":"(anonymous_28)","decl":{"start":{"line":237,"column":68},"end":{"line":237,"column":69}},"loc":{"start":{"line":237,"column":74},"end":{"line":260,"column":6}},"line":237},"29":{"name":"(anonymous_29)","decl":{"start":{"line":237,"column":108},"end":{"line":237,"column":109}},"loc":{"start":{"line":237,"column":121},"end":{"line":260,"column":5}},"line":237},"30":{"name":"(anonymous_30)","decl":{"start":{"line":241,"column":19},"end":{"line":241,"column":20}},"loc":{"start":{"line":241,"column":25},"end":{"line":251,"column":9}},"line":241},"31":{"name":"(anonymous_31)","decl":{"start":{"line":242,"column":31},"end":{"line":242,"column":32}},"loc":{"start":{"line":242,"column":52},"end":{"line":250,"column":13}},"line":242},"32":{"name":"(anonymous_32)","decl":{"start":{"line":243,"column":43},"end":{"line":243,"column":44}},"loc":{"start":{"line":243,"column":49},"end":{"line":245,"column":17}},"line":243},"33":{"name":"(anonymous_33)","decl":{"start":{"line":246,"column":63},"end":{"line":246,"column":64}},"loc":{"start":{"line":246,"column":73},"end":{"line":249,"column":17}},"line":246}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":29,"column":71},"end":{"line":29,"column":180}},"type":"cond-expr","locations":[{"start":{"line":29,"column":160},"end":{"line":29,"column":171}},{"start":{"line":29,"column":174},"end":{"line":29,"column":180}}],"line":29},"9":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":156}},"type":"cond-expr","locations":[{"start":{"line":29,"column":128},"end":{"line":29,"column":134}},{"start":{"line":29,"column":137},"end":{"line":29,"column":156}}],"line":29},"10":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":125}},"type":"binary-expr","locations":[{"start":{"line":29,"column":72},"end":{"line":29,"column":108}},{"start":{"line":29,"column":112},"end":{"line":29,"column":125}}],"line":29},"11":{"loc":{"start":{"line":133,"column":26},"end":{"line":133,"column":166}},"type":"cond-expr","locations":[{"start":{"line":133,"column":158},"end":{"line":133,"column":160}},{"start":{"line":133,"column":163},"end":{"line":133,"column":166}}],"line":133},"12":{"loc":{"start":{"line":133,"column":26},"end":{"line":133,"column":155}},"type":"binary-expr","locations":[{"start":{"line":133,"column":26},"end":{"line":133,"column":138}},{"start":{"line":133,"column":142},"end":{"line":133,"column":155}}],"line":133},"13":{"loc":{"start":{"line":133,"column":32},"end":{"line":133,"column":128}},"type":"cond-expr","locations":[{"start":{"line":133,"column":89},"end":{"line":133,"column":95}},{"start":{"line":133,"column":98},"end":{"line":133,"column":128}}],"line":133},"14":{"loc":{"start":{"line":133,"column":32},"end":{"line":133,"column":86}},"type":"binary-expr","locations":[{"start":{"line":133,"column":32},"end":{"line":133,"column":56}},{"start":{"line":133,"column":60},"end":{"line":133,"column":86}}],"line":133},"15":{"loc":{"start":{"line":158,"column":27},"end":{"line":158,"column":126}},"type":"cond-expr","locations":[{"start":{"line":158,"column":86},"end":{"line":158,"column":92}},{"start":{"line":158,"column":95},"end":{"line":158,"column":126}}],"line":158},"16":{"loc":{"start":{"line":158,"column":27},"end":{"line":158,"column":83}},"type":"binary-expr","locations":[{"start":{"line":158,"column":27},"end":{"line":158,"column":52}},{"start":{"line":158,"column":56},"end":{"line":158,"column":83}}],"line":158},"17":{"loc":{"start":{"line":181,"column":25},"end":{"line":181,"column":165}},"type":"cond-expr","locations":[{"start":{"line":181,"column":157},"end":{"line":181,"column":159}},{"start":{"line":181,"column":162},"end":{"line":181,"column":165}}],"line":181},"18":{"loc":{"start":{"line":181,"column":25},"end":{"line":181,"column":154}},"type":"binary-expr","locations":[{"start":{"line":181,"column":25},"end":{"line":181,"column":137}},{"start":{"line":181,"column":141},"end":{"line":181,"column":154}}],"line":181},"19":{"loc":{"start":{"line":181,"column":31},"end":{"line":181,"column":127}},"type":"cond-expr","locations":[{"start":{"line":181,"column":88},"end":{"line":181,"column":94}},{"start":{"line":181,"column":97},"end":{"line":181,"column":127}}],"line":181},"20":{"loc":{"start":{"line":181,"column":31},"end":{"line":181,"column":85}},"type":"binary-expr","locations":[{"start":{"line":181,"column":31},"end":{"line":181,"column":55}},{"start":{"line":181,"column":59},"end":{"line":181,"column":85}}],"line":181},"21":{"loc":{"start":{"line":195,"column":51},"end":{"line":195,"column":105}},"type":"cond-expr","locations":[{"start":{"line":195,"column":84},"end":{"line":195,"column":90}},{"start":{"line":195,"column":93},"end":{"line":195,"column":105}}],"line":195},"22":{"loc":{"start":{"line":195,"column":51},"end":{"line":195,"column":81}},"type":"binary-expr","locations":[{"start":{"line":195,"column":51},"end":{"line":195,"column":63}},{"start":{"line":195,"column":67},"end":{"line":195,"column":81}}],"line":195},"23":{"loc":{"start":{"line":230,"column":27},"end":{"line":230,"column":113}},"type":"cond-expr","locations":[{"start":{"line":230,"column":78},"end":{"line":230,"column":84}},{"start":{"line":230,"column":87},"end":{"line":230,"column":113}}],"line":230},"24":{"loc":{"start":{"line":230,"column":27},"end":{"line":230,"column":75}},"type":"binary-expr","locations":[{"start":{"line":230,"column":27},"end":{"line":230,"column":48}},{"start":{"line":230,"column":52},"end":{"line":230,"column":75}}],"line":230},"25":{"loc":{"start":{"line":232,"column":27},"end":{"line":232,"column":110}},"type":"cond-expr","locations":[{"start":{"line":232,"column":78},"end":{"line":232,"column":84}},{"start":{"line":232,"column":87},"end":{"line":232,"column":110}}],"line":232},"26":{"loc":{"start":{"line":232,"column":27},"end":{"line":232,"column":75}},"type":"binary-expr","locations":[{"start":{"line":232,"column":27},"end":{"line":232,"column":48}},{"start":{"line":232,"column":52},"end":{"line":232,"column":75}}],"line":232},"27":{"loc":{"start":{"line":233,"column":27},"end":{"line":233,"column":112}},"type":"cond-expr","locations":[{"start":{"line":233,"column":78},"end":{"line":233,"column":84}},{"start":{"line":233,"column":87},"end":{"line":233,"column":112}}],"line":233},"28":{"loc":{"start":{"line":233,"column":27},"end":{"line":233,"column":75}},"type":"binary-expr","locations":[{"start":{"line":233,"column":27},"end":{"line":233,"column":48}},{"start":{"line":233,"column":52},"end":{"line":233,"column":75}}],"line":233},"29":{"loc":{"start":{"line":235,"column":27},"end":{"line":235,"column":114}},"type":"cond-expr","locations":[{"start":{"line":235,"column":78},"end":{"line":235,"column":84}},{"start":{"line":235,"column":87},"end":{"line":235,"column":114}}],"line":235},"30":{"loc":{"start":{"line":235,"column":27},"end":{"line":235,"column":75}},"type":"binary-expr","locations":[{"start":{"line":235,"column":27},"end":{"line":235,"column":48}},{"start":{"line":235,"column":52},"end":{"line":235,"column":75}}],"line":235},"31":{"loc":{"start":{"line":257,"column":27},"end":{"line":257,"column":88}},"type":"cond-expr","locations":[{"start":{"line":257,"column":64},"end":{"line":257,"column":70}},{"start":{"line":257,"column":73},"end":{"line":257,"column":88}}],"line":257},"32":{"loc":{"start":{"line":257,"column":27},"end":{"line":257,"column":61}},"type":"binary-expr","locations":[{"start":{"line":257,"column":27},"end":{"line":257,"column":41}},{"start":{"line":257,"column":45},"end":{"line":257,"column":61}}],"line":257},"33":{"loc":{"start":{"line":259,"column":27},"end":{"line":259,"column":126}},"type":"cond-expr","locations":[{"start":{"line":259,"column":86},"end":{"line":259,"column":92}},{"start":{"line":259,"column":95},"end":{"line":259,"column":126}}],"line":259},"34":{"loc":{"start":{"line":259,"column":27},"end":{"line":259,"column":83}},"type":"binary-expr","locations":[{"start":{"line":259,"column":27},"end":{"line":259,"column":52}},{"start":{"line":259,"column":56},"end":{"line":259,"column":83}}],"line":259},"35":{"loc":{"start":{"line":259,"column":159},"end":{"line":259,"column":255}},"type":"cond-expr","locations":[{"start":{"line":259,"column":216},"end":{"line":259,"column":222}},{"start":{"line":259,"column":225},"end":{"line":259,"column":255}}],"line":259},"36":{"loc":{"start":{"line":259,"column":159},"end":{"line":259,"column":213}},"type":"binary-expr","locations":[{"start":{"line":259,"column":159},"end":{"line":259,"column":183}},{"start":{"line":259,"column":187},"end":{"line":259,"column":213}}],"line":259}},"s":{"0":1,"1":23,"2":12,"3":8,"4":23,"5":23,"6":0,"7":0,"8":0,"9":0,"10":31,"11":8,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":8,"32":1,"33":3,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":0,"118":1,"119":3,"120":3,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":0,"146":1,"147":2,"148":2,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1},"f":{"0":8,"1":23,"2":12,"3":8,"4":23,"5":0,"6":31,"7":3,"8":8,"9":3,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":3,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":0,"33":2},"b":{"0":[1,1,1],"1":[11,12],"2":[8,8],"3":[8,23],"4":[8,8],"5":[1,1,1],"6":[0,3],"7":[3,3],"8":[0,1],"9":[0,1],"10":[1,1],"11":[1,0],"12":[1,1],"13":[0,1],"14":[1,1],"15":[0,1],"16":[1,1],"17":[1,0],"18":[1,1],"19":[0,1],"20":[1,1],"21":[0,1],"22":[1,1],"23":[0,1],"24":[1,1],"25":[0,1],"26":[1,1],"27":[0,1],"28":[1,1],"29":[0,1],"30":[1,1],"31":[0,1],"32":[1,1],"33":[0,1],"34":[1,1],"35":[0,1],"36":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/AorderScriptTest.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/AorderScriptTest.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport Big from \"big.js\";\r\nimport { use, request } from \"chai\";\r\nimport { expect } from \"chai\";\r\nimport chaiHttp from \"chai-http\";\r\nimport { ethers } from \"ethers\";\r\nimport { connect, OrderCreated, OrderExecuted, Sync, UserPosition } from \"../../DB/db\";\r\nimport { getExchangeAddress, getVersion } from \"../../helper/chain\";\r\nimport {  getProvider, parseEther } from \"../../utils/utils\";\r\nimport { io } from \"socket.io-client\";\r\nimport path from \"path\";\r\nimport { EVENT_NAME } from \"../../socketIo/socket.io\";\r\nimport { getConfig, getContract, } from \"../../helper/constant\";\r\nimport { ifOrderCreated } from \"../../helper/interface\";\r\nuse(chaiHttp);\r\nrequire(\"dotenv\").config({ path: path.resolve(process.cwd(), process.env.NODE_ENV?.includes('test') ? \".env.test\" : \".env\") });\r\nconst socket = io(\"http://localhost:3010\");\r\n\r\n\r\nsocket.on(EVENT_NAME.PAIR_ORDER, (data) => {\r\n    console.log(\"pairOrders\", data)\r\n});\r\n\r\nsocket.on(EVENT_NAME.PAIR_HISTORY, (data) => {\r\n    console.log(\"pairHistory\", data)\r\n})\r\n\r\ndescribe(\"Limit Order => Mint token, create order, execute order, cancel order\", async () => {\r\n\r\n    // requirements\r\n    let chainId = \"421613\"\r\n    let provider = getProvider(chainId);\r\n    let exchange = getContract(\"Exchange\", chainId);\r\n    let btc = getContract(\"BTC\", chainId)\r\n    let usdc = getContract(\"USDC\", chainId)\r\n    let user1 = new ethers.Wallet(process.env.PRIVATE_KEY1! as string).connect(provider); //2\r\n        let user2 = new ethers.Wallet(process.env.PRIVATE_KEY2! as string).connect(provider); //1\r\n    let signatures: any[] = [];\r\n    let orders: any[] = [];\r\n    let exchangeRate = ethers.utils.parseEther('20000').toString();\r\n    let txnId = \"\";\r\n    let orderId = \"\";\r\n    let salt = Math.floor(Math.random() * 9000000);\r\n    let amount = ethers.utils.parseEther('1').toString();\r\n    let orderType = 1; // 1 for sell 0 for buy\r\n    let btcAmount = \"\"\r\n    let userInOrderPre = '0';\r\n    before(async () => { //Before each test we empty the database   \r\n        // await mongoose.createConnection(process.env.MONGO_URL! as string).dropDatabase();\r\n        // httpServer\r\n        await connect()\r\n    });\r\n/*\r\n    it('mint 10 btc to user1, 200000 usdt to user2, approve exchange contract', async () => {\r\n\r\n        let user1BtcBalancePre = (await btc.balanceOf(user1.address)).toString();\r\n        let user2UsdcBalancePre = (await usdc.balanceOf(user2.address)).toString();\r\n\r\n        const btcAmount = ethers.utils.parseEther('10').toString();\r\n        let tx1 = await btc.connect(user1).mint(user1.address, btcAmount, { gasLimit: \"100000000\" });\r\n\r\n        // approve for exchange\r\n        let approve = await btc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256, { gasLimit: \"100000000\" });\r\n        await btc.connect(user2).approve(exchange.address, ethers.constants.MaxUint256,{ gasLimit: \"100000000\" })\r\n\r\n        const usdcAmount = ethers.utils.parseEther('200000').toString();\r\n        let tx2 = await usdc.connect(user2).mint(user2.address, usdcAmount, { gasLimit: \"100000000\" });\r\n\r\n        // approve for exchange\r\n        let approve1 = await usdc.connect(user2).approve(exchange.address, ethers.constants.MaxUint256, { gasLimit: \"100000000\" });\r\n        await usdc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256, { gasLimit: \"100000000\" });\r\n        await approve1.wait(1)\r\n        let user1BtcBalancePost = (await btc.balanceOf(user1.address)).toString();\r\n        let user2UsdcBalancePost = (await usdc.balanceOf(user2.address)).toString();\r\n\r\n        expect(user1BtcBalancePost).to.equal(parseEther(Big(btcAmount).plus(user1BtcBalancePre).toString()));\r\n        expect(user2UsdcBalancePost).to.equal(parseEther(Big(usdcAmount).plus(user2UsdcBalancePre).toString()));\r\n\r\n\r\n    });\r\n\r\n*/\r\n    it(`user1 creates limit order to sell 1 btc @ 20000, check user inOrder Balance`, async () => {\r\n\r\n        const domain = {\r\n            name: getConfig(\"name\"),\r\n            version: getVersion(process.env.NODE_ENV!),\r\n            chainId: chainId.toString(),\r\n            verifyingContract: getExchangeAddress(chainId),\r\n        };\r\n\r\n        // The named list of all type definitions\r\n        const types = {\r\n            Order: [\r\n                { name: 'maker', type: 'address' },\r\n                { name: 'token0', type: 'address' },\r\n                { name: 'token1', type: 'address' },\r\n                { name: 'amount', type: 'uint256' },\r\n                { name: 'orderType', type: 'uint8' },\r\n                { name: 'salt', type: 'uint32' },\r\n                { name: 'exchangeRate', type: 'uint176' },\r\n                { name: 'borrowLimit', type: 'uint32' },\r\n                { name: 'loops', type: 'uint8' }\r\n            ]\r\n        };\r\n\r\n        // The data to sign\r\n        const value = {\r\n            maker: user1.address.toLowerCase(),\r\n            token0: btc.address.toLowerCase(),\r\n            token1: usdc.address.toLowerCase(),\r\n            amount: amount,\r\n            orderType: orderType,\r\n            salt: salt,\r\n            exchangeRate: exchangeRate,\r\n            borrowLimit: 0,\r\n            loops: 0\r\n        };\r\n\r\n        orders.push(value);\r\n        // sign typed data\r\n        const storedSignature = await user1._signTypedData(\r\n            domain,\r\n            types,\r\n            value\r\n        );\r\n        signatures.push(storedSignature);\r\n        console.log([\r\n            value, storedSignature\r\n        ]);\r\n\r\n        let userPositionPre = await UserPosition.findOne({ token: btc.address.toLowerCase(), id: user1.address.toLowerCase() }).lean();\r\n\r\n        let userInOrder = userPositionPre?.inOrderBalance ?? '0';\r\n\r\n        let res = await request(\"http://localhost:3010\")\r\n            .post(`/v/${getVersion(process.env.NODE_ENV!)}/order/create`)\r\n            .send(\r\n                {\r\n                    \"data\": {\r\n                        \"maker\": user1.address.toLowerCase(),\r\n                        \"token0\": btc.address.toLowerCase(),\r\n                        \"token1\": usdc.address.toLowerCase(),\r\n                        \"amount\": amount,\r\n                        \"orderType\": orderType,\r\n                        \"salt\": salt,\r\n                        \"exchangeRate\": exchangeRate,\r\n                        borrowLimit: 0,\r\n                        loops: 0\r\n                    },\r\n                    \"signature\": storedSignature.toLowerCase(),\r\n                    \"chainId\": chainId\r\n                }\r\n            );\r\n\r\n        let userPositionPost = await UserPosition.findOne({ token: btc.address.toLowerCase(), id: user1.address.toLowerCase() }).lean()\r\n        // console.log(res)\r\n        expect(res).to.have.status(201);\r\n        expect(res.body.status).to.be.equal(true);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.message).to.have.string('Order created successfully');\r\n        expect(userPositionPost).not.to.be.null;\r\n        expect(userPositionPost?.inOrderBalance).to.equal(Big(userInOrder).plus(amount).toString())\r\n\r\n    });\r\n\r\n    it(`find created order in data base`, async () => {\r\n\r\n        let data = await OrderCreated.findOne({ signature: signatures[0] }).lean()! as ifOrderCreated;\r\n        expect(data).to.be.an('object');\r\n        expect(data.amount).to.equal(amount);\r\n        expect(data.maker).to.equal(user1.address.toLowerCase());\r\n        orderId = data.id\r\n    })\r\n\r\n    \r\n    it(`user2 buy user1s 0.8 btc order`, async () => {\r\n        // balances\r\n        let user1BtcBalancePre = btc.balanceOf(user1.address);\r\n        let user2BtcBalancePre = btc.balanceOf(user2.address);\r\n        let user2UsdcBalancePre = usdc.balanceOf(user2.address);\r\n        let user1UsdcBalancePre = usdc.balanceOf(user1.address);\r\n        let promise = await Promise.all([user1BtcBalancePre, user2BtcBalancePre, user2UsdcBalancePre, user1UsdcBalancePre])\r\n        user1BtcBalancePre = promise[0].toString();\r\n        user2BtcBalancePre = promise[1].toString()\r\n        user2UsdcBalancePre = promise[2].toString()\r\n        user1UsdcBalancePre = promise[3].toString()\r\n\r\n        // inOrder Balance\r\n        let userPositionPre = await UserPosition.findOne({ token: btc.address.toLowerCase(), id: user1.address.toLowerCase() }).lean();\r\n\r\n        userInOrderPre = userPositionPre?.inOrderBalance ?? '0';\r\n\r\n        btcAmount = ethers.utils.parseEther(`0.8`).toString();\r\n\r\n        const exTxn = await exchange.connect(user2).executeT0LimitOrders(\r\n            [signatures[0]],\r\n            [orders[0]],\r\n            btcAmount,\r\n            { gasLimit: \"100000000\" }\r\n        );\r\n\r\n        await exTxn.wait(1)\r\n        let user1BtcBalancePost = btc.balanceOf(user1.address);\r\n        let user1UsdcBalancePost = usdc.balanceOf(user1.address);\r\n        let user2UsdcBalancePost = usdc.balanceOf(user2.address);\r\n        let user2BtcBalancePost = btc.balanceOf(user2.address);\r\n\r\n        let promise1 = await Promise.all([user1BtcBalancePost, user1UsdcBalancePost, user2UsdcBalancePost, user2BtcBalancePost]);\r\n        user1BtcBalancePost = promise1[0].toString();\r\n        user1UsdcBalancePost = promise1[1].toString();\r\n        user2UsdcBalancePost = promise1[2].toString();\r\n        user2BtcBalancePost = promise1[3].toString();\r\n\r\n        let fee = await Sync.findOne().lean()! as any;\r\n        let makerFeeAmount = Big(fee?.makerFee).div(1e18).times(btcAmount);\r\n        let takerFeeAmount = Big(Big(fee.takerFee).div(1e18)).times(Big(btcAmount));\r\n\r\n        expect(user1BtcBalancePost).to.equal(parseEther(Big(user1BtcBalancePre).minus(btcAmount).toString()));\r\n        expect(user1UsdcBalancePost).to.equal(parseEther(\r\n            Big(user1UsdcBalancePre)\r\n                .plus((Big(btcAmount)\r\n                    .minus(makerFeeAmount))\r\n                    .times(exchangeRate)\r\n                    .div(Big(10).pow(18))).toString()\r\n        ));\r\n        expect(user2BtcBalancePost).to.equal(parseEther(Big(user2BtcBalancePre).plus(Big(btcAmount).minus(takerFeeAmount)).toString()))\r\n        expect(user2UsdcBalancePost).to.equal(parseEther(\r\n            Big(user2UsdcBalancePre)\r\n                .minus(Big(btcAmount)\r\n                    .times(exchangeRate)\r\n                    .div(Big(10).pow(18))).toString()\r\n        ));\r\n\r\n\r\n        let wait = () => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                let timeOutId = setTimeout(() => {\r\n                    return resolve(\"Success\")\r\n                }, 15000)\r\n\r\n                socket.on(EVENT_NAME.PAIR_HISTORY, (data) => {\r\n                    clearTimeout(timeOutId)\r\n                    return resolve(\"Success\")\r\n                })\r\n            })\r\n        }\r\n\r\n        let res = await wait()\r\n        expect(res).to.equal(\"Success\")\r\n\r\n        await exTxn.wait(1).then(async (resp: any) => {\r\n\r\n            txnId = resp.transactionHash\r\n\r\n        })\r\n    });\r\n\r\n\r\n    it(`find executed Order, check inOrderBalance`, async () => {\r\n        // console.log(\"txnId=\",txnId, \"orderId\", orderId)\r\n        let executeOrder = await OrderExecuted.findOne({ id: orderId }).lean();\r\n        let userPosition = await UserPosition.findOne({ id: user1.address.toLowerCase(), token: btc.address.toLowerCase() }).lean()! as any;\r\n        let orderCreated = await OrderCreated.findOne({ id: orderId }).lean()! as any;\r\n\r\n        expect(orderCreated?.balanceAmount).to.equal(Big(orderCreated.amount).minus(btcAmount).toString())\r\n        expect(executeOrder).not.to.be.null;\r\n        expect(executeOrder?.fillAmount).to.equal(btcAmount);\r\n        expect(executeOrder?.exchangeRate).to.equal(exchangeRate);\r\n        expect(userPosition).not.to.be.null;\r\n        expect(userPosition?.inOrderBalance).to.equal(Big(userInOrderPre).minus(btcAmount).toString())\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n    it(`user1 cancell order 0.2 btc, check order, inOrderbalance `, async () => {\r\n\r\n        let userPositionPre = await UserPosition.findOne({ id: user1.address.toLowerCase(), token: btc.address.toLowerCase() }).lean()\r\n\r\n        let exTxn = await exchange.connect(user1).cancelOrder(\r\n            signatures[0],\r\n            orders[0],\r\n            { gasLimit: \"100000000\" }\r\n        )\r\n\r\n        await exTxn.wait(1);\r\n\r\n        let wait = () => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                let timeOutId = setTimeout(() => {\r\n                    return resolve(\"Success\")\r\n                }, 15000)\r\n\r\n                socket.on(EVENT_NAME.CANCEL_ORDER, (data) => {\r\n                    clearTimeout(timeOutId)\r\n                    return resolve(\"Success\")\r\n                })\r\n            })\r\n        }\r\n        let res = await wait()\r\n        expect(res).to.equal(\"Success\")\r\n        let order = await OrderCreated.findOne({ id: orderId }).lean();\r\n        let userPositionPost = await UserPosition.findOne({ id: user1.address.toLowerCase(), token: btc.address.toLowerCase() }).lean()\r\n        expect(order).to.be.an('object');\r\n        expect(order?.cancelled).to.equal(true);\r\n        expect(userPositionPost).to.be.an('object');\r\n        expect(userPositionPost?.inOrderBalance).to.equal(Big(userPositionPre?.inOrderBalance! as string).minus(Big(amount).minus(btcAmount)).toString());\r\n\r\n\r\n    })\r\n\r\n    // it(`it will get events`,(done)=>{\r\n\r\n    //     socket.on(EVENT_NAME.PAIR_HISTORY, (data) => {\r\n\r\n    //         expect(data).not.to.be.null;\r\n\r\n    //     })\r\n    //     socket.on(EVENT_NAME.PAIR_ORDER, (data) => {\r\n\r\n    //         expect(data).not.to.be.null;\r\n    //         done()\r\n    //     })\r\n\r\n    // })\r\n\r\n\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5af2a2c6fb8dfa16584b6a29e6a9f8411a030ac3","contentHash":"54c28a156cae412d7037fbdf8ed90dd4cceffa49079daf3510c53e2e2c433913"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\DB\\db.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\DB\\db.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":204}},"16":{"start":{"line":16,"column":19},"end":{"line":16,"column":55}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":47}},"18":{"start":{"line":18,"column":15},"end":{"line":18,"column":58}},"19":{"start":{"line":19,"column":22},"end":{"line":19,"column":72}},"20":{"start":{"line":20,"column":23},"end":{"line":20,"column":74}},"21":{"start":{"line":21,"column":24},"end":{"line":21,"column":76}},"22":{"start":{"line":22,"column":16},"end":{"line":22,"column":60}},"23":{"start":{"line":23,"column":23},"end":{"line":23,"column":74}},"24":{"start":{"line":24,"column":16},"end":{"line":24,"column":42}},"25":{"start":{"line":27,"column":0},"end":{"line":27,"column":84}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":49}},"27":{"start":{"line":29,"column":8},"end":{"line":29,"column":64}},"28":{"start":{"line":30,"column":0},"end":{"line":30,"column":8}},"29":{"start":{"line":31,"column":15},"end":{"line":31,"column":26}},"30":{"start":{"line":32,"column":0},"end":{"line":32,"column":144}},"31":{"start":{"line":33,"column":27},"end":{"line":33,"column":97}},"32":{"start":{"line":34,"column":0},"end":{"line":34,"column":48}},"33":{"start":{"line":35,"column":13},"end":{"line":35,"column":61}},"34":{"start":{"line":36,"column":0},"end":{"line":36,"column":20}},"35":{"start":{"line":37,"column":20},"end":{"line":37,"column":82}},"36":{"start":{"line":38,"column":0},"end":{"line":38,"column":34}},"37":{"start":{"line":39,"column":21},"end":{"line":39,"column":85}},"38":{"start":{"line":40,"column":0},"end":{"line":40,"column":36}},"39":{"start":{"line":41,"column":22},"end":{"line":41,"column":88}},"40":{"start":{"line":42,"column":0},"end":{"line":42,"column":38}},"41":{"start":{"line":43,"column":14},"end":{"line":43,"column":64}},"42":{"start":{"line":44,"column":0},"end":{"line":44,"column":22}},"43":{"start":{"line":45,"column":21},"end":{"line":45,"column":85}},"44":{"start":{"line":46,"column":0},"end":{"line":46,"column":36}},"45":{"start":{"line":48,"column":4},"end":{"line":58,"column":7}},"46":{"start":{"line":50,"column":8},"end":{"line":56,"column":11}},"47":{"start":{"line":52,"column":12},"end":{"line":52,"column":48}},"48":{"start":{"line":55,"column":12},"end":{"line":55,"column":29}},"49":{"start":{"line":57,"column":8},"end":{"line":57,"column":33}},"50":{"start":{"line":60,"column":0},"end":{"line":60,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"connect","decl":{"start":{"line":47,"column":9},"end":{"line":47,"column":16}},"loc":{"start":{"line":47,"column":19},"end":{"line":59,"column":1}},"line":47},"9":{"name":"(anonymous_9)","decl":{"start":{"line":48,"column":43},"end":{"line":48,"column":44}},"loc":{"start":{"line":48,"column":56},"end":{"line":58,"column":5}},"line":48},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":18},"end":{"line":51,"column":19}},"loc":{"start":{"line":51,"column":24},"end":{"line":53,"column":9}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":54,"column":19},"end":{"line":54,"column":20}},"loc":{"start":{"line":54,"column":26},"end":{"line":56,"column":9}},"line":54}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":0,"2":0,"3":6,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":6,"11":6,"12":1,"13":8,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":6,"46":6,"47":6,"48":0,"49":6,"50":1},"f":{"0":6,"1":0,"2":0,"3":6,"4":0,"5":0,"6":6,"7":8,"8":6,"9":6,"10":6,"11":0},"b":{"0":[1,1,1],"1":[0,0],"2":[6,6],"3":[6,0],"4":[6,6],"5":[1,1,1],"6":[6,2],"7":[8,8]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/DB/db.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/DB/db.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,wDAAgC;AAEhC,gDAAwB;AACxB,2DAAyC;AACzC,yEAAuD;AACvD,2EAAyD;AACzD,6EAA2D;AAC3D,6DAA2C;AAC3C,2EAAyD;AACzD,2CAA6C;AAE7C,kIAAkI;AAClI,6BAA6B;AAC7B,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,YAAY,CAAC,EAAE,CAAC,CAAA;AACzE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAC,aAAa,CAAC,CAAA;AAC/C,IAAI,CAAC,GAAG,IAAA,kBAAU,EAAC,OAAO,CAAC,GAAG,CAAC,QAAS,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;AACpD,CAAC,CAAC,GAAG,EAAE,CAAA;AACP,IAAI,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AAEb,QAAA,gBAAgB,GAAG,kBAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,gBAAgB,QAAQ,8BAAyC,CAAC,CAAC;AAEtJ,MAAM,kBAAkB,GAAQ,wBAAgB,CAAC,KAAK,CAAC,cAAc,EAAE,sBAAkB,CAAC,CAAC;AA+BJ,gDAAkB;AA9BzG,MAAM,IAAI,GAAG,kBAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,cAAU,CAAC,CAAC;AA8BvC,oBAAI;AA7Bb,MAAM,WAAW,GAAG,kBAAQ,CAAC,KAAK,CAAC,aAAa,EAAE,qBAAiB,CAAC,CAAC;AA6B7C,kCAAW;AA5BnC,MAAM,YAAY,GAAG,kBAAQ,CAAC,KAAK,CAAC,cAAc,EAAE,sBAAkB,CAAC,CAAC;AA4BnC,oCAAY;AA3BjD,MAAM,aAAa,GAAG,kBAAQ,CAAC,KAAK,CAAC,eAAe,EAAE,uBAAmB,CAAC,CAAC;AA2BxB,sCAAa;AA1BhE,MAAM,KAAK,GAAG,kBAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,eAAW,CAAC,CAAC;AA0Be,sBAAK;AAzBvE,MAAM,YAAY,GAAG,kBAAQ,CAAC,KAAK,CAAC,cAAc,EAAE,sBAAkB,CAAC,CAAC;AAyBC,oCAAY;AAnBrF,SAAe,OAAO;;QAElB,yGAAyG;QACzG,kBAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,QAAQ,8BAAyC,CAAC;aAC/F,IAAI,CAAC,GAAG,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAA;QACvC,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QACpB,CAAC,CACA,CAAC;QACN,wBAAgB,CAAA;IACpB,CAAC;CAAA;AAOc,0BAAO","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nimport path from 'path';\r\nimport SyncSchema from \"../schemas/Sync\";\r\nimport PairCreatedSchema from \"../schemas/PairCreated\";\r\nimport OrderCreatedSchema from \"../schemas/OrderCreated\";\r\nimport OrderExecutedSchema from \"../schemas/OrderExecuted\";\r\nimport TokenSchema from \"../schemas/Token\";\r\nimport UserPositionSchema from \"../schemas/UserPosition\";\r\nimport { getVersion } from \"../helper/chain\";\r\n\r\n// require(\"dotenv\").config({ path: path.resolve(process.cwd(), process.env.NODE_ENV?.includes('test') ? \".env.test\" : \".env\") });\r\n// require(\"dotenv\").config()\r\nrequire('dotenv').config({ path: path.resolve(__dirname, '../../.env') })\r\nconsole.log(process.env.NODE_ENV,\"ENV from DB\")\r\nlet a = getVersion(process.env.NODE_ENV!).split('.')\r\na.pop()\r\nlet _version = a.join(\"_\")\r\n\r\nexport const backupConnection = mongoose.createConnection(process.env.MONGO_URL1 + `-backup-zexe-${_version}?retryWrites=true&w=majority`! as string);\r\n\r\nconst OrderCreatedBackup: any = backupConnection.model(\"OrderCreated\", OrderCreatedSchema);\r\nconst Sync = mongoose.model(\"Sync\", SyncSchema);\r\nconst PairCreated = mongoose.model(\"PairCreated\", PairCreatedSchema);\r\nconst OrderCreated = mongoose.model(\"OrderCreated\", OrderCreatedSchema);\r\nconst OrderExecuted = mongoose.model(\"OrderExecuted\", OrderExecutedSchema);\r\nconst Token = mongoose.model(\"Token\", TokenSchema);\r\nconst UserPosition = mongoose.model(\"UserPosition\", UserPositionSchema);\r\n\r\n\r\n\r\n\r\n\r\nasync function connect() {\r\n\r\n    // mongoose.connect(process.env.MONGO_URL+`test-zexe-arbitrum006?retryWrites=true&w=majority`! as string)\r\n    mongoose.connect(process.env.MONGO_URL + `-zexe-${_version}?retryWrites=true&w=majority`! as string)\r\n        .then(() => {\r\n            console.log(\"MongoDb is connected\")\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        }\r\n        );\r\n    backupConnection\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport { Sync, connect, PairCreated, OrderCreated, OrderExecuted, Token, UserPosition, OrderCreatedBackup };\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"06688e137fccb3cfb0b82cdc0141031c099679b5","contentHash":"c9cd4a9bfd7547e8e5fbe125638a85bfad3ec16620d319358706f86b281dc587"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\Sync.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\Sync.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":27},"end":{"line":13,"column":24}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/Sync.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/Sync.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,kBAAkB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAE3C,mBAAmB,EAAE,MAAM;IAC3B,kBAAkB,EAAE,MAAM;IAC1B,OAAO,EAAE,MAAM;IACf,QAAQ,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;IACrC,QAAQ,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;CAExC,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAEF,kBAAe,kBAAkB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst exchangeSyncSchema = new mongoose.Schema({\r\n\r\n    blockNumberExchange: Number,\r\n    pageNumberExchange: Number,\r\n    chainId: String,\r\n    makerFee: {type:String, default: '0'},\r\n    takerFee: {type:String, default: '0'}\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\nexport default exchangeSyncSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"de7b66410b2e3a034d1e8a4986fb7bfa9a5d595b","contentHash":"8da8cf6c98f1dcce4262636dcf7f37378cc21297b836d5b581f7ec83a3c670da"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\PairCreated.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\PairCreated.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":26},"end":{"line":19,"column":24}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/PairCreated.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/PairCreated.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,iBAAiB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAC1C,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAChD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,oBAAoB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACtD,cAAc,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAChD,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC9C,SAAS,EAAE,MAAM;IACjB,OAAO,EAAE,MAAM;IACf,MAAM,EAAE,MAAM;IACd,aAAa,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;IAChD,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;CAE3C,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,iBAAiB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst PairCreatedSchema = new mongoose.Schema({\r\n    id: { type: String, required: true, trim: true },\r\n    token0: { type: String, required: true, trim: true },\r\n    token1: { type: String, required: true, trim: true },\r\n    exchangeRateDecimals: { type: String, required: true },\r\n    minToken0Order: { type: String, required: true },\r\n    exchangeRate: { type: String, required: true },\r\n    priceDiff: String,\r\n    chainId: String,\r\n    symbol: String,\r\n    marginEnabled: { type: Boolean, default: false },\r\n    active: { type: Boolean, default: true }\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default PairCreatedSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1215fb2a15bb76854be7827947841c1236858e85","contentHash":"868bcc8c97b3de2682e9235051d7c67fddc15e205cb76886888b757755e5deb1"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\OrderCreated.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\OrderCreated.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":27},"end":{"line":30,"column":24}},"5":{"start":{"line":31,"column":0},"end":{"line":31,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/OrderCreated.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/OrderCreated.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,kBAAkB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAC3C,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAChD,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACvD,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClD,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACnD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC1D,oBAAoB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClE,aAAa,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC3D,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;IACzC,OAAO,EAAE,MAAM;IACf,GAAG,EAAE,MAAM;IACX,SAAS,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;IAC5C,SAAS,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAC;IACvC,WAAW,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;IACxC,KAAK,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;IAClC,iBAAiB,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;IAC9C,iBAAiB,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;IAC9C,UAAU,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;CAC1C,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,kBAAkB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst OrderCreatedSchema = new mongoose.Schema({\r\n    id: { type: String, required: true, trim: true },\r\n    signature: { type: String, required: true, trim: true },\r\n    pair: { type: String, required: true, trim: true },\r\n    maker: { type: String, required: true, trim: true },\r\n    token0: { type: String, required: true, trim: true },\r\n    token1: { type: String, required: true, trim: true },\r\n    salt: { type: String, required: true, trim: true },\r\n    amount: { type: String, required: true, trim: true },\r\n    exchangeRate: { type: String, required: true, trim: true },\r\n    exchangeRateDecimals: { type: String, required: true, trim: true },\r\n    balanceAmount: { type: String, required: true, trim: true },\r\n    deleted: { type: Boolean, required: true },\r\n    active: { type: Boolean, required: true },\r\n    chainId: String,\r\n    cid: String,\r\n    cancelled: { type: Boolean, default: false },\r\n    orderType: {type:Number, require: true},\r\n    borrowLimit: {type:String, default: '0'},\r\n    loops: {type:String, default: '0'},\r\n    lastInOrderToken0: {type:String, default: '0'},\r\n    lastInOrderToken1: {type:String, default: '0'},\r\n    fillAmount: {type:String, default: '0'}, \r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default OrderCreatedSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"43c142de871274bc4f708da081bf7951fdbfd287","contentHash":"9116982632c4215793c1c7023c4a0ae0a5fc305e32b9288b96efdb537a6f633c"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\OrderExecuted.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\OrderExecuted.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":28},"end":{"line":20,"column":24}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/OrderExecuted.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/OrderExecuted.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,mBAAmB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAC5C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvC,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC7C,cAAc,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAChD,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAChD,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACnD,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACxD,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClD,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC1D,oBAAoB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClE,SAAS,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAC;IACvC,OAAO,EAAE,MAAM;IACf,QAAQ,EAAE,MAAM;CAEnB,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,mBAAmB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst OrderExecutedSchema = new mongoose.Schema({\r\n    txnId: { type: String, required: true },\r\n    blockNumber: { type: Number, required: true },\r\n    blockTimestamp: { type: Number, required: true },\r\n    id: { type: String, required: true, trim: true },\r\n    taker: { type: String, required: true, trim: true },\r\n    fillAmount: { type: String, required: true, trim: true },\r\n    pair: { type: String, required: true, trim: true },\r\n    exchangeRate: { type: String, required: true, trim: true },\r\n    exchangeRateDecimals: { type: Number, required: true, trim: true },\r\n    orderType: {type:Number, require: true},\r\n    chainId: String,\r\n    logIndex: Number\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default OrderExecutedSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5e7ed6ec22551d3006e42a412b869b5f8277e00c","contentHash":"c0630133bf6c9e1cfebc7fa2a318172d2cdc021b538523411ba125cea228841a"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\Token.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\Token.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":20},"end":{"line":18,"column":24}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/Token.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/Token.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,WAAW,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAEpC,EAAE,EAAE,MAAM;IACV,IAAI,EAAE,MAAM;IACZ,MAAM,EAAE,MAAM;IACd,KAAK,EAAE,MAAM;IACb,QAAQ,EAAE,MAAM;IAChB,OAAO,EAAE,MAAM;IACf,aAAa,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;IAChD,GAAG,EAAE,MAAM;IACX,cAAc,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE;IACxD,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;CAE3C,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,WAAW,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst TokenSchema = new mongoose.Schema({\r\n\r\n    id: String,\r\n    name: String,\r\n    symbol: String,\r\n    price: Number,\r\n    decimals: Number,\r\n    chainId: String,\r\n    marginEnabled: { type: Boolean, default: false },\r\n    cId: String,\r\n    minTokenAmount: { type: String, default: \"10000000000\" },\r\n    active: { type: Boolean, default: true }\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default TokenSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8a4858e605dc6b83a8914f742503d67c7756efaa","contentHash":"1ce6783cd1f3c35e4eb7fc816600c54b00e346e6123f4c46052fa128049ea44f"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\UserPosition.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\UserPosition.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":27},"end":{"line":12,"column":24}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/UserPosition.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/UserPosition.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,kBAAkB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAE3C,EAAE,EAAE,MAAM;IACV,KAAK,EAAE,MAAM;IACb,cAAc,EAAE,EAAC,IAAI,EAAC,MAAM,EAAC,OAAO,EAAE,GAAG,EAAC;IAC1C,OAAO,EAAE,MAAM;CAElB,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,kBAAkB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst UserPositionSchema = new mongoose.Schema({\r\n\r\n    id: String,\r\n    token: String,\r\n    inOrderBalance: {type:String,default: '0'},\r\n    chainId: String\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default UserPositionSchema;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f9519e34854159fe6181015df776e35d620af047","contentHash":"c12aacc70af3460437f938cc4728ededf7bc9e112269b9ad2cbc534e080f2df0"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\helper\\chain.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\helper\\chain.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":154}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":40}},"4":{"start":{"line":7,"column":14},"end":{"line":14,"column":5}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":24}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":32}},"7":{"start":{"line":19,"column":14},"end":{"line":22,"column":5}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":24}},"9":{"start":{"line":25,"column":0},"end":{"line":25,"column":48}},"10":{"start":{"line":27,"column":14},"end":{"line":30,"column":5}},"11":{"start":{"line":31,"column":4},"end":{"line":31,"column":20}},"12":{"start":{"line":33,"column":0},"end":{"line":33,"column":32}},"13":{"start":{"line":35,"column":14},"end":{"line":38,"column":5}},"14":{"start":{"line":39,"column":4},"end":{"line":39,"column":20}},"15":{"start":{"line":41,"column":0},"end":{"line":41,"column":30}},"16":{"start":{"line":43,"column":14},"end":{"line":46,"column":5}},"17":{"start":{"line":47,"column":4},"end":{"line":47,"column":24}},"18":{"start":{"line":49,"column":0},"end":{"line":49,"column":42}},"19":{"start":{"line":51,"column":14},"end":{"line":55,"column":5}},"20":{"start":{"line":56,"column":4},"end":{"line":56,"column":24}},"21":{"start":{"line":58,"column":0},"end":{"line":58,"column":50}}},"fnMap":{"0":{"name":"getRpcLink","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":19}},"loc":{"start":{"line":6,"column":29},"end":{"line":16,"column":1}},"line":6},"1":{"name":"getExchangeAddress","decl":{"start":{"line":18,"column":9},"end":{"line":18,"column":27}},"loc":{"start":{"line":18,"column":37},"end":{"line":24,"column":1}},"line":18},"2":{"name":"getVersion","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":19}},"loc":{"start":{"line":26,"column":25},"end":{"line":32,"column":1}},"line":26},"3":{"name":"getLatest","decl":{"start":{"line":34,"column":9},"end":{"line":34,"column":18}},"loc":{"start":{"line":34,"column":24},"end":{"line":40,"column":1}},"line":34},"4":{"name":"getLeverAddress","decl":{"start":{"line":42,"column":9},"end":{"line":42,"column":24}},"loc":{"start":{"line":42,"column":34},"end":{"line":48,"column":1}},"line":42},"5":{"name":"getMulticallAddress","decl":{"start":{"line":50,"column":9},"end":{"line":50,"column":28}},"loc":{"start":{"line":50,"column":38},"end":{"line":57,"column":1}},"line":50}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":19,"5":19,"6":1,"7":5,"8":5,"9":1,"10":13,"11":13,"12":1,"13":0,"14":0,"15":1,"16":0,"17":0,"18":1,"19":0,"20":0,"21":1},"f":{"0":19,"1":5,"2":13,"3":0,"4":0,"5":0},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/helper/chain.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/helper/chain.ts"],"names":[],"mappings":";;;AAAA,wDAAkF;AAClF,yCAA2D;AAI3D,SAAgB,UAAU,CAAC,OAAe;IAEtC,IAAI,GAAG,GAAQ;QACX,YAAY,EAAE,2BAA2B;QACzC,qFAAqF;QACrF,kFAAkF;QAClF,QAAQ,EAAE,sEAAsE;QAChF,YAAY,EAAE,4BAA4B;QAC1C,OAAO,EAAE,uBAAuB;KACnC,CAAC;IAEF,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC;AACxB,CAAC;AAZD,gCAYC;AAED,SAAgB,kBAAkB,CAAC,OAAe;IAC9C,IAAI,GAAG,GAAQ;QACX,QAAQ,EAAE,IAAA,6BAAkB,EAAC,UAAU,CAAC;QACxC,OAAO,EAAE,IAAA,kCAAsB,EAAC,UAAU,CAAC;KAC9C,CAAA;IAED,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;AACvB,CAAC;AAPD,gDAOC;AAED,SAAgB,UAAU,CAAC,GAAW;IAClC,IAAI,GAAG,GAAQ;QACX,KAAK,EAAE,IAAA,oBAAS,EAAC,SAAS,CAAC;QAC3B,MAAM,EAAE,IAAA,yBAAa,EAAC,SAAS,CAAC;KACnC,CAAA;IACD,OAAO,GAAG,CAAC,GAAG,CAAC,CAAA;AACnB,CAAC;AAND,gCAMC;AAED,SAAgB,SAAS,CAAC,GAAW;IACjC,IAAI,GAAG,GAAQ;QACX,KAAK,EAAE,IAAA,oBAAS,EAAC,QAAQ,CAAC;QAC1B,MAAM,EAAE,IAAA,yBAAa,EAAC,QAAQ,CAAC;KAClC,CAAA;IACD,OAAO,GAAG,CAAC,GAAG,CAAC,CAAA;AACnB,CAAC;AAND,8BAMC;AAGD,SAAgB,eAAe,CAAC,OAAe;IAC3C,IAAI,GAAG,GAAQ;QACX,QAAQ,EAAE,IAAA,6BAAkB,EAAC,OAAO,CAAC;QACrC,OAAO,EAAE,IAAA,kCAAsB,EAAC,OAAO,CAAC;KAC3C,CAAA;IAED,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;AACvB,CAAC;AAPD,0CAOC;AAGD,SAAgB,mBAAmB,CAAC,OAAe;IAC/C,IAAI,GAAG,GAAQ;QACX,YAAY,EAAE,4CAA4C;QAC1D,QAAQ,EAAE,IAAA,6BAAkB,EAAC,YAAY,CAAC;QAC1C,OAAO,EAAE,IAAA,kCAAsB,EAAC,YAAY,CAAC;KAChD,CAAA;IAED,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;AACvB,CAAC;AARD,kDAQC","sourcesContent":["import { getTestConfig, getTestContractAddress, } from \"../test/helper/addresses\";\r\nimport { getConfig, getContractAddress } from \"./constant\";\r\n\r\n\r\n\r\nexport function getRpcLink(chainId: string): string {\r\n\r\n    let map: any = {\r\n        \"1666700000\": \"https://api.s0.b.hmny.io/\",\r\n        // \"421613\": \"https://arbitrum-goerli.infura.io/v3/bb621c9372d048979f8677ba78fe41d7\",\r\n        // \"421613\": \"https://nd-389-970-162.p2pify.com/17b0fbe8312c9ff963057d537b9c7864\",\r\n        \"421613\": \"https://arb-goerli.g.alchemy.com/v2/HyNaane88yHFsK8Yrn4gf2OOzHkd6GAJ\",\r\n        \"1313161555\": \"https://testnet.aurora.dev\",\r\n        \"31337\": \"http://localhost:8545\"\r\n    };\r\n\r\n    return map[chainId];\r\n}\r\n\r\nexport function getExchangeAddress(chainId: string): string {\r\n    let map: any = {\r\n        \"421613\": getContractAddress(\"Exchange\"),\r\n        \"31337\": getTestContractAddress(\"Exchange\")\r\n    }\r\n\r\n    return map[chainId]\r\n}\r\n\r\nexport function getVersion(env: string): string {\r\n    let map: any = {\r\n        \"dev\": getConfig(\"version\"),\r\n        \"test\": getTestConfig(\"version\")\r\n    }\r\n    return map[env]\r\n}\r\n\r\nexport function getLatest(env: string){\r\n    let map: any = {\r\n        \"dev\": getConfig(\"latest\"),\r\n        \"test\": getTestConfig(\"latest\")\r\n    }\r\n    return map[env]\r\n}\r\n\r\n\r\nexport function getLeverAddress(chainId: string) {\r\n    let map: any = {\r\n        \"421613\": getContractAddress(\"Lever\"),\r\n        \"31337\": getTestContractAddress(\"Lever\")\r\n    }\r\n\r\n    return map[chainId]\r\n}\r\n\r\n\r\nexport function getMulticallAddress(chainId: string) {\r\n    let map: any = {\r\n        \"1313161555\": \"0x266CCfe718EAac46ABF8589Dc8833f3A73a0Bd1c\",\r\n        \"421613\": getContractAddress(\"Multicall2\"),\r\n        \"31337\": getTestContractAddress(\"Multicall2\")\r\n    }\r\n\r\n    return map[chainId]\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ced9d9db97ec6c3fd0033623de61e35f90b99720","contentHash":"530280a9b379773bfacd353131d39366df366ed97f1de0572c471065827ddb3d"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\helper\\addresses.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\helper\\addresses.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":83}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":43}},"5":{"start":{"line":8,"column":0},"end":{"line":11,"column":2}},"6":{"start":{"line":13,"column":19},"end":{"line":13,"column":108}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":24}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":38}},"9":{"start":{"line":18,"column":22},"end":{"line":18,"column":115}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":67}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"getTestConfig","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":22}},"loc":{"start":{"line":12,"column":29},"end":{"line":15,"column":1}},"line":12},"2":{"name":"getTestContractAddress","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":31}},"loc":{"start":{"line":17,"column":38},"end":{"line":20,"column":1}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":13,"7":13,"8":1,"9":5,"10":5,"11":1},"f":{"0":1,"1":13,"2":5},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/helper/addresses.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/helper/addresses.ts"],"names":[],"mappings":";;;;;;AACA,4CAAoB;AAGP,QAAA,QAAQ,GAAG;IACpB,KAAK,EAAE,EAAE;IACT,MAAM,EAAE,EAAE;CACb,CAAC;AAKF,SAAgB,aAAa,CAAC,IAAS;IAEnC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAE,CAAC,YAAY,CAAE,SAAS,GAAE,yBAAyB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC/F,OAAO,MAAM,CAAC,IAAI,CAAC,CAAA;AACvB,CAAC;AAJD,sCAIC;AAED,SAAgB,sBAAsB,CAAC,IAAY;IAC/C,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAE,CAAC,YAAY,CAAC,SAAS,GAAG,6BAA6B,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IACtG,OAAO,WAAW,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAA;AAClE,CAAC;AAHD,wDAGC","sourcesContent":["\r\nimport fs from \"fs\";\r\n\r\n\r\nexport const Decimals = {\r\n    token: 18,\r\n    amount: 18\r\n};\r\n\r\n\r\n\r\n\r\nexport function getTestConfig(name: any) {\r\n\r\n    const Config = JSON.parse((fs.readFileSync( __dirname+ \"/deployment/config.json\")).toString());\r\n    return Config[name]\r\n}\r\n\r\nexport function getTestContractAddress(name: string) {\r\n    let Deployments = JSON.parse((fs.readFileSync(__dirname + \"/deployment/deployment.json\")).toString());\r\n    return Deployments[\"contracts\"][name][\"address\"].toLowerCase()\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6b3c5be9d2ceb872cc0d1f575bef883781a892a6","contentHash":"4852fcd85a8a6c24d1e76ef1012de9afc3c0fb123b3c31b7ae8ab837fbbc182c"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\helper\\constant.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\helper\\constant.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":97}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":34}},"5":{"start":{"line":8,"column":13},"end":{"line":8,"column":43}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":47}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":41}},"8":{"start":{"line":11,"column":0},"end":{"line":14,"column":2}},"9":{"start":{"line":16,"column":17},"end":{"line":16,"column":135}},"10":{"start":{"line":17,"column":4},"end":{"line":17,"column":24}},"11":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}},"12":{"start":{"line":21,"column":22},"end":{"line":21,"column":145}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":67}},"14":{"start":{"line":24,"column":0},"end":{"line":24,"column":48}},"15":{"start":{"line":26,"column":19},"end":{"line":26,"column":52}},"16":{"start":{"line":27,"column":14},"end":{"line":27,"column":46}},"17":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"18":{"start":{"line":29,"column":8},"end":{"line":29,"column":46}},"19":{"start":{"line":31,"column":9},"end":{"line":33,"column":5}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":43}},"21":{"start":{"line":34,"column":4},"end":{"line":34,"column":81}},"22":{"start":{"line":36,"column":0},"end":{"line":36,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"getConfig","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":18}},"loc":{"start":{"line":15,"column":25},"end":{"line":18,"column":1}},"line":15},"2":{"name":"getContractAddress","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":27}},"loc":{"start":{"line":20,"column":34},"end":{"line":23,"column":1}},"line":20},"3":{"name":"getContract","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":20}},"loc":{"start":{"line":25,"column":36},"end":{"line":35,"column":1}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":33,"column":5}},{"start":{"line":28,"column":4},"end":{"line":33,"column":5}}],"line":28},"4":{"loc":{"start":{"line":31,"column":9},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":9},"end":{"line":33,"column":5}},{"start":{"line":31,"column":9},"end":{"line":33,"column":5}}],"line":31}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":21,"10":21,"11":1,"12":25,"13":25,"14":1,"15":15,"16":15,"17":15,"18":3,"19":12,"20":2,"21":15,"22":1},"f":{"0":2,"1":21,"2":25,"3":15},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[3,12],"4":[2,10]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/helper/constant.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/helper/constant.ts"],"names":[],"mappings":";;;;;;AACA,mCAAgC;AAChC,4CAAoB;AACpB,gDAAwB;AACxB,0CAAqD;AAQxC,QAAA,QAAQ,GAAG;IACpB,KAAK,EAAE,EAAE;IACT,MAAM,EAAE,EAAE;CACb,CAAC;AAEF,SAAgB,SAAS,CAAC,IAAS;IAC/B,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAE,CAAC,YAAY,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAChH,OAAO,MAAM,CAAC,IAAI,CAAC,CAAA;AACvB,CAAC;AAHD,8BAGC;AAGD,SAAgB,kBAAkB,CAAC,IAAY;IAC3C,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAE,CAAC,YAAY,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,aAAa,EAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC1H,OAAO,WAAW,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAA;AAClE,CAAC;AAHD,gDAGC;AAGD,SAAgB,WAAW,CAAC,IAAY,EAAE,OAAY;IAElD,IAAI,QAAQ,GAAG,IAAA,mBAAW,EAAC,OAAO,CAAC,CAAC;IACpC,IAAI,GAAG,GAAG,IAAA,cAAM,EAAC,WAAW,CAAC,CAAC;IAC9B,IAAI,IAAI,IAAI,UAAU,EAAE;QACpB,GAAG,GAAG,IAAA,cAAM,EAAC,UAAU,CAAC,CAAC;KAC5B;SACI,IAAI,IAAI,IAAI,OAAO,EAAE;QACtB,GAAG,GAAG,IAAA,cAAM,EAAC,OAAO,CAAC,CAAC;KACzB;IACD,OAAO,IAAI,eAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAA;AACvE,CAAC;AAXD,kCAWC","sourcesContent":["\r\nimport { ethers } from \"ethers\";\r\nimport fs from \"fs\";\r\nimport path from \"path\";\r\nimport { getABI, getProvider } from \"../utils/utils\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const Decimals = {\r\n    token: 18,\r\n    amount: 18\r\n};\r\n\r\nexport function getConfig(name: any) {\r\n    let Config = JSON.parse((fs.readFileSync(path.join(__dirname, '..', 'deployments', 'config.json'))).toString());\r\n    return Config[name]\r\n}\r\n\r\n\r\nexport function getContractAddress(name: string) {\r\n    let Deployments = JSON.parse((fs.readFileSync(path.join(__dirname, '..', 'deployments', 'deployments.json'))).toString());\r\n    return Deployments[\"contracts\"][name][\"address\"].toLowerCase()\r\n}\r\n\r\n\r\nexport function getContract(name: string, chainId: any) {\r\n\r\n    let provider = getProvider(chainId);\r\n    let abi = getABI(\"TestERC20\");\r\n    if (name == \"Exchange\") {\r\n        abi = getABI(\"Exchange\");\r\n    }\r\n    else if (name == \"Lever\") {\r\n        abi = getABI(\"Lever\");\r\n    }\r\n    return new ethers.Contract(getContractAddress(name), abi, provider)\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1629023e031e601d1074de19b1db1c6f39e0ada9","contentHash":"47b4cc4ecaae1923bb28b141a6e0cd612b3ceb21912452f5381c3f4b13e1d1c1"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\utils\\utils.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\utils\\utils.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":121}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":43}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":34}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":51}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":42}},"8":{"start":{"line":11,"column":19},"end":{"line":11,"column":48}},"9":{"start":{"line":12,"column":15},"end":{"line":12,"column":47}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"11":{"start":{"line":15,"column":24},"end":{"line":15,"column":158}},"12":{"start":{"line":16,"column":15},"end":{"line":16,"column":51}},"13":{"start":{"line":17,"column":4},"end":{"line":22,"column":5}},"14":{"start":{"line":18,"column":8},"end":{"line":18,"column":78}},"15":{"start":{"line":20,"column":9},"end":{"line":22,"column":5}},"16":{"start":{"line":21,"column":8},"end":{"line":21,"column":33}},"17":{"start":{"line":23,"column":4},"end":{"line":23,"column":37}},"18":{"start":{"line":24,"column":4},"end":{"line":24,"column":14}},"19":{"start":{"line":26,"column":0},"end":{"line":26,"column":24}},"20":{"start":{"line":28,"column":4},"end":{"line":28,"column":129}},"21":{"start":{"line":30,"column":0},"end":{"line":30,"column":32}},"22":{"start":{"line":32,"column":18},"end":{"line":32,"column":58}},"23":{"start":{"line":33,"column":4},"end":{"line":33,"column":17}},"24":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}},"25":{"start":{"line":37,"column":21},"end":{"line":37,"column":100}},"26":{"start":{"line":38,"column":4},"end":{"line":38,"column":20}},"27":{"start":{"line":40,"column":0},"end":{"line":40,"column":34}},"28":{"start":{"line":41,"column":0},"end":{"line":84,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"getABI","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":15}},"loc":{"start":{"line":14,"column":22},"end":{"line":25,"column":1}},"line":14},"2":{"name":"parseEther","decl":{"start":{"line":27,"column":9},"end":{"line":27,"column":19}},"loc":{"start":{"line":27,"column":27},"end":{"line":29,"column":1}},"line":27},"3":{"name":"getInterface","decl":{"start":{"line":31,"column":9},"end":{"line":31,"column":21}},"loc":{"start":{"line":31,"column":27},"end":{"line":34,"column":1}},"line":31},"4":{"name":"getProvider","decl":{"start":{"line":36,"column":9},"end":{"line":36,"column":20}},"loc":{"start":{"line":36,"column":30},"end":{"line":39,"column":1}},"line":36}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":17,"column":4},"end":{"line":22,"column":5}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":22,"column":5}},{"start":{"line":17,"column":4},"end":{"line":22,"column":5}}],"line":17},"4":{"loc":{"start":{"line":20,"column":9},"end":{"line":22,"column":5}},"type":"if","locations":[{"start":{"line":20,"column":9},"end":{"line":22,"column":5}},{"start":{"line":20,"column":9},"end":{"line":22,"column":5}}],"line":20}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":20,"12":20,"13":20,"14":3,"15":17,"16":17,"17":0,"18":0,"19":1,"20":8,"21":1,"22":0,"23":0,"24":1,"25":19,"26":19,"27":1,"28":1},"f":{"0":3,"1":20,"2":8,"3":0,"4":19},"b":{"0":[1,1,1],"1":[0,3],"2":[3,3],"3":[3,17],"4":[17,0]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/utils/utils.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/utils/utils.ts"],"names":[],"mappings":";;;;;;AAAA,4CAAoB;AACpB,mCAAgC;AAChC,oDAAyB;AACzB,2CAA6C;AAC7C,iDAA+C;AAC/C,gDAAwB;AACxB,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAA;AAG1B,SAAgB,MAAM,CAAC,IAAS;IAC5B,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAE,CAAC,YAAY,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,aAAa,EAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;IACvI,IAAI,IAAI,GAAG,CAAC,OAAO,EAAE,WAAW,EAAC,YAAY,CAAC,CAAA;IAC9C,IAAI,IAAI,IAAI,UAAU,EAAE;QACpB,OAAO,WAAW,CAAC,YAAY,IAAA,oBAAS,EAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;KACzD;SACI,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;QAC1B,OAAO,WAAW,CAAC,IAAI,CAAC,CAAA;KAC3B;IACD,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAA;IAChC,OAAO,EAAE,CAAA;AACb,CAAC;AAXD,wBAWC;AAED,SAAgB,UAAU,CAAC,KAAsB;IAE7C,OAAO,eAAM,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAA,gBAAG,EAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAA,gBAAG,EAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;AACpF,CAAC;AAHD,gCAGC;AAED,SAAgB,YAAY,CAAC,GAAa;IACtC,MAAM,KAAK,GAAG,IAAI,eAAM,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC9C,OAAO,KAAK,CAAC;AACjB,CAAC;AAHD,oCAGC;AAED,SAAgB,WAAW,CAAC,OAAe;IACvC,MAAM,QAAQ,GAAG,IAAI,eAAM,CAAC,SAAS,CAAC,eAAe,CAAC,IAAA,kBAAU,EAAC,OAAO,CAAC,CAAC,CAAC;IAC3E,OAAO,QAAQ,CAAC;AACpB,CAAC;AAHD,kCAGC;AAIY,QAAA,oBAAoB,GAAG;IAEhC,KAAK,EAAE,gBAAgB;IACvB,KAAK,EAAE,aAAa;IACpB,IAAI,EAAE,SAAS;IACf,UAAU,EAAE,YAAY;IACxB,uCAAuC;IACvC,KAAK,EAAE,CAAC;YACJ,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,EAAE,CAAW,+BAA+B;SAC1D,EAAE;YACC,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,EAAE;SAChB,EAAE;YACC,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;SAChB,CAAC;IACF,eAAe,EAAE;QACb,GAAG,EAAE,IAAI;QACT,GAAG,EAAE,IAAI;QACT,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,IAAI;QACf,IAAI,EAAE,IAAI;QACV,YAAY,EAAE,IAAI;QAClB,GAAG,EAAE,IAAI;QACT,WAAW,EAAE,IAAI;KACpB;IACD,YAAY,EAAE;QACV;YACI,QAAQ,EAAE,MAAM;YAChB,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,YAAY;YAClB,OAAO,EAAE,EAAE;SACd;QACD;YACI,QAAQ,EAAE,MAAM;YAChB,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,kBAAkB;YACxB,OAAO,EAAE,EAAE;SACd;KAEJ;IACD,4BAA4B;CAC/B,CAAA","sourcesContent":["import fs from \"fs\";\r\nimport { ethers } from \"ethers\";\r\nimport Big from \"big.js\";\r\nimport { getRpcLink } from \"../helper/chain\";\r\nimport { getConfig } from \"../helper/constant\";\r\nimport path from \"path\";\r\nrequire(\"dotenv\").config()\r\n\r\n\r\nexport function getABI(name: any) {\r\n    const Deployments = JSON.parse((fs.readFileSync(path.join(__dirname, '..', 'deployments', 'deployments.json'))).toString())[\"sources\"];\r\n    let abis = [\"Lever\", \"TestERC20\",\"Multicall2\"]\r\n    if (name == \"Exchange\") {\r\n        return Deployments[`Exchange_${getConfig(\"latest\")}`];\r\n    }\r\n    else if (abis.includes(name)) {\r\n        return Deployments[name]\r\n    }  \r\n    console.log(`request not valid`)\r\n    return []\r\n}\r\n\r\nexport function parseEther(value: number | string): string {\r\n\r\n    return ethers.utils.parseEther(`${Big(value).div(Big(10).pow(18))}`).toString();\r\n}\r\n\r\nexport function getInterface(abi: object[]): ethers.utils.Interface {\r\n    const iface = new ethers.utils.Interface(abi);\r\n    return iface;\r\n}\r\n\r\nexport function getProvider(chainId: string): ethers.providers.JsonRpcProvider {\r\n    const provider = new ethers.providers.JsonRpcProvider(getRpcLink(chainId));\r\n    return provider;\r\n}\r\n\r\n\r\n\r\nexport const expressMonitorConfig = {\r\n\r\n    title: 'Express Status',  // Default title\r\n    theme: 'default.css',     // Default styles\r\n    path: '/status',\r\n    socketPath: '/socket.io', // In case you use a custom path\r\n    // websocket: existingSocketIoInstance,\r\n    spans: [{\r\n        interval: 1,            // Every second\r\n        retention: 60           // Keep 60 datapoints in memory\r\n    }, {\r\n        interval: 5,            // Every 5 seconds\r\n        retention: 60\r\n    }, {\r\n        interval: 15,           // Every 15 seconds\r\n        retention: 60\r\n    }],\r\n    chartVisibility: {\r\n        cpu: true,\r\n        mem: true,\r\n        load: true,\r\n        eventLoop: true,\r\n        heap: true,\r\n        responseTime: true,\r\n        rps: true,\r\n        statusCodes: true\r\n    },\r\n    healthChecks: [\r\n        {\r\n            protocol: 'http',\r\n            host: 'localhost',\r\n            port: 3010,\r\n            path: '/DB/status',\r\n            headers: {},\r\n        },\r\n        {\r\n            protocol: 'http',\r\n            host: 'localhost',\r\n            port: 3010,\r\n            path: '/DB/fetch/record',\r\n            headers: {},\r\n        },\r\n\r\n    ],\r\n    // ignoreStartsWith: '/pair'\r\n}\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"71332160026a3c8323611d187698daa9baa284c6","contentHash":"d7817aabe23d31ce5d0cfdfdf2b3597664f95a968a25bb14806cf83c678d6353"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\socketIo\\socket.io.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\socketIo\\socket.io.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":40}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":43}},"4":{"start":{"line":10,"column":8},"end":{"line":14,"column":11}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":38}},"6":{"start":{"line":16,"column":8},"end":{"line":19,"column":11}},"7":{"start":{"line":17,"column":12},"end":{"line":17,"column":59}},"8":{"start":{"line":18,"column":12},"end":{"line":18,"column":89}},"9":{"start":{"line":18,"column":42},"end":{"line":18,"column":87}},"10":{"start":{"line":22,"column":8},"end":{"line":22,"column":40}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":38}},"12":{"start":{"line":28,"column":0},"end":{"line":32,"column":2}},"13":{"start":{"line":33,"column":0},"end":{"line":33,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":18},"end":{"line":8,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":17},"end":{"line":20,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":30},"end":{"line":16,"column":31}},"loc":{"start":{"line":16,"column":42},"end":{"line":19,"column":9}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":36},"end":{"line":18,"column":37}},"loc":{"start":{"line":18,"column":42},"end":{"line":18,"column":87}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":28},"end":{"line":23,"column":5}},"line":21},"5":{"name":"(anonymous_5)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":26},"end":{"line":26,"column":5}},"line":24}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/socketIo/socket.io.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/socketIo/socket.io.ts"],"names":[],"mappings":";;;AACA,yCAAgC;AAEhC,MAAM,aAAa;IAAnB;QACY,OAAE,GAAW,IAAI,kBAAM,EAAE,CAAC;IAuBtC,CAAC;IArBU,IAAI,CAAC,MAAW;QACnB,IAAI,CAAC,EAAE,GAAG,IAAI,kBAAM,CAAC,MAAM,EAAE;YACzB,IAAI,EAAE;gBACJ,MAAM,EAAE,GAAG;aACZ;SACF,CAAC,CAAC;QACL,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAE9B,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,MAAW,EAAE,EAAE;YAClC,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;YAC/C,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QAEhF,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,EAAE,CAAC,SAAiB,EAAE,QAAyB;QAClD,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACpC,CAAC;IACM,IAAI,CAAC,SAAiB,EAAE,IAAS;QACpC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;CACJ;AAIa,QAAA,UAAU,GAAI;IACxB,UAAU,EAAE,YAAY;IACxB,YAAY,EAAE,cAAc;IAC5B,YAAY,EAAE,cAAc;CAC/B,CAAA;AAEY,QAAA,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC","sourcesContent":["\r\nimport {Server} from \"socket.io\"\r\n\r\nclass SocketService{\r\n    private io: Server = new Server();\r\n    \r\n    public init(server: any){\r\n        this.io = new Server(server, {\r\n            cors: {\r\n              origin: \"*\"\r\n            }\r\n          });\r\n        console.log(\"WS Initialized\");\r\n\r\n        this.on(\"connection\", (socket: any) => {\r\n            console.log(\"New client connected\", socket.id);\r\n            socket.on(\"disconnect\", () => console.log(\"Client disconnected\",socket.id));\r\n            \r\n        });\r\n    }\r\n\r\n    public on(eventName: string, callback: (x:any) => void){\r\n        this.io.on(eventName, callback);\r\n    }\r\n    public emit(eventName: string, data: any){\r\n        this.io.emit(eventName, data);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const  EVENT_NAME  = {\r\n    PAIR_ORDER: \"PAIR_ORDER\",\r\n    PAIR_HISTORY: \"PAIR_HISTORY\",\r\n    CANCEL_ORDER: \"CANCEL_ORDER\"\r\n}\r\n\r\nexport const socketService = new SocketService();\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d438ed7f48a32b172365065d7ec439c07c958e73","contentHash":"5dc01bc6ac2b38b4b90c3a384236b3284c6a8252847642a04468be0fd473bced"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\BmarginOrderLong.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\BmarginOrderLong.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"15":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"16":{"start":{"line":17,"column":15},"end":{"line":17,"column":30}},"17":{"start":{"line":18,"column":20},"end":{"line":18,"column":57}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}},"19":{"start":{"line":20,"column":17},"end":{"line":20,"column":34}},"20":{"start":{"line":21,"column":17},"end":{"line":21,"column":51}},"21":{"start":{"line":22,"column":20},"end":{"line":22,"column":55}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":44}},"23":{"start":{"line":24,"column":16},"end":{"line":24,"column":45}},"24":{"start":{"line":25,"column":27},"end":{"line":25,"column":54}},"25":{"start":{"line":26,"column":15},"end":{"line":26,"column":47}},"26":{"start":{"line":27,"column":13},"end":{"line":27,"column":35}},"27":{"start":{"line":28,"column":19},"end":{"line":28,"column":51}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":185}},"29":{"start":{"line":30,"column":15},"end":{"line":30,"column":66}},"30":{"start":{"line":31,"column":0},"end":{"line":244,"column":4}},"31":{"start":{"line":31,"column":93},"end":{"line":244,"column":2}},"32":{"start":{"line":33,"column":18},"end":{"line":33,"column":26}},"33":{"start":{"line":34,"column":19},"end":{"line":34,"column":52}},"34":{"start":{"line":35,"column":19},"end":{"line":35,"column":67}},"35":{"start":{"line":36,"column":14},"end":{"line":36,"column":57}},"36":{"start":{"line":37,"column":15},"end":{"line":37,"column":59}},"37":{"start":{"line":38,"column":16},"end":{"line":38,"column":61}},"38":{"start":{"line":39,"column":16},"end":{"line":39,"column":68}},"39":{"start":{"line":40,"column":15},"end":{"line":40,"column":66}},"40":{"start":{"line":41,"column":16},"end":{"line":41,"column":86}},"41":{"start":{"line":42,"column":16},"end":{"line":42,"column":86}},"42":{"start":{"line":43,"column":21},"end":{"line":43,"column":23}},"43":{"start":{"line":44,"column":17},"end":{"line":44,"column":19}},"44":{"start":{"line":45,"column":23},"end":{"line":45,"column":25}},"45":{"start":{"line":46,"column":23},"end":{"line":46,"column":75}},"46":{"start":{"line":47,"column":15},"end":{"line":47,"column":50}},"47":{"start":{"line":48,"column":17},"end":{"line":48,"column":65}},"48":{"start":{"line":49,"column":16},"end":{"line":49,"column":17}},"49":{"start":{"line":50,"column":20},"end":{"line":50,"column":21}},"50":{"start":{"line":51,"column":4},"end":{"line":53,"column":8}},"51":{"start":{"line":51,"column":17},"end":{"line":53,"column":6}},"52":{"start":{"line":52,"column":8},"end":{"line":52,"column":34}},"53":{"start":{"line":111,"column":4},"end":{"line":173,"column":8}},"54":{"start":{"line":111,"column":57},"end":{"line":173,"column":6}},"55":{"start":{"line":112,"column":23},"end":{"line":117,"column":9}},"56":{"start":{"line":119,"column":22},"end":{"line":131,"column":9}},"57":{"start":{"line":132,"column":22},"end":{"line":142,"column":9}},"58":{"start":{"line":144,"column":8},"end":{"line":144,"column":27}},"59":{"start":{"line":146,"column":32},"end":{"line":146,"column":80}},"60":{"start":{"line":147,"column":8},"end":{"line":147,"column":41}},"61":{"start":{"line":148,"column":8},"end":{"line":150,"column":11}},"62":{"start":{"line":151,"column":18},"end":{"line":167,"column":10}},"63":{"start":{"line":168,"column":8},"end":{"line":168,"column":30}},"64":{"start":{"line":169,"column":8},"end":{"line":169,"column":52}},"65":{"start":{"line":170,"column":8},"end":{"line":170,"column":62}},"66":{"start":{"line":171,"column":8},"end":{"line":171,"column":56}},"67":{"start":{"line":172,"column":8},"end":{"line":172,"column":90}},"68":{"start":{"line":174,"column":4},"end":{"line":181,"column":8}},"69":{"start":{"line":174,"column":48},"end":{"line":181,"column":6}},"70":{"start":{"line":175,"column":19},"end":{"line":175,"column":87}},"71":{"start":{"line":176,"column":8},"end":{"line":176,"column":52}},"72":{"start":{"line":177,"column":8},"end":{"line":177,"column":57}},"73":{"start":{"line":178,"column":8},"end":{"line":178,"column":77}},"74":{"start":{"line":179,"column":8},"end":{"line":179,"column":63}},"75":{"start":{"line":180,"column":8},"end":{"line":180,"column":32}},"76":{"start":{"line":182,"column":4},"end":{"line":222,"column":8}},"77":{"start":{"line":182,"column":79},"end":{"line":222,"column":6}},"78":{"start":{"line":183,"column":33},"end":{"line":183,"column":61}},"79":{"start":{"line":184,"column":33},"end":{"line":184,"column":61}},"80":{"start":{"line":185,"column":34},"end":{"line":185,"column":63}},"81":{"start":{"line":186,"column":34},"end":{"line":186,"column":63}},"82":{"start":{"line":187,"column":22},"end":{"line":187,"column":123}},"83":{"start":{"line":188,"column":8},"end":{"line":188,"column":51}},"84":{"start":{"line":189,"column":8},"end":{"line":189,"column":51}},"85":{"start":{"line":190,"column":8},"end":{"line":190,"column":52}},"86":{"start":{"line":191,"column":8},"end":{"line":191,"column":52}},"87":{"start":{"line":193,"column":26},"end":{"line":193,"column":74}},"88":{"start":{"line":194,"column":20},"end":{"line":194,"column":138}},"89":{"start":{"line":195,"column":8},"end":{"line":195,"column":28}},"90":{"start":{"line":196,"column":34},"end":{"line":196,"column":62}},"91":{"start":{"line":197,"column":35},"end":{"line":197,"column":64}},"92":{"start":{"line":198,"column":35},"end":{"line":198,"column":64}},"93":{"start":{"line":199,"column":34},"end":{"line":199,"column":62}},"94":{"start":{"line":200,"column":23},"end":{"line":200,"column":128}},"95":{"start":{"line":201,"column":8},"end":{"line":201,"column":53}},"96":{"start":{"line":202,"column":8},"end":{"line":202,"column":54}},"97":{"start":{"line":203,"column":8},"end":{"line":203,"column":54}},"98":{"start":{"line":204,"column":8},"end":{"line":204,"column":53}},"99":{"start":{"line":206,"column":18},"end":{"line":206,"column":50}},"100":{"start":{"line":207,"column":29},"end":{"line":207,"column":133}},"101":{"start":{"line":208,"column":29},"end":{"line":208,"column":137}},"102":{"start":{"line":209,"column":8},"end":{"line":209,"column":153}},"103":{"start":{"line":210,"column":8},"end":{"line":213,"column":66}},"104":{"start":{"line":214,"column":19},"end":{"line":220,"column":9}},"105":{"start":{"line":215,"column":12},"end":{"line":219,"column":15}},"106":{"start":{"line":216,"column":32},"end":{"line":218,"column":25}},"107":{"start":{"line":217,"column":20},"end":{"line":217,"column":46}},"108":{"start":{"line":221,"column":18},"end":{"line":221,"column":30}},"109":{"start":{"line":223,"column":4},"end":{"line":243,"column":8}},"110":{"start":{"line":223,"column":34},"end":{"line":243,"column":6}},"111":{"start":{"line":224,"column":20},"end":{"line":224,"column":114}},"112":{"start":{"line":225,"column":8},"end":{"line":225,"column":28}},"113":{"start":{"line":226,"column":19},"end":{"line":236,"column":9}},"114":{"start":{"line":227,"column":12},"end":{"line":235,"column":15}},"115":{"start":{"line":228,"column":32},"end":{"line":230,"column":25}},"116":{"start":{"line":229,"column":20},"end":{"line":229,"column":46}},"117":{"start":{"line":231,"column":16},"end":{"line":234,"column":19}},"118":{"start":{"line":232,"column":20},"end":{"line":232,"column":44}},"119":{"start":{"line":233,"column":20},"end":{"line":233,"column":46}},"120":{"start":{"line":237,"column":18},"end":{"line":237,"column":30}},"121":{"start":{"line":238,"column":8},"end":{"line":238,"column":52}},"122":{"start":{"line":239,"column":19},"end":{"line":239,"column":87}},"123":{"start":{"line":240,"column":8},"end":{"line":240,"column":52}},"124":{"start":{"line":241,"column":8},"end":{"line":241,"column":48}},"125":{"start":{"line":242,"column":8},"end":{"line":242,"column":58}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":31,"column":87},"end":{"line":31,"column":88}},"loc":{"start":{"line":31,"column":93},"end":{"line":244,"column":2}},"line":31},"9":{"name":"(anonymous_9)","decl":{"start":{"line":31,"column":127},"end":{"line":31,"column":128}},"loc":{"start":{"line":31,"column":140},"end":{"line":244,"column":1}},"line":31},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":11},"end":{"line":51,"column":12}},"loc":{"start":{"line":51,"column":17},"end":{"line":53,"column":6}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":51,"column":51},"end":{"line":51,"column":52}},"loc":{"start":{"line":51,"column":64},"end":{"line":53,"column":5}},"line":51},"12":{"name":"(anonymous_12)","decl":{"start":{"line":111,"column":51},"end":{"line":111,"column":52}},"loc":{"start":{"line":111,"column":57},"end":{"line":173,"column":6}},"line":111},"13":{"name":"(anonymous_13)","decl":{"start":{"line":111,"column":91},"end":{"line":111,"column":92}},"loc":{"start":{"line":111,"column":104},"end":{"line":173,"column":5}},"line":111},"14":{"name":"(anonymous_14)","decl":{"start":{"line":174,"column":42},"end":{"line":174,"column":43}},"loc":{"start":{"line":174,"column":48},"end":{"line":181,"column":6}},"line":174},"15":{"name":"(anonymous_15)","decl":{"start":{"line":174,"column":82},"end":{"line":174,"column":83}},"loc":{"start":{"line":174,"column":95},"end":{"line":181,"column":5}},"line":174},"16":{"name":"(anonymous_16)","decl":{"start":{"line":182,"column":73},"end":{"line":182,"column":74}},"loc":{"start":{"line":182,"column":79},"end":{"line":222,"column":6}},"line":182},"17":{"name":"(anonymous_17)","decl":{"start":{"line":182,"column":113},"end":{"line":182,"column":114}},"loc":{"start":{"line":182,"column":126},"end":{"line":222,"column":5}},"line":182},"18":{"name":"(anonymous_18)","decl":{"start":{"line":214,"column":19},"end":{"line":214,"column":20}},"loc":{"start":{"line":214,"column":25},"end":{"line":220,"column":9}},"line":214},"19":{"name":"(anonymous_19)","decl":{"start":{"line":215,"column":31},"end":{"line":215,"column":32}},"loc":{"start":{"line":215,"column":52},"end":{"line":219,"column":13}},"line":215},"20":{"name":"(anonymous_20)","decl":{"start":{"line":216,"column":43},"end":{"line":216,"column":44}},"loc":{"start":{"line":216,"column":49},"end":{"line":218,"column":17}},"line":216},"21":{"name":"(anonymous_21)","decl":{"start":{"line":223,"column":28},"end":{"line":223,"column":29}},"loc":{"start":{"line":223,"column":34},"end":{"line":243,"column":6}},"line":223},"22":{"name":"(anonymous_22)","decl":{"start":{"line":223,"column":68},"end":{"line":223,"column":69}},"loc":{"start":{"line":223,"column":81},"end":{"line":243,"column":5}},"line":223},"23":{"name":"(anonymous_23)","decl":{"start":{"line":226,"column":19},"end":{"line":226,"column":20}},"loc":{"start":{"line":226,"column":25},"end":{"line":236,"column":9}},"line":226},"24":{"name":"(anonymous_24)","decl":{"start":{"line":227,"column":31},"end":{"line":227,"column":32}},"loc":{"start":{"line":227,"column":52},"end":{"line":235,"column":13}},"line":227},"25":{"name":"(anonymous_25)","decl":{"start":{"line":228,"column":43},"end":{"line":228,"column":44}},"loc":{"start":{"line":228,"column":49},"end":{"line":230,"column":17}},"line":228},"26":{"name":"(anonymous_26)","decl":{"start":{"line":231,"column":63},"end":{"line":231,"column":64}},"loc":{"start":{"line":231,"column":73},"end":{"line":234,"column":17}},"line":231}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":29,"column":71},"end":{"line":29,"column":180}},"type":"cond-expr","locations":[{"start":{"line":29,"column":160},"end":{"line":29,"column":171}},{"start":{"line":29,"column":174},"end":{"line":29,"column":180}}],"line":29},"9":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":156}},"type":"cond-expr","locations":[{"start":{"line":29,"column":128},"end":{"line":29,"column":134}},{"start":{"line":29,"column":137},"end":{"line":29,"column":156}}],"line":29},"10":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":125}},"type":"binary-expr","locations":[{"start":{"line":29,"column":72},"end":{"line":29,"column":108}},{"start":{"line":29,"column":112},"end":{"line":29,"column":125}}],"line":29},"11":{"loc":{"start":{"line":207,"column":51},"end":{"line":207,"column":105}},"type":"cond-expr","locations":[{"start":{"line":207,"column":84},"end":{"line":207,"column":90}},{"start":{"line":207,"column":93},"end":{"line":207,"column":105}}],"line":207},"12":{"loc":{"start":{"line":207,"column":51},"end":{"line":207,"column":81}},"type":"binary-expr","locations":[{"start":{"line":207,"column":51},"end":{"line":207,"column":63}},{"start":{"line":207,"column":67},"end":{"line":207,"column":81}}],"line":207}},"s":{"0":1,"1":14,"2":4,"3":6,"4":14,"5":14,"6":1,"7":0,"8":0,"9":0,"10":19,"11":6,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1},"f":{"0":6,"1":14,"2":4,"3":6,"4":14,"5":0,"6":19,"7":3,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1},"b":{"0":[1,1,1],"1":[10,4],"2":[6,6],"3":[5,14],"4":[6,6],"5":[1,1,1],"6":[0,3],"7":[3,3],"8":[0,1],"9":[0,1],"10":[1,1],"11":[0,1],"12":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/BmarginOrderLong.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/BmarginOrderLong.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport { use, request } from \"chai\";\r\nimport { expect } from \"chai\";\r\nimport chaiHttp from \"chai-http\";\r\nuse(chaiHttp);\r\nimport { ethers } from \"ethers\";\r\nimport Big from \"big.js\";\r\nimport { EVENT_NAME } from \"../../socketIo/socket.io\";\r\nimport {  getProvider, parseEther } from \"../../utils/utils\";\r\nimport { getExchangeAddress, getVersion } from \"../../helper/chain\";\r\nimport { io } from \"socket.io-client\";\r\nimport path from \"path\";\r\nimport { connect, OrderCreated, Sync } from \"../../DB/db\";\r\nimport { ifOrderCreated } from \"../../helper/interface\";\r\nimport { getConfig, getContract } from \"../../helper/constant\";\r\n\r\n\r\n\r\nrequire(\"dotenv\").config({ path: path.resolve(process.cwd(), process.env.NODE_ENV?.includes('test') ? \".env.test\" : \".env\") });\r\n\r\n\r\n\r\nconst socket = io(\"http://localhost:3010\");\r\n\r\ndescribe(\"Margin Order Long => Mint token, create order, execute order, cancel order\", async () => {\r\n\r\n    // requirements\r\n    let chainId = \"421613\"\r\n    let provider = getProvider(chainId);\r\n\r\n    let exchange = getContract(\"Exchange\", chainId)\r\n    let btc = getContract(\"BTC\", chainId)\r\n    let usdc = getContract(\"USDC\", chainId)\r\n    let lever = getContract(\"Lever\", chainId)\r\n    let cUsdc = getContract(\"lUSDC_Market\", chainId)\r\n    let cBtc = getContract(\"lBTC_Market\", chainId)\r\n    let user1 = new ethers.Wallet(process.env.PRIVATE_KEY1! as string).connect(provider); //2\r\n    let user2 = new ethers.Wallet(process.env.PRIVATE_KEY2! as string).connect(provider); //1\r\n\r\n\r\n    let signatures: any[] = [];\r\n    let orders: any[] = [];\r\n    let orderCreated: any[] = []\r\n    let exchangeRate = ethers.utils.parseEther('20000').toString();\r\n\r\n    let salt = Math.floor(Math.random() * 9000000);\r\n    let amount = ethers.utils.parseEther('1').toString();\r\n    let loops = 5;\r\n    let orderType = 2 // long\r\n\r\n    before(async () => {\r\n\r\n        await connect()\r\n    });\r\n    /*\r\n        it('mint 100 btc to user1, 100 BTC to user2', async () => {\r\n            // ORDER IS LONG means user1 want more btc\r\n    \r\n            let user1BtcBalancePre = (await btc.balanceOf(user1.address)).toString();\r\n            let user2BtcBalancePre = (await btc.balanceOf(user2.address)).toString();\r\n    \r\n            const btcAmount = ethers.utils.parseEther('100').toString();\r\n    \r\n            // user1 and user2 mint btc \r\n            await btc.connect(user1).mint(user1.address, btcAmount)\r\n            await btc.connect(user2).mint(user2.address, btcAmount)\r\n    \r\n            // approve for exchange  \r\n            await btc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256)\r\n            await usdc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256) // as it will sell usdc to buy btc\r\n            await btc.connect(user2).approve(exchange.address, ethers.constants.MaxUint256)\r\n    \r\n            // approve for market\r\n            await btc.connect(user1).approve(cBtc.address, ethers.constants.MaxUint256)\r\n            await btc.connect(user2).approve(cBtc.address, ethers.constants.MaxUint256)\r\n            const approve = await usdc.connect(user1).approve(cUsdc.address, ethers.constants.MaxUint256)\r\n            await approve.wait(1)\r\n    \r\n            let user1BtcBalancePost = (await btc.balanceOf(user1.address)).toString();\r\n            let user2BtcBalancePost = (await btc.balanceOf(user2.address)).toString();\r\n    \r\n            expect(user1BtcBalancePost).to.equal(parseEther(Big(btcAmount).plus(user1BtcBalancePre).toString()));\r\n            expect(user2BtcBalancePost).to.equal(parseEther(Big(btcAmount).plus(user2BtcBalancePre).toString()));\r\n    \r\n        });\r\n    \r\n    \r\n        it(\"make market liquid\", async () => {\r\n    \r\n            const btcAmount = ethers.utils.parseEther('1000');\r\n            const usdcAmount = ethers.utils.parseEther('20000000');\r\n    \r\n            // mint\r\n    \r\n            await btc.connect(user1).mint(user1.address, btcAmount, { gasLimit: \"100000000\" });\r\n            await usdc.connect(user2).mint(user2.address, usdcAmount, { gasLimit: \"100000000\" });\r\n    \r\n            // to market\r\n            await exchange.connect(user1).mint(btc.address, btcAmount, { gasLimit: \"100000000\" });\r\n            await exchange.connect(user2).mint(usdc.address, usdcAmount, { gasLimit: \"100000000\" });\r\n    \r\n    \r\n            // Approval \r\n    \r\n            await btc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256, { gasLimit: \"100000000\" });\r\n            await usdc.connect(user2).approve(exchange.address, ethers.constants.MaxUint256, { gasLimit: \"100000000\" });\r\n            // market enter\r\n            await lever.connect(user1).enterMarkets([cBtc.address, cUsdc.address]);\r\n            await lever.connect(user2).enterMarkets([cBtc.address, cUsdc.address]);\r\n    \r\n        })*/\r\n\r\n\r\n\r\n    it(`user1 create margin order 1 btc @ 20000}`, async () => {\r\n        const domain = {\r\n            name: getConfig(\"name\"),\r\n            version: getVersion(process.env.NODE_ENV!),\r\n            chainId: chainId.toString(),\r\n            verifyingContract: getExchangeAddress(chainId),\r\n        };\r\n\r\n        // The named list of all type definitions\r\n        const types = {\r\n            Order: [\r\n                { name: 'maker', type: 'address' },\r\n                { name: 'token0', type: 'address' },\r\n                { name: 'token1', type: 'address' },\r\n                { name: 'amount', type: 'uint256' },\r\n                { name: 'orderType', type: 'uint8' },\r\n                { name: 'salt', type: 'uint32' },\r\n                { name: 'exchangeRate', type: 'uint176' },\r\n                { name: 'borrowLimit', type: 'uint32' },\r\n                { name: 'loops', type: 'uint8' }\r\n            ]\r\n        };\r\n\r\n        const value = {\r\n            maker: user1.address.toLowerCase(),\r\n            token0: btc.address.toLowerCase(),\r\n            token1: usdc.address.toLowerCase(),\r\n            amount: amount,\r\n            orderType: orderType,\r\n            salt: salt,\r\n            exchangeRate: exchangeRate,\r\n            borrowLimit: Big(0.75).times(Big(10).pow(6)).toNumber(),\r\n            loops: loops\r\n        };\r\n        // The data to sign\r\n\r\n\r\n        orders.push(value);\r\n        // sign typed data\r\n        const storedSignature = await user1._signTypedData(\r\n            domain,\r\n            types,\r\n            value\r\n        );\r\n        signatures.push(storedSignature);\r\n        console.log([\r\n            value, storedSignature\r\n        ]);\r\n        let res = await request(\"http://localhost:3010\")\r\n            .post(`/v/${getVersion(process.env.NODE_ENV!)}/order/create`)\r\n            .send(\r\n                {\r\n                    \"data\": {\r\n                        \"maker\": user1.address.toLowerCase(),\r\n                        \"token0\": btc.address.toLowerCase(),\r\n                        \"token1\": usdc.address.toLowerCase(),\r\n                        \"amount\": amount,\r\n                        \"orderType\": orderType,\r\n                        \"salt\": salt,\r\n                        \"exchangeRate\": exchangeRate,\r\n                        borrowLimit: Big(0.75).times(Big(10).pow(6)).toNumber(),\r\n                        loops: loops\r\n\r\n                    },\r\n                    \"signature\": storedSignature,\r\n                    \"chainId\": chainId\r\n                }\r\n            );\r\n        console.log(res.body)\r\n        expect(res).to.have.status(201);\r\n        expect(res.body.status).to.be.equal(true);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.message).to.have.string('Order created successfully');\r\n\r\n    });\r\n\r\n    it(`find created order in data base`, async () => {\r\n\r\n        let data = await OrderCreated.findOne({ signature: signatures[0] }).lean()! as ifOrderCreated;\r\n        expect(data).to.be.an('object');\r\n        expect(data.amount).to.equal(amount);\r\n        expect(data.maker).to.equal(user1.address.toLowerCase());\r\n        expect(Number(data.loops)).to.equal(loops)\r\n        orderCreated.push(data)\r\n    })\r\n\r\n    it(`user1 sell usdc got from market to user2 and got 2 btc @ 20000`, async () => {\r\n        let user1BtcBalancePre = btc.balanceOf(user1.address);\r\n        let user2BtcBalancePre = btc.balanceOf(user2.address);\r\n        let user2UsdcBalancePre = usdc.balanceOf(user2.address);\r\n        let user1UsdcBalancePre = usdc.balanceOf(user1.address);\r\n        let promise = await Promise.all([user1BtcBalancePre, user2BtcBalancePre, user2UsdcBalancePre, user1UsdcBalancePre])\r\n        user1BtcBalancePre = promise[0].toString();\r\n        user2BtcBalancePre = promise[1].toString()\r\n        user2UsdcBalancePre = promise[2].toString()\r\n        user1UsdcBalancePre = promise[3].toString()\r\n        // console.log(user1BtcBalancePre)\r\n        const btcAmount = ethers.utils.parseEther('2').toString();\r\n\r\n\r\n        let exTxn = await exchange.connect(user2).executeT0LimitOrders(\r\n            [signatures[0]],\r\n            [orders[0]],\r\n            btcAmount,\r\n            { gasLimit: \"100000000\" }\r\n        );\r\n\r\n        await exTxn.wait(1)\r\n        let user1BtcBalancePost = btc.balanceOf(user1.address);\r\n        let user1UsdcBalancePost = usdc.balanceOf(user1.address);\r\n        let user2UsdcBalancePost = usdc.balanceOf(user2.address);\r\n        let user2BtcBalancePost = btc.balanceOf(user2.address);\r\n\r\n        let promise1 = await Promise.all([user1BtcBalancePost, user1UsdcBalancePost, user2UsdcBalancePost, user2BtcBalancePost]);\r\n        user1BtcBalancePost = promise1[0].toString();\r\n        user1UsdcBalancePost = promise1[1].toString();\r\n        user2UsdcBalancePost = promise1[2].toString();\r\n        user2BtcBalancePost = promise1[3].toString();\r\n        // console.log(user2UsdcBalancePost,btcAmount );\r\n\r\n        let fee = await Sync.findOne().lean()! as any;\r\n        let makerFeeAmount = Big(fee?.makerFee).div(1e18).times(btcAmount);\r\n\r\n        let takerFeeAmount = Big(Big(fee.takerFee).div(1e18)).times(Big(btcAmount));\r\n\r\n        expect(user2BtcBalancePost).to.equal(parseEther(Big(user2BtcBalancePre).minus(btcAmount).toString()));\r\n        expect(user2UsdcBalancePost).to.equal(\r\n            parseEther(\r\n                Big(user2UsdcBalancePre)\r\n                    .plus(\r\n                        Big(btcAmount).minus(takerFeeAmount)\r\n                            .times(exchangeRate)\r\n                            .div(Big(10).pow(18))).toString()))\r\n\r\n        let wait = () => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                let timeOutId = setTimeout(() => {\r\n                    return resolve(\"Success\")\r\n                }, 15000)\r\n            })\r\n        }\r\n        let res = await wait()\r\n\r\n    });\r\n\r\n    it(`cancelled  order `, async () => {\r\n\r\n\r\n\r\n        let exTxn = await exchange.connect(user1).cancelOrder(\r\n            signatures[0],\r\n            orders[0],\r\n            { gasLimit: \"100000000\" }\r\n        )\r\n        await exTxn.wait(1);\r\n\r\n        let wait = () => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                let timeOutId = setTimeout(() => {\r\n                    return resolve(\"Success\")\r\n                }, 15000)\r\n\r\n                socket.on(EVENT_NAME.CANCEL_ORDER, (data) => {\r\n                    clearTimeout(timeOutId)\r\n                    return resolve(\"Success\")\r\n                })\r\n            })\r\n        }\r\n        let res = await wait()\r\n        expect(res).to.equal(\"Success\")\r\n        let data = await OrderCreated.findOne({ signature: signatures[0] }).lean()! as ifOrderCreated;\r\n        expect(data).to.be.an('object')\r\n        expect(data).not.to.be.null;\r\n        expect(data.cancelled).to.equal(true)\r\n\r\n    })\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a8e513756d9a8fc6a05ee601acbedf8eab508de8","contentHash":"37015db2ea62442e31191cfa3fbd5de248d2ee7fed0bd1efa40271647b3da3dc"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\CmarginOrderShort.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\CmarginOrderShort.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"15":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"16":{"start":{"line":17,"column":15},"end":{"line":17,"column":30}},"17":{"start":{"line":18,"column":20},"end":{"line":18,"column":57}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}},"19":{"start":{"line":20,"column":17},"end":{"line":20,"column":34}},"20":{"start":{"line":21,"column":17},"end":{"line":21,"column":51}},"21":{"start":{"line":22,"column":20},"end":{"line":22,"column":55}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":44}},"23":{"start":{"line":24,"column":16},"end":{"line":24,"column":45}},"24":{"start":{"line":25,"column":27},"end":{"line":25,"column":54}},"25":{"start":{"line":26,"column":15},"end":{"line":26,"column":47}},"26":{"start":{"line":27,"column":13},"end":{"line":27,"column":35}},"27":{"start":{"line":28,"column":19},"end":{"line":28,"column":51}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":185}},"29":{"start":{"line":30,"column":15},"end":{"line":30,"column":66}},"30":{"start":{"line":31,"column":0},"end":{"line":238,"column":4}},"31":{"start":{"line":31,"column":93},"end":{"line":238,"column":2}},"32":{"start":{"line":33,"column":18},"end":{"line":33,"column":26}},"33":{"start":{"line":34,"column":19},"end":{"line":34,"column":52}},"34":{"start":{"line":35,"column":19},"end":{"line":35,"column":67}},"35":{"start":{"line":36,"column":14},"end":{"line":36,"column":57}},"36":{"start":{"line":37,"column":15},"end":{"line":37,"column":59}},"37":{"start":{"line":38,"column":16},"end":{"line":38,"column":61}},"38":{"start":{"line":39,"column":16},"end":{"line":39,"column":68}},"39":{"start":{"line":40,"column":15},"end":{"line":40,"column":66}},"40":{"start":{"line":41,"column":16},"end":{"line":41,"column":86}},"41":{"start":{"line":42,"column":16},"end":{"line":42,"column":86}},"42":{"start":{"line":43,"column":21},"end":{"line":43,"column":23}},"43":{"start":{"line":44,"column":17},"end":{"line":44,"column":19}},"44":{"start":{"line":45,"column":23},"end":{"line":45,"column":25}},"45":{"start":{"line":46,"column":23},"end":{"line":46,"column":75}},"46":{"start":{"line":47,"column":15},"end":{"line":47,"column":50}},"47":{"start":{"line":48,"column":17},"end":{"line":48,"column":65}},"48":{"start":{"line":49,"column":16},"end":{"line":49,"column":17}},"49":{"start":{"line":50,"column":20},"end":{"line":50,"column":21}},"50":{"start":{"line":51,"column":4},"end":{"line":53,"column":8}},"51":{"start":{"line":51,"column":17},"end":{"line":53,"column":6}},"52":{"start":{"line":52,"column":8},"end":{"line":52,"column":34}},"53":{"start":{"line":113,"column":4},"end":{"line":175,"column":8}},"54":{"start":{"line":113,"column":63},"end":{"line":175,"column":6}},"55":{"start":{"line":114,"column":23},"end":{"line":119,"column":9}},"56":{"start":{"line":121,"column":22},"end":{"line":133,"column":9}},"57":{"start":{"line":134,"column":22},"end":{"line":144,"column":9}},"58":{"start":{"line":146,"column":8},"end":{"line":146,"column":27}},"59":{"start":{"line":148,"column":32},"end":{"line":148,"column":80}},"60":{"start":{"line":149,"column":8},"end":{"line":149,"column":41}},"61":{"start":{"line":150,"column":8},"end":{"line":152,"column":11}},"62":{"start":{"line":153,"column":18},"end":{"line":169,"column":10}},"63":{"start":{"line":170,"column":8},"end":{"line":170,"column":30}},"64":{"start":{"line":171,"column":8},"end":{"line":171,"column":52}},"65":{"start":{"line":172,"column":8},"end":{"line":172,"column":62}},"66":{"start":{"line":173,"column":8},"end":{"line":173,"column":56}},"67":{"start":{"line":174,"column":8},"end":{"line":174,"column":90}},"68":{"start":{"line":176,"column":4},"end":{"line":183,"column":8}},"69":{"start":{"line":176,"column":48},"end":{"line":183,"column":6}},"70":{"start":{"line":177,"column":19},"end":{"line":177,"column":87}},"71":{"start":{"line":178,"column":8},"end":{"line":178,"column":52}},"72":{"start":{"line":179,"column":8},"end":{"line":179,"column":57}},"73":{"start":{"line":180,"column":8},"end":{"line":180,"column":77}},"74":{"start":{"line":181,"column":8},"end":{"line":181,"column":63}},"75":{"start":{"line":182,"column":8},"end":{"line":182,"column":32}},"76":{"start":{"line":184,"column":4},"end":{"line":216,"column":8}},"77":{"start":{"line":184,"column":96},"end":{"line":216,"column":6}},"78":{"start":{"line":185,"column":33},"end":{"line":185,"column":61}},"79":{"start":{"line":186,"column":33},"end":{"line":186,"column":61}},"80":{"start":{"line":187,"column":34},"end":{"line":187,"column":63}},"81":{"start":{"line":188,"column":34},"end":{"line":188,"column":63}},"82":{"start":{"line":189,"column":22},"end":{"line":189,"column":123}},"83":{"start":{"line":190,"column":8},"end":{"line":190,"column":51}},"84":{"start":{"line":191,"column":8},"end":{"line":191,"column":51}},"85":{"start":{"line":192,"column":8},"end":{"line":192,"column":52}},"86":{"start":{"line":193,"column":8},"end":{"line":193,"column":52}},"87":{"start":{"line":195,"column":26},"end":{"line":195,"column":74}},"88":{"start":{"line":196,"column":20},"end":{"line":196,"column":138}},"89":{"start":{"line":197,"column":8},"end":{"line":197,"column":28}},"90":{"start":{"line":198,"column":34},"end":{"line":198,"column":62}},"91":{"start":{"line":199,"column":35},"end":{"line":199,"column":64}},"92":{"start":{"line":200,"column":35},"end":{"line":200,"column":64}},"93":{"start":{"line":201,"column":34},"end":{"line":201,"column":62}},"94":{"start":{"line":202,"column":23},"end":{"line":202,"column":128}},"95":{"start":{"line":203,"column":8},"end":{"line":203,"column":53}},"96":{"start":{"line":204,"column":8},"end":{"line":204,"column":54}},"97":{"start":{"line":205,"column":8},"end":{"line":205,"column":54}},"98":{"start":{"line":206,"column":8},"end":{"line":206,"column":53}},"99":{"start":{"line":208,"column":18},"end":{"line":208,"column":50}},"100":{"start":{"line":209,"column":29},"end":{"line":209,"column":133}},"101":{"start":{"line":210,"column":29},"end":{"line":210,"column":137}},"102":{"start":{"line":211,"column":8},"end":{"line":211,"column":174}},"103":{"start":{"line":212,"column":8},"end":{"line":215,"column":66}},"104":{"start":{"line":217,"column":4},"end":{"line":237,"column":8}},"105":{"start":{"line":217,"column":34},"end":{"line":237,"column":6}},"106":{"start":{"line":218,"column":20},"end":{"line":218,"column":114}},"107":{"start":{"line":219,"column":8},"end":{"line":219,"column":28}},"108":{"start":{"line":220,"column":19},"end":{"line":230,"column":9}},"109":{"start":{"line":221,"column":12},"end":{"line":229,"column":15}},"110":{"start":{"line":222,"column":32},"end":{"line":224,"column":25}},"111":{"start":{"line":223,"column":20},"end":{"line":223,"column":46}},"112":{"start":{"line":225,"column":16},"end":{"line":228,"column":19}},"113":{"start":{"line":226,"column":20},"end":{"line":226,"column":44}},"114":{"start":{"line":227,"column":20},"end":{"line":227,"column":46}},"115":{"start":{"line":231,"column":18},"end":{"line":231,"column":30}},"116":{"start":{"line":232,"column":8},"end":{"line":232,"column":52}},"117":{"start":{"line":233,"column":19},"end":{"line":233,"column":87}},"118":{"start":{"line":234,"column":8},"end":{"line":234,"column":52}},"119":{"start":{"line":235,"column":8},"end":{"line":235,"column":48}},"120":{"start":{"line":236,"column":8},"end":{"line":236,"column":58}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":31,"column":87},"end":{"line":31,"column":88}},"loc":{"start":{"line":31,"column":93},"end":{"line":238,"column":2}},"line":31},"9":{"name":"(anonymous_9)","decl":{"start":{"line":31,"column":127},"end":{"line":31,"column":128}},"loc":{"start":{"line":31,"column":140},"end":{"line":238,"column":1}},"line":31},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":11},"end":{"line":51,"column":12}},"loc":{"start":{"line":51,"column":17},"end":{"line":53,"column":6}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":51,"column":51},"end":{"line":51,"column":52}},"loc":{"start":{"line":51,"column":64},"end":{"line":53,"column":5}},"line":51},"12":{"name":"(anonymous_12)","decl":{"start":{"line":113,"column":57},"end":{"line":113,"column":58}},"loc":{"start":{"line":113,"column":63},"end":{"line":175,"column":6}},"line":113},"13":{"name":"(anonymous_13)","decl":{"start":{"line":113,"column":97},"end":{"line":113,"column":98}},"loc":{"start":{"line":113,"column":110},"end":{"line":175,"column":5}},"line":113},"14":{"name":"(anonymous_14)","decl":{"start":{"line":176,"column":42},"end":{"line":176,"column":43}},"loc":{"start":{"line":176,"column":48},"end":{"line":183,"column":6}},"line":176},"15":{"name":"(anonymous_15)","decl":{"start":{"line":176,"column":82},"end":{"line":176,"column":83}},"loc":{"start":{"line":176,"column":95},"end":{"line":183,"column":5}},"line":176},"16":{"name":"(anonymous_16)","decl":{"start":{"line":184,"column":90},"end":{"line":184,"column":91}},"loc":{"start":{"line":184,"column":96},"end":{"line":216,"column":6}},"line":184},"17":{"name":"(anonymous_17)","decl":{"start":{"line":184,"column":130},"end":{"line":184,"column":131}},"loc":{"start":{"line":184,"column":143},"end":{"line":216,"column":5}},"line":184},"18":{"name":"(anonymous_18)","decl":{"start":{"line":217,"column":28},"end":{"line":217,"column":29}},"loc":{"start":{"line":217,"column":34},"end":{"line":237,"column":6}},"line":217},"19":{"name":"(anonymous_19)","decl":{"start":{"line":217,"column":68},"end":{"line":217,"column":69}},"loc":{"start":{"line":217,"column":81},"end":{"line":237,"column":5}},"line":217},"20":{"name":"(anonymous_20)","decl":{"start":{"line":220,"column":19},"end":{"line":220,"column":20}},"loc":{"start":{"line":220,"column":25},"end":{"line":230,"column":9}},"line":220},"21":{"name":"(anonymous_21)","decl":{"start":{"line":221,"column":31},"end":{"line":221,"column":32}},"loc":{"start":{"line":221,"column":52},"end":{"line":229,"column":13}},"line":221},"22":{"name":"(anonymous_22)","decl":{"start":{"line":222,"column":43},"end":{"line":222,"column":44}},"loc":{"start":{"line":222,"column":49},"end":{"line":224,"column":17}},"line":222},"23":{"name":"(anonymous_23)","decl":{"start":{"line":225,"column":63},"end":{"line":225,"column":64}},"loc":{"start":{"line":225,"column":73},"end":{"line":228,"column":17}},"line":225}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":29,"column":71},"end":{"line":29,"column":180}},"type":"cond-expr","locations":[{"start":{"line":29,"column":160},"end":{"line":29,"column":171}},{"start":{"line":29,"column":174},"end":{"line":29,"column":180}}],"line":29},"9":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":156}},"type":"cond-expr","locations":[{"start":{"line":29,"column":128},"end":{"line":29,"column":134}},{"start":{"line":29,"column":137},"end":{"line":29,"column":156}}],"line":29},"10":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":125}},"type":"binary-expr","locations":[{"start":{"line":29,"column":72},"end":{"line":29,"column":108}},{"start":{"line":29,"column":112},"end":{"line":29,"column":125}}],"line":29},"11":{"loc":{"start":{"line":209,"column":51},"end":{"line":209,"column":105}},"type":"cond-expr","locations":[{"start":{"line":209,"column":84},"end":{"line":209,"column":90}},{"start":{"line":209,"column":93},"end":{"line":209,"column":105}}],"line":209},"12":{"loc":{"start":{"line":209,"column":51},"end":{"line":209,"column":81}},"type":"binary-expr","locations":[{"start":{"line":209,"column":51},"end":{"line":209,"column":63}},{"start":{"line":209,"column":67},"end":{"line":209,"column":81}}],"line":209}},"s":{"0":1,"1":13,"2":4,"3":6,"4":13,"5":13,"6":0,"7":0,"8":0,"9":0,"10":19,"11":6,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":0,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1},"f":{"0":6,"1":13,"2":4,"3":6,"4":13,"5":0,"6":19,"7":3,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":1},"b":{"0":[1,1,1],"1":[9,4],"2":[6,6],"3":[6,13],"4":[6,6],"5":[1,1,1],"6":[0,3],"7":[3,3],"8":[0,1],"9":[0,1],"10":[1,1],"11":[0,1],"12":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/CmarginOrderShort.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/CmarginOrderShort.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport { use, request } from \"chai\";\r\nimport { expect } from \"chai\";\r\nimport chaiHttp from \"chai-http\";\r\nuse(chaiHttp);\r\nimport { ethers } from \"ethers\";\r\nimport Big from \"big.js\";\r\nimport { EVENT_NAME } from \"../../socketIo/socket.io\";\r\nimport { getProvider, parseEther } from \"../../utils/utils\";\r\nimport { getExchangeAddress, getVersion } from \"../../helper/chain\";\r\nimport { io } from \"socket.io-client\";\r\nimport path from \"path\";\r\nimport { connect, OrderCreated, Sync } from \"../../DB/db\";\r\nimport { ifOrderCreated } from \"../../helper/interface\";\r\nimport {  getConfig, getContract} from \"../../helper/constant\";\r\n\r\n\r\n\r\nrequire(\"dotenv\").config({ path: path.resolve(process.cwd(), process.env.NODE_ENV?.includes('test') ? \".env.test\" : \".env\") });\r\n\r\n\r\n\r\nconst socket = io(\"http://localhost:3010\");\r\n\r\n\r\n\r\n\r\ndescribe(\"Margin Order Short=> Mint token, create order, execute order, cancel order\", async () => {\r\n\r\n    // requirements\r\n    let chainId = \"421613\"\r\n    let provider = getProvider(chainId);\r\n\r\n    let exchange = getContract(\"Exchange\", chainId)\r\n    let btc = getContract(\"BTC\", chainId)\r\n    let usdc = getContract(\"USDC\", chainId)\r\n    let lever = getContract(\"Lever\", chainId)\r\n    let cUsdc = getContract(\"lUSDC_Market\", chainId)\r\n    let cBtc = getContract(\"lBTC_Market\", chainId)\r\n    let user1 = new ethers.Wallet(process.env.PRIVATE_KEY1! as string).connect(provider); //2\r\n    let user2 = new ethers.Wallet(process.env.PRIVATE_KEY2! as string).connect(provider); //1\r\n\r\n\r\n    let signatures: any[] = [];\r\n    let orders: any[] = [];\r\n    let orderCreated: any[] = []\r\n    let exchangeRate = ethers.utils.parseEther('20000').toString();\r\n\r\n    let salt = Math.floor(Math.random() * 9000000);\r\n    let amount = ethers.utils.parseEther('1').toString();\r\n    let loops = 5;\r\n    let orderType = 3 // short\r\n\r\n    before(async () => {\r\n        await connect()\r\n    });\r\n/*\r\n    it('mint 200000 btc to user1, 200000 BTC to user2', async () => {\r\n        // ORDER IS Short means user1 want more USDC\r\n\r\n        let user1USDCBalancePre = (await usdc.balanceOf(user1.address)).toString();\r\n        let user2USDCBalancePre = (await usdc.balanceOf(user2.address)).toString();\r\n\r\n        const usdcAmount = ethers.utils.parseEther('200000').toString();\r\n\r\n        // user1 and user2 mint btc \r\n        await usdc.connect(user1).mint(user1.address, usdcAmount)\r\n        await usdc.connect(user2).mint(user2.address, usdcAmount)\r\n\r\n        // approve for exchange  \r\n        await usdc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256)\r\n        await btc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256) // as it will sell usdc to buy btc\r\n        await usdc.connect(user2).approve(exchange.address, ethers.constants.MaxUint256)\r\n\r\n        // approve for market\r\n        await usdc.connect(user1).approve(cUsdc.address, ethers.constants.MaxUint256)\r\n        await usdc.connect(user2).approve(cUsdc.address, ethers.constants.MaxUint256)\r\n        const approve = await btc.connect(user1).approve(cBtc.address, ethers.constants.MaxUint256)\r\n        await lever.connect(user1).enterMarkets([cBtc.address, cUsdc.address]);\r\n        await lever.connect(user2).enterMarkets([cBtc.address, cUsdc.address]);\r\n        await approve.wait(1)\r\n\r\n        let user1UsdcBalancePost = (await usdc.balanceOf(user1.address)).toString();\r\n        let user2UsdcBalancePost = (await usdc.balanceOf(user2.address)).toString();\r\n\r\n        expect(user1UsdcBalancePost).to.equal(parseEther(Big(usdcAmount).plus(user1USDCBalancePre).toString()));\r\n        expect(user2UsdcBalancePost).to.equal(parseEther(Big(usdcAmount).plus(user2USDCBalancePre).toString()));\r\n\r\n    });\r\n\r\n\r\n    it(\"make market liquid\", async () => {\r\n\r\n        const btcAmount = ethers.utils.parseEther('1000');\r\n        const usdcAmount = ethers.utils.parseEther('20000000');\r\n\r\n        // mint\r\n\r\n        await btc.connect(user1).mint(user1.address, btcAmount);\r\n        await usdc.connect(user2).mint(user2.address, usdcAmount);\r\n\r\n        // market mint\r\n        await exchange.connect(user1).mint(btc.address, btcAmount);\r\n        await exchange.connect(user2).mint(usdc.address, usdcAmount);\r\n\r\n\r\n        // Approval \r\n\r\n        await btc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256);\r\n        await usdc.connect(user2).approve(exchange.address, ethers.constants.MaxUint256);\r\n\r\n        await lever.connect(user1).enterMarkets([cBtc.address, cUsdc.address]);\r\n        await lever.connect(user2).enterMarkets([cBtc.address, cUsdc.address]);\r\n\r\n    })*/\r\n\r\n\r\n\r\n    it(`user1 create short margin order 1 btc @ 20000}`, async () => {\r\n        const domain = {\r\n            name: getConfig(\"name\"),\r\n            version: getVersion(process.env.NODE_ENV!),\r\n            chainId: chainId.toString(),\r\n            verifyingContract: getExchangeAddress(chainId),\r\n        };\r\n\r\n        // The named list of all type definitions\r\n        const types = {\r\n            Order: [\r\n                { name: 'maker', type: 'address' },\r\n                { name: 'token0', type: 'address' },\r\n                { name: 'token1', type: 'address' },\r\n                { name: 'amount', type: 'uint256' },\r\n                { name: 'orderType', type: 'uint8' },\r\n                { name: 'salt', type: 'uint32' },\r\n                { name: 'exchangeRate', type: 'uint176' },\r\n                { name: 'borrowLimit', type: 'uint32' },\r\n                { name: 'loops', type: 'uint8' }\r\n            ]\r\n        };\r\n\r\n        const value = {\r\n            maker: user1.address.toLowerCase(),\r\n            token0: btc.address.toLowerCase(),\r\n            token1: usdc.address.toLowerCase(),\r\n            amount: amount,\r\n            orderType: orderType,\r\n            salt: salt,\r\n            exchangeRate: exchangeRate,\r\n            borrowLimit: Big(0.75).times(Big(10).pow(6)).toNumber(),\r\n            loops: loops\r\n        };\r\n        // The data to sign\r\n\r\n\r\n        orders.push(value);\r\n        // sign typed data\r\n        const storedSignature = await user1._signTypedData(\r\n            domain,\r\n            types,\r\n            value\r\n        );\r\n        signatures.push(storedSignature);\r\n        console.log([\r\n            value, storedSignature\r\n        ]);\r\n        let res = await request(\"http://localhost:3010\")\r\n            .post(`/v/${getVersion(process.env.NODE_ENV!)}/order/create`)\r\n            .send(\r\n                {\r\n                    \"data\": {\r\n                        \"maker\": user1.address.toLowerCase(),\r\n                        \"token0\": btc.address.toLowerCase(),\r\n                        \"token1\": usdc.address.toLowerCase(),\r\n                        \"amount\": amount,\r\n                        \"orderType\": orderType,\r\n                        \"salt\": salt,\r\n                        \"exchangeRate\": exchangeRate,\r\n                        borrowLimit: Big(0.75).times(Big(10).pow(6)).toNumber(),\r\n                        loops: loops\r\n\r\n                    },\r\n                    \"signature\": storedSignature,\r\n                    \"chainId\": chainId\r\n                }\r\n            );\r\n        console.log(res.body)\r\n        expect(res).to.have.status(201);\r\n        expect(res.body.status).to.be.equal(true);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.message).to.have.string('Order created successfully');\r\n\r\n    });\r\n\r\n    it(`find created order in data base`, async () => {\r\n\r\n        let data = await OrderCreated.findOne({ signature: signatures[0] }).lean()! as ifOrderCreated;\r\n        expect(data).to.be.an('object');\r\n        expect(data.amount).to.equal(amount);\r\n        expect(data.maker).to.equal(user1.address.toLowerCase());\r\n        expect(Number(data.loops)).to.equal(loops)\r\n        orderCreated.push(data)\r\n    })\r\n\r\n\r\n    it(`user1 sell btc got from market to user2 and got 40000 usdc @ 20000 exchangeRate`, async () => {\r\n        let user1BtcBalancePre = btc.balanceOf(user1.address);\r\n        let user2BtcBalancePre = btc.balanceOf(user2.address);\r\n        let user2UsdcBalancePre = usdc.balanceOf(user2.address);\r\n        let user1UsdcBalancePre = usdc.balanceOf(user1.address);\r\n        let promise = await Promise.all([user1BtcBalancePre, user2BtcBalancePre, user2UsdcBalancePre, user1UsdcBalancePre])\r\n        user1BtcBalancePre = promise[0].toString();\r\n        user2BtcBalancePre = promise[1].toString()\r\n        user2UsdcBalancePre = promise[2].toString()\r\n        user1UsdcBalancePre = promise[3].toString()\r\n        // console.log(user1BtcBalancePre)\r\n        const btcAmount = ethers.utils.parseEther('2').toString();\r\n       \r\n\r\n        let exTxn = await exchange.connect(user2).executeT0LimitOrders(\r\n            [signatures[0]],\r\n            [orders[0]],\r\n            btcAmount,\r\n            { gasLimit: \"100000000\" }\r\n        );\r\n\r\n        await exTxn.wait(1)\r\n        let user1BtcBalancePost = btc.balanceOf(user1.address);\r\n        let user1UsdcBalancePost = usdc.balanceOf(user1.address);\r\n        let user2UsdcBalancePost = usdc.balanceOf(user2.address);\r\n        let user2BtcBalancePost = btc.balanceOf(user2.address);\r\n\r\n        let promise1 = await Promise.all([user1BtcBalancePost, user1UsdcBalancePost, user2UsdcBalancePost, user2BtcBalancePost]);\r\n        user1BtcBalancePost = promise1[0].toString();\r\n        user1UsdcBalancePost = promise1[1].toString();\r\n        user2UsdcBalancePost = promise1[2].toString();\r\n        user2BtcBalancePost = promise1[3].toString();\r\n        // console.log(user1BtcBalancePost)\r\n\r\n        let fee = await Sync.findOne().lean()! as any;\r\n        let makerFeeAmount = Big(fee?.makerFee).div(1e18).times(btcAmount);\r\n\r\n        let takerFeeAmount = Big(Big(fee.takerFee).div(1e18)).times(Big(btcAmount));\r\n\r\n        expect(user2BtcBalancePost).to.equal(parseEther(Big(user2BtcBalancePre).plus(btcAmount).minus(takerFeeAmount).toString()));\r\n        expect(user2UsdcBalancePost).to.equal(\r\n            parseEther(\r\n                Big(user2UsdcBalancePre)\r\n                    .minus(\r\n                        Big(btcAmount)\r\n                            .times(exchangeRate)\r\n                            .div(Big(10).pow(18))).toString()))\r\n\r\n    });\r\n\r\n    it(`cancelled  order `, async () => {\r\n\r\n\r\n\r\n        let exTxn = await exchange.connect(user1).cancelOrder(\r\n            signatures[0],\r\n            orders[0],\r\n            { gasLimit: \"100000000\" }\r\n        )\r\n        await exTxn.wait(1);\r\n\r\n        let wait = () => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                let timeOutId = setTimeout(() => {\r\n                    return resolve(\"Success\")\r\n                }, 15000)\r\n\r\n                socket.on(EVENT_NAME.CANCEL_ORDER, (data) => {\r\n                    clearTimeout(timeOutId)\r\n                    return resolve(\"Success\")\r\n                })\r\n            })\r\n        }\r\n        let res = await wait()\r\n        expect(res).to.equal(\"Success\")\r\n        let data = await OrderCreated.findOne({ signature: signatures[0] }).lean()! as ifOrderCreated;\r\n        expect(data).to.be.an('object')\r\n        expect(data).not.to.be.null;\r\n        expect(data.cancelled).to.equal(true)\r\n\r\n    })\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ab1ae9420269c4cc1cdc3edd62e49396a5a61a66","contentHash":"a28be8dd29f037cb8c0776de5d4957bac57c815e35054f570874ed151ebabfba"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\DblackListToken.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\DblackListToken.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"15":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"16":{"start":{"line":17,"column":15},"end":{"line":17,"column":30}},"17":{"start":{"line":18,"column":20},"end":{"line":18,"column":57}},"18":{"start":{"line":19,"column":17},"end":{"line":19,"column":34}},"19":{"start":{"line":20,"column":13},"end":{"line":20,"column":35}},"20":{"start":{"line":21,"column":16},"end":{"line":21,"column":45}},"21":{"start":{"line":22,"column":16},"end":{"line":22,"column":44}},"22":{"start":{"line":23,"column":15},"end":{"line":23,"column":47}},"23":{"start":{"line":24,"column":19},"end":{"line":24,"column":51}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":37}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":185}},"26":{"start":{"line":27,"column":0},"end":{"line":117,"column":4}},"27":{"start":{"line":27,"column":87},"end":{"line":117,"column":2}},"28":{"start":{"line":29,"column":18},"end":{"line":29,"column":26}},"29":{"start":{"line":30,"column":19},"end":{"line":30,"column":52}},"30":{"start":{"line":31,"column":16},"end":{"line":31,"column":130}},"31":{"start":{"line":32,"column":21},"end":{"line":32,"column":23}},"32":{"start":{"line":33,"column":17},"end":{"line":33,"column":19}},"33":{"start":{"line":34,"column":4},"end":{"line":36,"column":8}},"34":{"start":{"line":34,"column":17},"end":{"line":36,"column":6}},"35":{"start":{"line":35,"column":8},"end":{"line":35,"column":34}},"36":{"start":{"line":37,"column":4},"end":{"line":76,"column":8}},"37":{"start":{"line":37,"column":46},"end":{"line":76,"column":6}},"38":{"start":{"line":38,"column":23},"end":{"line":43,"column":9}},"39":{"start":{"line":45,"column":22},"end":{"line":50,"column":9}},"40":{"start":{"line":52,"column":22},"end":{"line":55,"column":9}},"41":{"start":{"line":56,"column":8},"end":{"line":56,"column":27}},"42":{"start":{"line":58,"column":32},"end":{"line":58,"column":80}},"43":{"start":{"line":59,"column":8},"end":{"line":59,"column":41}},"44":{"start":{"line":60,"column":8},"end":{"line":62,"column":11}},"45":{"start":{"line":63,"column":18},"end":{"line":70,"column":10}},"46":{"start":{"line":71,"column":8},"end":{"line":71,"column":30}},"47":{"start":{"line":72,"column":8},"end":{"line":72,"column":52}},"48":{"start":{"line":73,"column":8},"end":{"line":73,"column":62}},"49":{"start":{"line":74,"column":8},"end":{"line":74,"column":56}},"50":{"start":{"line":75,"column":8},"end":{"line":75,"column":80}},"51":{"start":{"line":77,"column":4},"end":{"line":116,"column":8}},"52":{"start":{"line":77,"column":48},"end":{"line":116,"column":6}},"53":{"start":{"line":78,"column":23},"end":{"line":83,"column":9}},"54":{"start":{"line":85,"column":22},"end":{"line":90,"column":9}},"55":{"start":{"line":92,"column":22},"end":{"line":95,"column":9}},"56":{"start":{"line":96,"column":8},"end":{"line":96,"column":27}},"57":{"start":{"line":98,"column":32},"end":{"line":98,"column":80}},"58":{"start":{"line":99,"column":8},"end":{"line":99,"column":41}},"59":{"start":{"line":103,"column":18},"end":{"line":110,"column":10}},"60":{"start":{"line":111,"column":8},"end":{"line":111,"column":30}},"61":{"start":{"line":112,"column":8},"end":{"line":112,"column":52}},"62":{"start":{"line":113,"column":8},"end":{"line":113,"column":62}},"63":{"start":{"line":114,"column":8},"end":{"line":114,"column":56}},"64":{"start":{"line":115,"column":8},"end":{"line":115,"column":72}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":27,"column":81},"end":{"line":27,"column":82}},"loc":{"start":{"line":27,"column":87},"end":{"line":117,"column":2}},"line":27},"9":{"name":"(anonymous_9)","decl":{"start":{"line":27,"column":121},"end":{"line":27,"column":122}},"loc":{"start":{"line":27,"column":134},"end":{"line":117,"column":1}},"line":27},"10":{"name":"(anonymous_10)","decl":{"start":{"line":34,"column":11},"end":{"line":34,"column":12}},"loc":{"start":{"line":34,"column":17},"end":{"line":36,"column":6}},"line":34},"11":{"name":"(anonymous_11)","decl":{"start":{"line":34,"column":51},"end":{"line":34,"column":52}},"loc":{"start":{"line":34,"column":64},"end":{"line":36,"column":5}},"line":34},"12":{"name":"(anonymous_12)","decl":{"start":{"line":37,"column":40},"end":{"line":37,"column":41}},"loc":{"start":{"line":37,"column":46},"end":{"line":76,"column":6}},"line":37},"13":{"name":"(anonymous_13)","decl":{"start":{"line":37,"column":80},"end":{"line":37,"column":81}},"loc":{"start":{"line":37,"column":93},"end":{"line":76,"column":5}},"line":37},"14":{"name":"(anonymous_14)","decl":{"start":{"line":77,"column":42},"end":{"line":77,"column":43}},"loc":{"start":{"line":77,"column":48},"end":{"line":116,"column":6}},"line":77},"15":{"name":"(anonymous_15)","decl":{"start":{"line":77,"column":82},"end":{"line":77,"column":83}},"loc":{"start":{"line":77,"column":95},"end":{"line":116,"column":5}},"line":77}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":26,"column":71},"end":{"line":26,"column":180}},"type":"cond-expr","locations":[{"start":{"line":26,"column":160},"end":{"line":26,"column":171}},{"start":{"line":26,"column":174},"end":{"line":26,"column":180}}],"line":26},"9":{"loc":{"start":{"line":26,"column":72},"end":{"line":26,"column":156}},"type":"cond-expr","locations":[{"start":{"line":26,"column":128},"end":{"line":26,"column":134}},{"start":{"line":26,"column":137},"end":{"line":26,"column":156}}],"line":26},"10":{"loc":{"start":{"line":26,"column":72},"end":{"line":26,"column":125}},"type":"binary-expr","locations":[{"start":{"line":26,"column":72},"end":{"line":26,"column":108}},{"start":{"line":26,"column":112},"end":{"line":26,"column":125}}],"line":26}},"s":{"0":1,"1":5,"2":2,"3":4,"4":5,"5":5,"6":1,"7":0,"8":0,"9":0,"10":8,"11":4,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1},"f":{"0":4,"1":5,"2":2,"3":4,"4":5,"5":0,"6":8,"7":2,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"b":{"0":[1,1,1],"1":[3,2],"2":[4,4],"3":[3,5],"4":[4,4],"5":[1,1,1],"6":[0,2],"7":[2,2],"8":[0,1],"9":[0,1],"10":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/DblackListToken.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/DblackListToken.ts"],"names":[],"mappings":"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","sourcesContent":["\r\n\r\n\r\n\r\nimport { use, request } from \"chai\";\r\nimport { expect } from \"chai\";\r\nimport chaiHttp from \"chai-http\";\r\nimport { ethers } from \"ethers\";\r\nimport { connect } from \"../../DB/db\";\r\nimport { getExchangeAddress, getVersion } from \"../../helper/chain\";\r\nimport { ifOrderCreated } from \"../../helper/interface\";\r\nimport { getProvider } from \"../../utils/utils\";\r\nimport path from \"path\";\r\nimport { getConfig, getContractAddress } from \"../../helper/constant\";\r\nuse(chaiHttp);\r\nrequire(\"dotenv\").config({ path: path.resolve(process.cwd(), process.env.NODE_ENV?.includes('test') ? \".env.test\" : \".env\") });\r\n\r\n\r\n\r\ndescribe(\"Limit Order => Mint token, create order, execute order, cancel order\", async () => {\r\n\r\n    // requirements\r\n    let chainId = \"421613\"\r\n    let provider = getProvider(chainId);\r\n    let user1 = new ethers.Wallet(\"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\").connect(provider); //1 \r\n    let signatures: any[] = [];\r\n    let orders: any[] = [];\r\n\r\n    before(async () => {\r\n        await connect()\r\n    });\r\n\r\n\r\n    it(`Add link address in blacklist`, async () => {\r\n\r\n        const domain = {\r\n            name: getConfig(\"name\"),\r\n            version: getVersion(process.env.NODE_ENV!),\r\n            chainId: chainId.toString(),\r\n            verifyingContract: getExchangeAddress(chainId),\r\n        };\r\n\r\n        // The named list of all type definitions\r\n        const types = {\r\n            Request: [\r\n                { name: 'token', type: 'address' },\r\n                { name: 'blackList', type: 'uint8' },\r\n            ]\r\n        };\r\n\r\n        // The data to sign\r\n        const value = {\r\n            token: getContractAddress(\"LINK\"),\r\n            blackList: 0\r\n        };\r\n\r\n        orders.push(value);\r\n        // sign typed data\r\n        const storedSignature = await user1._signTypedData(\r\n            domain,\r\n            types,\r\n            value\r\n        );\r\n        signatures.push(storedSignature);\r\n        console.log([\r\n            value, storedSignature\r\n        ]);\r\n\r\n        let res = await request(\"http://localhost:3010\")\r\n            .put(`/v/${getVersion(process.env.NODE_ENV!)}/pair/blacklist `)\r\n            .send(\r\n                {\r\n                    \"token\": getContractAddress(\"LINK\"),\r\n                    \"blackList\": 0,\r\n                    \"signature\": storedSignature.toLowerCase(),\r\n                    \"chainId\": chainId\r\n                }\r\n            );\r\n\r\n\r\n        console.log(res.body)\r\n        expect(res).to.have.status(200);\r\n        expect(res.body.status).to.be.equal(true);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.message).to.have.string(\"Token Deactivate\");\r\n\r\n    });\r\n    it(`Remove Linktoken from blacklist`, async () => {\r\n\r\n        const domain = {\r\n            name: getConfig(\"name\"),\r\n            version: getVersion(process.env.NODE_ENV!),\r\n            chainId: chainId.toString(),\r\n            verifyingContract: getExchangeAddress(chainId),\r\n        };\r\n\r\n        // The named list of all type definitions\r\n        const types = {\r\n            Request: [\r\n                { name: 'token', type: 'address' },\r\n                { name: 'blackList', type: 'uint8' },\r\n            ]\r\n        };\r\n\r\n        // The data to sign\r\n        const value = {\r\n            token: getContractAddress(\"LINK\"),\r\n            blackList: 1\r\n        };\r\n\r\n        orders.push(value);\r\n        // sign typed data\r\n        const storedSignature = await user1._signTypedData(\r\n            domain,\r\n            types,\r\n            value\r\n        );\r\n        signatures.push(storedSignature);\r\n        // console.log([\r\n        //     value, storedSignature\r\n        // ]);\r\n\r\n        let res = await request(\"http://localhost:3010\")\r\n            .put(`/v/${getVersion(process.env.NODE_ENV!)}/pair/blacklist `)\r\n            .send(\r\n                {\r\n                    \"token\": getContractAddress(\"LINK\"),\r\n                    \"blackList\": 1,\r\n                    \"signature\": storedSignature.toLowerCase(),\r\n                    \"chainId\": chainId\r\n                }\r\n            );\r\n\r\n\r\n        console.log(res.body)\r\n        expect(res).to.have.status(200);\r\n        expect(res.body.status).to.be.equal(true);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.message).to.equal(\"Token Activate\")\r\n\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"192b6acf5a85be20416e41b7769526e13e3085f3","contentHash":"787709ac32e4f04b2a1158cee1b41ce690cec90a1fdde8bc3805a7c52328594a"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\handleMinTokenAmountSet.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\handleMinTokenAmountSet.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":13},"end":{"line":12,"column":35}},"14":{"start":{"line":13,"column":34},"end":{"line":13,"column":83}},"15":{"start":{"line":14,"column":15},"end":{"line":14,"column":30}},"16":{"start":{"line":15,"column":19},"end":{"line":15,"column":51}},"17":{"start":{"line":17,"column":0},"end":{"line":45,"column":4}},"18":{"start":{"line":17,"column":75},"end":{"line":45,"column":2}},"19":{"start":{"line":18,"column":26},"end":{"line":18,"column":29}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":30}},"21":{"start":{"line":20,"column":4},"end":{"line":44,"column":8}},"22":{"start":{"line":20,"column":79},"end":{"line":44,"column":6}},"23":{"start":{"line":21,"column":27},"end":{"line":21,"column":68}},"24":{"start":{"line":22,"column":23},"end":{"line":22,"column":34}},"25":{"start":{"line":24,"column":30},"end":{"line":24,"column":81}},"26":{"start":{"line":25,"column":8},"end":{"line":25,"column":57}},"27":{"start":{"line":26,"column":19},"end":{"line":26,"column":41}},"28":{"start":{"line":27,"column":8},"end":{"line":27,"column":75}},"29":{"start":{"line":29,"column":34},"end":{"line":29,"column":95}},"30":{"start":{"line":30,"column":8},"end":{"line":30,"column":82}},"31":{"start":{"line":32,"column":23},"end":{"line":32,"column":95}},"32":{"start":{"line":33,"column":8},"end":{"line":35,"column":11}},"33":{"start":{"line":34,"column":12},"end":{"line":34,"column":61}},"34":{"start":{"line":37,"column":8},"end":{"line":37,"column":100}},"35":{"start":{"line":38,"column":35},"end":{"line":38,"column":96}},"36":{"start":{"line":39,"column":8},"end":{"line":39,"column":90}},"37":{"start":{"line":40,"column":24},"end":{"line":40,"column":96}},"38":{"start":{"line":41,"column":8},"end":{"line":43,"column":11}},"39":{"start":{"line":42,"column":12},"end":{"line":42,"column":68}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":17,"column":69},"end":{"line":17,"column":70}},"loc":{"start":{"line":17,"column":75},"end":{"line":45,"column":2}},"line":17},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":109},"end":{"line":17,"column":110}},"loc":{"start":{"line":17,"column":122},"end":{"line":45,"column":1}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":20,"column":73},"end":{"line":20,"column":74}},"loc":{"start":{"line":20,"column":79},"end":{"line":44,"column":6}},"line":20},"10":{"name":"(anonymous_10)","decl":{"start":{"line":20,"column":113},"end":{"line":20,"column":114}},"loc":{"start":{"line":20,"column":126},"end":{"line":44,"column":5}},"line":20},"11":{"name":"(anonymous_11)","decl":{"start":{"line":33,"column":25},"end":{"line":33,"column":26}},"loc":{"start":{"line":33,"column":32},"end":{"line":35,"column":9}},"line":33},"12":{"name":"(anonymous_12)","decl":{"start":{"line":41,"column":26},"end":{"line":41,"column":27}},"loc":{"start":{"line":41,"column":33},"end":{"line":43,"column":9}},"line":41}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":8,"2":5,"3":2,"4":8,"5":8,"6":0,"7":0,"8":0,"9":0,"10":10,"11":2,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1},"f":{"0":2,"1":8,"2":5,"3":2,"4":8,"5":0,"6":10,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"b":{"0":[1,1,1],"1":[3,5],"2":[2,2],"3":[2,8],"4":[2,2]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/handleMinTokenAmountSet.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/handleMinTokenAmountSet.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,oCAA0D;AAC1D,oFAAiF;AACjF,+BAA8B;AAC9B,oDAA2D;AAG3D,wFAAwF;AAExF,QAAQ,CAAC,0DAA0D,EAAE,GAAS,EAAE;IAC5E,IAAI,eAAe,GAAG,GAAG,CAAA;IACzB,MAAM,IAAA,YAAO,GAAE,CAAC;IAChB,EAAE,CAAC,gEAAgE,EAAE,GAAS,EAAE;QAE5E,MAAM,UAAU,GAAG,IAAA,6BAAkB,EAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,QAAQ,GAAG,WAAW,CAAC;QAE3B,wBAAwB;QAExB,IAAI,eAAe,GAAG,MAAM,UAAK,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,IAAI,EAAU,CAAA;QAC5E,eAAe,GAAG,eAAe,CAAC,cAAc,CAAC;QACjD,IAAI,IAAI,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;QACjC,MAAM,IAAA,iDAAuB,EAAC,IAAI,CAAC,CAAC;QAEpC,mCAAmC;QAEnC,IAAI,mBAAmB,GAAG,MAAM,UAAK,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAU,CAAA;QAE1F,IAAA,aAAM,EAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAE9D,8CAA8C;QAE9C,IAAI,QAAQ,GAAG,MAAM,gBAAW,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAEnF,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACnB,IAAA,aAAM,EAAC,CAAC,CAAC,cAAc,IAAI,QAAQ,CAAC,CAAA;QACxC,CAAC,CAAC,CAAA;QAEF,6BAA6B;QAE7B,MAAM,IAAA,iDAAuB,EAAC,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC,CAAA;QAE5D,IAAI,oBAAoB,GAAG,MAAM,UAAK,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAU,CAAA;QAE3F,IAAA,aAAM,EAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAEtE,IAAI,SAAS,GAAG,MAAM,gBAAW,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAEpF,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACpB,IAAA,aAAM,EAAC,CAAC,CAAC,cAAc,IAAI,eAAe,CAAC,CAAA;QAC/C,CAAC,CAAC,CAAA;IAIN,CAAC,CAAA,CAAC,CAAC;AAIP,CAAC,CAAA,CAAC,CAAA","sourcesContent":["\r\nimport { connect, PairCreated, Token } from \"../../DB/db\";\r\nimport { handleMinTokenAmountSet } from \"../../handlers/handleMinTokenAmountSet\";\r\nimport { expect } from \"chai\";\r\nimport { getContractAddress } from \"../../helper/constant\";\r\n\r\n\r\n// befor running this make sure btc token present in the database, and its piar created.\r\n\r\ndescribe(\"handleMinTokenAmountSet, change its minToken and restore\", async () => {\r\n    let currentMinToken = \"0\"\r\n    await connect();\r\n    it(\"it will change btc minToken and then restore to previous value\", async () => {\r\n       \r\n        const btcAddress = getContractAddress(\"BTC\");\r\n        let minToken = \"123456789\";\r\n\r\n        // get current minToken \r\n\r\n        let getTokenDetails = await Token.findOne({ id: btcAddress }).lean()! as any\r\n        currentMinToken = getTokenDetails.minTokenAmount;\r\n        let data = [btcAddress, minToken]\r\n        await handleMinTokenAmountSet(data);\r\n\r\n        // check new amount updated or not;\r\n\r\n        let getTokenAfterUpdate = await Token.findOne({ _id: getTokenDetails._id }).lean()! as any\r\n\r\n        expect(getTokenAfterUpdate.minTokenAmount).to.equal(minToken);\r\n\r\n        // checking pairs updated where btc is token0;\r\n\r\n        let getPairs = await PairCreated.find({ token0: btcAddress, active: true }).lean();\r\n\r\n        getPairs.forEach((x) => {\r\n            expect(x.minToken0Order == minToken)\r\n        })\r\n\r\n        // updating as per old value;\r\n\r\n        await handleMinTokenAmountSet([btcAddress, currentMinToken])\r\n\r\n        let getTokenAfterUpdate1 = await Token.findOne({ _id: getTokenDetails._id }).lean()! as any\r\n\r\n        expect(getTokenAfterUpdate1.minTokenAmount).to.equal(currentMinToken);\r\n\r\n        let getPairs1 = await PairCreated.find({ token0: btcAddress, active: true }).lean();\r\n\r\n        getPairs1.forEach((x) => {\r\n            expect(x.minToken0Order == currentMinToken)\r\n        })\r\n\r\n\r\n\r\n    });\r\n\r\n\r\n\r\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b74ca860f2bd6d0249606519b1bef89f55ae71f3","contentHash":"4165500edf564e1dbb86ed313bcf6d87cf1c83d9614cf0fc483b0aa2f45bf892"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\handlers\\handleMinTokenAmountSet.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\handlers\\handleMinTokenAmountSet.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"14":{"start":{"line":13,"column":13},"end":{"line":13,"column":32}},"15":{"start":{"line":15,"column":4},"end":{"line":30,"column":7}},"16":{"start":{"line":16,"column":8},"end":{"line":29,"column":9}},"17":{"start":{"line":17,"column":26},"end":{"line":17,"column":53}},"18":{"start":{"line":18,"column":30},"end":{"line":18,"column":48}},"19":{"start":{"line":19,"column":12},"end":{"line":19,"column":116}},"20":{"start":{"line":20,"column":24},"end":{"line":20,"column":91}},"21":{"start":{"line":21,"column":12},"end":{"line":23,"column":16}},"22":{"start":{"line":21,"column":33},"end":{"line":23,"column":14}},"23":{"start":{"line":22,"column":16},"end":{"line":22,"column":113}},"24":{"start":{"line":24,"column":12},"end":{"line":24,"column":95}},"25":{"start":{"line":27,"column":12},"end":{"line":27,"column":66}},"26":{"start":{"line":32,"column":0},"end":{"line":32,"column":58}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"handleMinTokenAmountSet","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":32}},"loc":{"start":{"line":14,"column":39},"end":{"line":31,"column":1}},"line":14},"8":{"name":"(anonymous_8)","decl":{"start":{"line":15,"column":43},"end":{"line":15,"column":44}},"loc":{"start":{"line":15,"column":56},"end":{"line":30,"column":5}},"line":15},"9":{"name":"(anonymous_9)","decl":{"start":{"line":21,"column":26},"end":{"line":21,"column":27}},"loc":{"start":{"line":21,"column":33},"end":{"line":23,"column":14}},"line":21},"10":{"name":"(anonymous_10)","decl":{"start":{"line":21,"column":65},"end":{"line":21,"column":66}},"loc":{"start":{"line":21,"column":78},"end":{"line":23,"column":13}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":6,"2":6,"3":4,"4":6,"5":6,"6":0,"7":0,"8":0,"9":0,"10":10,"11":4,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":0,"26":1},"f":{"0":4,"1":6,"2":6,"3":4,"4":6,"5":0,"6":10,"7":2,"8":2,"9":2,"10":2},"b":{"0":[1,1,1],"1":[0,6],"2":[4,4],"3":[4,6],"4":[4,4]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/handlers/handleMinTokenAmountSet.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/handlers/handleMinTokenAmountSet.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,iCAA8C;AAO9C,SAAsB,uBAAuB,CAAC,IAAS;;QAEnD,IAAG;YACC,MAAM,KAAK,GAAI,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;YAC3C,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAErC,MAAM,UAAK,CAAC,gBAAgB,CACxB,EAAC,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC,EACzB,EAAC,IAAI,EAAC,EAAC,cAAc,EAAE,SAAS,EAAC,EAAC,CACrC,CAAC;YAEF,IAAI,KAAK,GAAG,MAAM,gBAAW,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YAEzE,KAAK,CAAC,OAAO,CAAC,CAAO,CAAC,EAAC,EAAE;gBACrB,MAAM,gBAAW,CAAC,gBAAgB,CAC9B,EAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAC,EACZ,EAAC,IAAI,EAAC,EAAC,cAAc,EAAE,SAAS,EAAC,EAAC,CACrC,CAAA;YACL,CAAC,CAAA,CAAC,CAAC;YAEH,OAAO,CAAC,GAAG,CAAC,oCAAoC,KAAK,iBAAiB,SAAS,EAAE,CAAC,CAAA;SAErF;QACD,OAAM,KAAK,EAAC;YAER,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;YACtD,iCAAiC;SACpC;IACL,CAAC;CAAA;AA5BD,0DA4BC","sourcesContent":["import * as sentry from "@sentry/node";\"../../app\";\r\nimport { PairCreated, Token } from \"../DB/db\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport async function handleMinTokenAmountSet(data: any){\r\n\r\n    try{\r\n        const token =  data[0].toLocaleLowerCase();\r\n        const minAMount = data[1].toString();\r\n\r\n        await Token.findOneAndUpdate(\r\n            {id: token, active: true},\r\n            {$set:{minTokenAmount: minAMount}}\r\n        );\r\n\r\n        let pairs = await PairCreated.find({token0: token, active: true}).lean();\r\n        \r\n        pairs.forEach(async (x)=>{\r\n            await PairCreated.findOneAndUpdate(\r\n                {_id: x._id},\r\n                {$set:{minToken0Order: minAMount}}\r\n            )\r\n        });\r\n\r\n        console.log(`Min token amount updated token = ${token}, minAmount = ${minAMount}`)\r\n\r\n    }\r\n    catch(error){\r\n\r\n        console.log(\"Error @ handleMinTokenAmountSet\", error);\r\n        // sentry.captureException(error)\r\n    }\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0f4c78edb0a7c4d23e21d1181470ede97c4ac1fb","contentHash":"a99d979033acc29d9ceae5b378dd38e3439a16a26932b19583428b19a8e0bc09"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\pairTest.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\pairTest.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":15},"end":{"line":15,"column":30}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"17":{"start":{"line":17,"column":20},"end":{"line":17,"column":57}},"18":{"start":{"line":18,"column":13},"end":{"line":18,"column":35}},"19":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}},"20":{"start":{"line":20,"column":16},"end":{"line":20,"column":45}},"21":{"start":{"line":21,"column":0},"end":{"line":47,"column":3}},"22":{"start":{"line":22,"column":4},"end":{"line":24,"column":8}},"23":{"start":{"line":22,"column":17},"end":{"line":24,"column":6}},"24":{"start":{"line":23,"column":8},"end":{"line":23,"column":34}},"25":{"start":{"line":28,"column":4},"end":{"line":46,"column":8}},"26":{"start":{"line":28,"column":42},"end":{"line":46,"column":6}},"27":{"start":{"line":29,"column":8},"end":{"line":37,"column":12}},"28":{"start":{"line":29,"column":51},"end":{"line":37,"column":10}},"29":{"start":{"line":30,"column":22},"end":{"line":31,"column":104}},"30":{"start":{"line":32,"column":12},"end":{"line":32,"column":56}},"31":{"start":{"line":33,"column":12},"end":{"line":33,"column":60}},"32":{"start":{"line":34,"column":12},"end":{"line":34,"column":64}},"33":{"start":{"line":35,"column":12},"end":{"line":35,"column":70}},"34":{"start":{"line":36,"column":12},"end":{"line":36,"column":66}},"35":{"start":{"line":38,"column":8},"end":{"line":45,"column":12}},"36":{"start":{"line":38,"column":67},"end":{"line":45,"column":10}},"37":{"start":{"line":39,"column":22},"end":{"line":40,"column":89}},"38":{"start":{"line":41,"column":12},"end":{"line":41,"column":56}},"39":{"start":{"line":42,"column":12},"end":{"line":42,"column":67}},"40":{"start":{"line":43,"column":12},"end":{"line":43,"column":60}},"41":{"start":{"line":44,"column":12},"end":{"line":44,"column":85}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":21,"column":29},"end":{"line":21,"column":30}},"loc":{"start":{"line":21,"column":35},"end":{"line":47,"column":1}},"line":21},"9":{"name":"(anonymous_9)","decl":{"start":{"line":22,"column":11},"end":{"line":22,"column":12}},"loc":{"start":{"line":22,"column":17},"end":{"line":24,"column":6}},"line":22},"10":{"name":"(anonymous_10)","decl":{"start":{"line":22,"column":51},"end":{"line":22,"column":52}},"loc":{"start":{"line":22,"column":64},"end":{"line":24,"column":5}},"line":22},"11":{"name":"(anonymous_11)","decl":{"start":{"line":28,"column":36},"end":{"line":28,"column":37}},"loc":{"start":{"line":28,"column":42},"end":{"line":46,"column":6}},"line":28},"12":{"name":"(anonymous_12)","decl":{"start":{"line":28,"column":76},"end":{"line":28,"column":77}},"loc":{"start":{"line":28,"column":89},"end":{"line":46,"column":5}},"line":28},"13":{"name":"(anonymous_13)","decl":{"start":{"line":29,"column":45},"end":{"line":29,"column":46}},"loc":{"start":{"line":29,"column":51},"end":{"line":37,"column":10}},"line":29},"14":{"name":"(anonymous_14)","decl":{"start":{"line":29,"column":85},"end":{"line":29,"column":86}},"loc":{"start":{"line":29,"column":98},"end":{"line":37,"column":9}},"line":29},"15":{"name":"(anonymous_15)","decl":{"start":{"line":38,"column":61},"end":{"line":38,"column":62}},"loc":{"start":{"line":38,"column":67},"end":{"line":45,"column":10}},"line":38},"16":{"name":"(anonymous_16)","decl":{"start":{"line":38,"column":101},"end":{"line":38,"column":102}},"loc":{"start":{"line":38,"column":114},"end":{"line":45,"column":9}},"line":38}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":3,"2":2,"3":4,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":7,"11":4,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1},"f":{"0":4,"1":3,"2":2,"3":4,"4":3,"5":0,"6":7,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"b":{"0":[1,1,1],"1":[1,2],"2":[4,4],"3":[4,3],"4":[4,4],"5":[1,1,1],"6":[0,1],"7":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/pairTest.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/pairTest.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA,+BAAoC;AACpC,+BAA8B;AAC9B,0DAAiC;AACjC,oCAAsC;AACtC,IAAA,UAAG,EAAC,mBAAQ,CAAC,CAAC;AACd,8CAAgD;AAKhD,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAE9B,MAAM,CAAC,GAAS,EAAE;QACd,MAAM,IAAA,YAAO,GAAE,CAAA;IACnB,CAAC,CAAA,CAAC,CAAC;IACH;;QAEI;IACJ,QAAQ,CAAC,qBAAqB,EAAE,GAAS,EAAE;QAEvC,EAAE,CAAC,gCAAgC,EAAE,GAAS,EAAE;YAE5C,IAAI,GAAG,GAAG,MAAM,IAAA,cAAO,EAAC,uBAAuB,CAAC;iBAC3C,GAAG,CAAC,MAAM,IAAA,kBAAU,EAAC,OAAO,CAAC,GAAG,CAAC,QAAS,CAAC,+BAA+B,CAAC,CAAA;YAChF,IAAA,aAAM,EAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAChC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;YACxC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC,CAAA,CAAC,CAAC;QAGH,EAAE,CAAC,gDAAgD,EAAE,GAAS,EAAE;YAC5D,IAAI,GAAG,GAAG,MAAM,IAAA,cAAO,EAAC,uBAAuB,CAAC;iBAC3C,GAAG,CAAC,MAAM,IAAA,kBAAU,EAAC,OAAO,CAAC,GAAG,CAAC,QAAS,CAAC,gBAAgB,CAAC,CAAA;YAEjE,IAAA,aAAM,EAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAChC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3C,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;QACjE,CAAC,CAAA,CAAC,CAAC;IAGP,CAAC,CAAA,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["\r\n\r\nimport { use, request } from \"chai\";\r\nimport { expect } from \"chai\";\r\nimport chaiHttp from \"chai-http\";\r\nimport { connect } from \"../../DB/db\";\r\nuse(chaiHttp);\r\nimport { getVersion } from \"../../helper/chain\";\r\nimport { } from \"../../helper/constant\";\r\n\r\n\r\n\r\ndescribe('Testing Pair Api', () => {\r\n\r\n    before(async () => {\r\n        await connect()\r\n    });\r\n    /*\r\n      * Test the /GET route\r\n      */\r\n    describe('Get(/pair/allpairs)', async () => {\r\n\r\n        it('it should  have atleast a pair', async () => {\r\n\r\n            let res = await request(\"http://localhost:3010\")\r\n                .get(`/v/${getVersion(process.env.NODE_ENV!)}/pair/allpairs?chainId=421613`)\r\n            expect(res).to.have.status(200);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body.data).to.be.an('array');\r\n            expect(res.body.data).not.to.have.lengthOf(0);\r\n            expect(res.body.status).to.be.equal(true);\r\n        });\r\n\r\n\r\n        it('it should send error for not providing chainId', async () => {\r\n            let res = await request(\"http://localhost:3010\")\r\n                .get(`/v/${getVersion(process.env.NODE_ENV!)}/pair/allpairs`)\r\n\r\n            expect(res).to.have.status(400);\r\n            expect(res.body.status).to.be.equal(false);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body.error).to.have.string('chainId is required');\r\n        });\r\n\r\n\r\n    });\r\n\r\n});"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"76a8abedeb168002301360606ec2a22c116d42bb","contentHash":"780eafe327a37b53891eb570aa2b4dafdc4b726e94a8392871422a934ecb040b"}}