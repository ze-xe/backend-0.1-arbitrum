{"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\AorderScriptTest.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\AorderScriptTest.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"15":{"start":{"line":16,"column":17},"end":{"line":16,"column":51}},"16":{"start":{"line":17,"column":15},"end":{"line":17,"column":30}},"17":{"start":{"line":18,"column":15},"end":{"line":18,"column":30}},"18":{"start":{"line":19,"column":20},"end":{"line":19,"column":57}},"19":{"start":{"line":20,"column":17},"end":{"line":20,"column":34}},"20":{"start":{"line":21,"column":13},"end":{"line":21,"column":32}},"21":{"start":{"line":22,"column":16},"end":{"line":22,"column":45}},"22":{"start":{"line":23,"column":29},"end":{"line":23,"column":68}},"23":{"start":{"line":24,"column":16},"end":{"line":24,"column":38}},"24":{"start":{"line":25,"column":27},"end":{"line":25,"column":54}},"25":{"start":{"line":26,"column":15},"end":{"line":26,"column":47}},"26":{"start":{"line":27,"column":20},"end":{"line":27,"column":55}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":185}},"29":{"start":{"line":30,"column":15},"end":{"line":30,"column":66}},"30":{"start":{"line":31,"column":0},"end":{"line":233,"column":4}},"31":{"start":{"line":31,"column":87},"end":{"line":233,"column":2}},"32":{"start":{"line":33,"column":18},"end":{"line":33,"column":26}},"33":{"start":{"line":34,"column":19},"end":{"line":34,"column":52}},"34":{"start":{"line":35,"column":19},"end":{"line":35,"column":126}},"35":{"start":{"line":36,"column":14},"end":{"line":36,"column":113}},"36":{"start":{"line":37,"column":15},"end":{"line":37,"column":115}},"37":{"start":{"line":38,"column":16},"end":{"line":38,"column":86}},"38":{"start":{"line":39,"column":16},"end":{"line":39,"column":86}},"39":{"start":{"line":40,"column":21},"end":{"line":40,"column":23}},"40":{"start":{"line":41,"column":17},"end":{"line":41,"column":19}},"41":{"start":{"line":42,"column":23},"end":{"line":42,"column":75}},"42":{"start":{"line":43,"column":16},"end":{"line":43,"column":18}},"43":{"start":{"line":44,"column":18},"end":{"line":44,"column":20}},"44":{"start":{"line":45,"column":15},"end":{"line":45,"column":50}},"45":{"start":{"line":46,"column":17},"end":{"line":46,"column":65}},"46":{"start":{"line":47,"column":20},"end":{"line":47,"column":21}},"47":{"start":{"line":48,"column":20},"end":{"line":48,"column":22}},"48":{"start":{"line":49,"column":25},"end":{"line":49,"column":28}},"49":{"start":{"line":50,"column":4},"end":{"line":54,"column":8}},"50":{"start":{"line":50,"column":17},"end":{"line":54,"column":6}},"51":{"start":{"line":53,"column":8},"end":{"line":53,"column":34}},"52":{"start":{"line":55,"column":4},"end":{"line":70,"column":8}},"53":{"start":{"line":55,"column":86},"end":{"line":70,"column":6}},"54":{"start":{"line":56,"column":33},"end":{"line":56,"column":80}},"55":{"start":{"line":57,"column":34},"end":{"line":57,"column":82}},"56":{"start":{"line":58,"column":26},"end":{"line":58,"column":75}},"57":{"start":{"line":59,"column":18},"end":{"line":59,"column":73}},"58":{"start":{"line":61,"column":22},"end":{"line":61,"column":110}},"59":{"start":{"line":62,"column":27},"end":{"line":62,"column":80}},"60":{"start":{"line":63,"column":18},"end":{"line":63,"column":75}},"61":{"start":{"line":65,"column":23},"end":{"line":65,"column":112}},"62":{"start":{"line":66,"column":34},"end":{"line":66,"column":81}},"63":{"start":{"line":67,"column":35},"end":{"line":67,"column":83}},"64":{"start":{"line":68,"column":8},"end":{"line":68,"column":152}},"65":{"start":{"line":69,"column":8},"end":{"line":69,"column":155}},"66":{"start":{"line":71,"column":4},"end":{"line":138,"column":8}},"67":{"start":{"line":71,"column":92},"end":{"line":138,"column":6}},"68":{"start":{"line":73,"column":23},"end":{"line":78,"column":9}},"69":{"start":{"line":80,"column":22},"end":{"line":92,"column":9}},"70":{"start":{"line":94,"column":22},"end":{"line":104,"column":9}},"71":{"start":{"line":105,"column":8},"end":{"line":105,"column":27}},"72":{"start":{"line":107,"column":32},"end":{"line":107,"column":80}},"73":{"start":{"line":108,"column":8},"end":{"line":108,"column":41}},"74":{"start":{"line":112,"column":30},"end":{"line":112,"column":139}},"75":{"start":{"line":113,"column":26},"end":{"line":113,"column":166}},"76":{"start":{"line":114,"column":18},"end":{"line":130,"column":10}},"77":{"start":{"line":131,"column":31},"end":{"line":131,"column":140}},"78":{"start":{"line":132,"column":8},"end":{"line":132,"column":52}},"79":{"start":{"line":133,"column":8},"end":{"line":133,"column":62}},"80":{"start":{"line":134,"column":8},"end":{"line":134,"column":56}},"81":{"start":{"line":135,"column":8},"end":{"line":135,"column":90}},"82":{"start":{"line":136,"column":8},"end":{"line":136,"column":60}},"83":{"start":{"line":137,"column":8},"end":{"line":137,"column":197}},"84":{"start":{"line":139,"column":4},"end":{"line":145,"column":8}},"85":{"start":{"line":139,"column":48},"end":{"line":145,"column":6}},"86":{"start":{"line":140,"column":19},"end":{"line":140,"column":87}},"87":{"start":{"line":141,"column":8},"end":{"line":141,"column":52}},"88":{"start":{"line":142,"column":8},"end":{"line":142,"column":57}},"89":{"start":{"line":143,"column":8},"end":{"line":143,"column":77}},"90":{"start":{"line":144,"column":8},"end":{"line":144,"column":26}},"91":{"start":{"line":146,"column":4},"end":{"line":199,"column":8}},"92":{"start":{"line":146,"column":47},"end":{"line":199,"column":6}},"93":{"start":{"line":149,"column":33},"end":{"line":149,"column":61}},"94":{"start":{"line":150,"column":33},"end":{"line":150,"column":61}},"95":{"start":{"line":151,"column":34},"end":{"line":151,"column":63}},"96":{"start":{"line":152,"column":34},"end":{"line":152,"column":63}},"97":{"start":{"line":153,"column":22},"end":{"line":153,"column":123}},"98":{"start":{"line":154,"column":8},"end":{"line":154,"column":51}},"99":{"start":{"line":155,"column":8},"end":{"line":155,"column":51}},"100":{"start":{"line":156,"column":8},"end":{"line":156,"column":52}},"101":{"start":{"line":157,"column":8},"end":{"line":157,"column":52}},"102":{"start":{"line":159,"column":30},"end":{"line":159,"column":139}},"103":{"start":{"line":160,"column":8},"end":{"line":160,"column":166}},"104":{"start":{"line":161,"column":8},"end":{"line":161,"column":71}},"105":{"start":{"line":162,"column":22},"end":{"line":162,"column":138}},"106":{"start":{"line":163,"column":8},"end":{"line":163,"column":28}},"107":{"start":{"line":164,"column":34},"end":{"line":164,"column":62}},"108":{"start":{"line":165,"column":35},"end":{"line":165,"column":64}},"109":{"start":{"line":166,"column":35},"end":{"line":166,"column":64}},"110":{"start":{"line":167,"column":34},"end":{"line":167,"column":62}},"111":{"start":{"line":168,"column":23},"end":{"line":168,"column":128}},"112":{"start":{"line":169,"column":8},"end":{"line":169,"column":53}},"113":{"start":{"line":170,"column":8},"end":{"line":170,"column":54}},"114":{"start":{"line":171,"column":8},"end":{"line":171,"column":54}},"115":{"start":{"line":172,"column":8},"end":{"line":172,"column":53}},"116":{"start":{"line":173,"column":8},"end":{"line":173,"column":153}},"117":{"start":{"line":174,"column":8},"end":{"line":177,"column":66}},"118":{"start":{"line":178,"column":8},"end":{"line":178,"column":152}},"119":{"start":{"line":179,"column":8},"end":{"line":182,"column":66}},"120":{"start":{"line":183,"column":19},"end":{"line":193,"column":9}},"121":{"start":{"line":184,"column":12},"end":{"line":192,"column":15}},"122":{"start":{"line":185,"column":32},"end":{"line":187,"column":25}},"123":{"start":{"line":186,"column":20},"end":{"line":186,"column":46}},"124":{"start":{"line":188,"column":16},"end":{"line":191,"column":19}},"125":{"start":{"line":189,"column":20},"end":{"line":189,"column":44}},"126":{"start":{"line":190,"column":20},"end":{"line":190,"column":46}},"127":{"start":{"line":194,"column":18},"end":{"line":194,"column":30}},"128":{"start":{"line":195,"column":8},"end":{"line":195,"column":52}},"129":{"start":{"line":196,"column":8},"end":{"line":198,"column":12}},"130":{"start":{"line":196,"column":43},"end":{"line":198,"column":10}},"131":{"start":{"line":197,"column":12},"end":{"line":197,"column":41}},"132":{"start":{"line":200,"column":4},"end":{"line":208,"column":8}},"133":{"start":{"line":200,"column":58},"end":{"line":208,"column":6}},"134":{"start":{"line":201,"column":27},"end":{"line":201,"column":97}},"135":{"start":{"line":202,"column":27},"end":{"line":202,"column":136}},"136":{"start":{"line":203,"column":8},"end":{"line":203,"column":56}},"137":{"start":{"line":204,"column":8},"end":{"line":204,"column":132}},"138":{"start":{"line":205,"column":8},"end":{"line":205,"column":137}},"139":{"start":{"line":206,"column":8},"end":{"line":206,"column":56}},"140":{"start":{"line":207,"column":8},"end":{"line":207,"column":192}},"141":{"start":{"line":209,"column":4},"end":{"line":232,"column":8}},"142":{"start":{"line":209,"column":74},"end":{"line":232,"column":6}},"143":{"start":{"line":210,"column":30},"end":{"line":210,"column":139}},"144":{"start":{"line":211,"column":20},"end":{"line":211,"column":114}},"145":{"start":{"line":212,"column":8},"end":{"line":212,"column":28}},"146":{"start":{"line":213,"column":19},"end":{"line":223,"column":9}},"147":{"start":{"line":214,"column":12},"end":{"line":222,"column":15}},"148":{"start":{"line":215,"column":32},"end":{"line":217,"column":25}},"149":{"start":{"line":216,"column":20},"end":{"line":216,"column":46}},"150":{"start":{"line":218,"column":16},"end":{"line":221,"column":19}},"151":{"start":{"line":219,"column":20},"end":{"line":219,"column":44}},"152":{"start":{"line":220,"column":20},"end":{"line":220,"column":46}},"153":{"start":{"line":224,"column":18},"end":{"line":224,"column":30}},"154":{"start":{"line":225,"column":8},"end":{"line":225,"column":52}},"155":{"start":{"line":226,"column":20},"end":{"line":226,"column":75}},"156":{"start":{"line":227,"column":31},"end":{"line":227,"column":140}},"157":{"start":{"line":228,"column":8},"end":{"line":228,"column":53}},"158":{"start":{"line":229,"column":8},"end":{"line":229,"column":105}},"159":{"start":{"line":230,"column":8},"end":{"line":230,"column":64}},"160":{"start":{"line":231,"column":8},"end":{"line":231,"column":323}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":31,"column":81},"end":{"line":31,"column":82}},"loc":{"start":{"line":31,"column":87},"end":{"line":233,"column":2}},"line":31},"9":{"name":"(anonymous_9)","decl":{"start":{"line":31,"column":121},"end":{"line":31,"column":122}},"loc":{"start":{"line":31,"column":134},"end":{"line":233,"column":1}},"line":31},"10":{"name":"(anonymous_10)","decl":{"start":{"line":50,"column":11},"end":{"line":50,"column":12}},"loc":{"start":{"line":50,"column":17},"end":{"line":54,"column":6}},"line":50},"11":{"name":"(anonymous_11)","decl":{"start":{"line":50,"column":51},"end":{"line":50,"column":52}},"loc":{"start":{"line":50,"column":64},"end":{"line":54,"column":5}},"line":50},"12":{"name":"(anonymous_12)","decl":{"start":{"line":55,"column":80},"end":{"line":55,"column":81}},"loc":{"start":{"line":55,"column":86},"end":{"line":70,"column":6}},"line":55},"13":{"name":"(anonymous_13)","decl":{"start":{"line":55,"column":120},"end":{"line":55,"column":121}},"loc":{"start":{"line":55,"column":133},"end":{"line":70,"column":5}},"line":55},"14":{"name":"(anonymous_14)","decl":{"start":{"line":71,"column":86},"end":{"line":71,"column":87}},"loc":{"start":{"line":71,"column":92},"end":{"line":138,"column":6}},"line":71},"15":{"name":"(anonymous_15)","decl":{"start":{"line":71,"column":126},"end":{"line":71,"column":127}},"loc":{"start":{"line":71,"column":139},"end":{"line":138,"column":5}},"line":71},"16":{"name":"(anonymous_16)","decl":{"start":{"line":139,"column":42},"end":{"line":139,"column":43}},"loc":{"start":{"line":139,"column":48},"end":{"line":145,"column":6}},"line":139},"17":{"name":"(anonymous_17)","decl":{"start":{"line":139,"column":82},"end":{"line":139,"column":83}},"loc":{"start":{"line":139,"column":95},"end":{"line":145,"column":5}},"line":139},"18":{"name":"(anonymous_18)","decl":{"start":{"line":146,"column":41},"end":{"line":146,"column":42}},"loc":{"start":{"line":146,"column":47},"end":{"line":199,"column":6}},"line":146},"19":{"name":"(anonymous_19)","decl":{"start":{"line":146,"column":81},"end":{"line":146,"column":82}},"loc":{"start":{"line":146,"column":94},"end":{"line":199,"column":5}},"line":146},"20":{"name":"(anonymous_20)","decl":{"start":{"line":183,"column":19},"end":{"line":183,"column":20}},"loc":{"start":{"line":183,"column":25},"end":{"line":193,"column":9}},"line":183},"21":{"name":"(anonymous_21)","decl":{"start":{"line":184,"column":31},"end":{"line":184,"column":32}},"loc":{"start":{"line":184,"column":52},"end":{"line":192,"column":13}},"line":184},"22":{"name":"(anonymous_22)","decl":{"start":{"line":185,"column":43},"end":{"line":185,"column":44}},"loc":{"start":{"line":185,"column":49},"end":{"line":187,"column":17}},"line":185},"23":{"name":"(anonymous_23)","decl":{"start":{"line":188,"column":63},"end":{"line":188,"column":64}},"loc":{"start":{"line":188,"column":73},"end":{"line":191,"column":17}},"line":188},"24":{"name":"(anonymous_24)","decl":{"start":{"line":196,"column":33},"end":{"line":196,"column":34}},"loc":{"start":{"line":196,"column":43},"end":{"line":198,"column":10}},"line":196},"25":{"name":"(anonymous_25)","decl":{"start":{"line":196,"column":77},"end":{"line":196,"column":78}},"loc":{"start":{"line":196,"column":90},"end":{"line":198,"column":9}},"line":196},"26":{"name":"(anonymous_26)","decl":{"start":{"line":200,"column":52},"end":{"line":200,"column":53}},"loc":{"start":{"line":200,"column":58},"end":{"line":208,"column":6}},"line":200},"27":{"name":"(anonymous_27)","decl":{"start":{"line":200,"column":92},"end":{"line":200,"column":93}},"loc":{"start":{"line":200,"column":105},"end":{"line":208,"column":5}},"line":200},"28":{"name":"(anonymous_28)","decl":{"start":{"line":209,"column":68},"end":{"line":209,"column":69}},"loc":{"start":{"line":209,"column":74},"end":{"line":232,"column":6}},"line":209},"29":{"name":"(anonymous_29)","decl":{"start":{"line":209,"column":108},"end":{"line":209,"column":109}},"loc":{"start":{"line":209,"column":121},"end":{"line":232,"column":5}},"line":209},"30":{"name":"(anonymous_30)","decl":{"start":{"line":213,"column":19},"end":{"line":213,"column":20}},"loc":{"start":{"line":213,"column":25},"end":{"line":223,"column":9}},"line":213},"31":{"name":"(anonymous_31)","decl":{"start":{"line":214,"column":31},"end":{"line":214,"column":32}},"loc":{"start":{"line":214,"column":52},"end":{"line":222,"column":13}},"line":214},"32":{"name":"(anonymous_32)","decl":{"start":{"line":215,"column":43},"end":{"line":215,"column":44}},"loc":{"start":{"line":215,"column":49},"end":{"line":217,"column":17}},"line":215},"33":{"name":"(anonymous_33)","decl":{"start":{"line":218,"column":63},"end":{"line":218,"column":64}},"loc":{"start":{"line":218,"column":73},"end":{"line":221,"column":17}},"line":218}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":29,"column":71},"end":{"line":29,"column":180}},"type":"cond-expr","locations":[{"start":{"line":29,"column":160},"end":{"line":29,"column":171}},{"start":{"line":29,"column":174},"end":{"line":29,"column":180}}],"line":29},"9":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":156}},"type":"cond-expr","locations":[{"start":{"line":29,"column":128},"end":{"line":29,"column":134}},{"start":{"line":29,"column":137},"end":{"line":29,"column":156}}],"line":29},"10":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":125}},"type":"binary-expr","locations":[{"start":{"line":29,"column":72},"end":{"line":29,"column":108}},{"start":{"line":29,"column":112},"end":{"line":29,"column":125}}],"line":29},"11":{"loc":{"start":{"line":113,"column":26},"end":{"line":113,"column":166}},"type":"cond-expr","locations":[{"start":{"line":113,"column":158},"end":{"line":113,"column":160}},{"start":{"line":113,"column":163},"end":{"line":113,"column":166}}],"line":113},"12":{"loc":{"start":{"line":113,"column":26},"end":{"line":113,"column":155}},"type":"binary-expr","locations":[{"start":{"line":113,"column":26},"end":{"line":113,"column":138}},{"start":{"line":113,"column":142},"end":{"line":113,"column":155}}],"line":113},"13":{"loc":{"start":{"line":113,"column":32},"end":{"line":113,"column":128}},"type":"cond-expr","locations":[{"start":{"line":113,"column":89},"end":{"line":113,"column":95}},{"start":{"line":113,"column":98},"end":{"line":113,"column":128}}],"line":113},"14":{"loc":{"start":{"line":113,"column":32},"end":{"line":113,"column":86}},"type":"binary-expr","locations":[{"start":{"line":113,"column":32},"end":{"line":113,"column":56}},{"start":{"line":113,"column":60},"end":{"line":113,"column":86}}],"line":113},"15":{"loc":{"start":{"line":137,"column":27},"end":{"line":137,"column":126}},"type":"cond-expr","locations":[{"start":{"line":137,"column":86},"end":{"line":137,"column":92}},{"start":{"line":137,"column":95},"end":{"line":137,"column":126}}],"line":137},"16":{"loc":{"start":{"line":137,"column":27},"end":{"line":137,"column":83}},"type":"binary-expr","locations":[{"start":{"line":137,"column":27},"end":{"line":137,"column":52}},{"start":{"line":137,"column":56},"end":{"line":137,"column":83}}],"line":137},"17":{"loc":{"start":{"line":160,"column":25},"end":{"line":160,"column":165}},"type":"cond-expr","locations":[{"start":{"line":160,"column":157},"end":{"line":160,"column":159}},{"start":{"line":160,"column":162},"end":{"line":160,"column":165}}],"line":160},"18":{"loc":{"start":{"line":160,"column":25},"end":{"line":160,"column":154}},"type":"binary-expr","locations":[{"start":{"line":160,"column":25},"end":{"line":160,"column":137}},{"start":{"line":160,"column":141},"end":{"line":160,"column":154}}],"line":160},"19":{"loc":{"start":{"line":160,"column":31},"end":{"line":160,"column":127}},"type":"cond-expr","locations":[{"start":{"line":160,"column":88},"end":{"line":160,"column":94}},{"start":{"line":160,"column":97},"end":{"line":160,"column":127}}],"line":160},"20":{"loc":{"start":{"line":160,"column":31},"end":{"line":160,"column":85}},"type":"binary-expr","locations":[{"start":{"line":160,"column":31},"end":{"line":160,"column":55}},{"start":{"line":160,"column":59},"end":{"line":160,"column":85}}],"line":160},"21":{"loc":{"start":{"line":204,"column":27},"end":{"line":204,"column":110}},"type":"cond-expr","locations":[{"start":{"line":204,"column":78},"end":{"line":204,"column":84}},{"start":{"line":204,"column":87},"end":{"line":204,"column":110}}],"line":204},"22":{"loc":{"start":{"line":204,"column":27},"end":{"line":204,"column":75}},"type":"binary-expr","locations":[{"start":{"line":204,"column":27},"end":{"line":204,"column":48}},{"start":{"line":204,"column":52},"end":{"line":204,"column":75}}],"line":204},"23":{"loc":{"start":{"line":205,"column":27},"end":{"line":205,"column":112}},"type":"cond-expr","locations":[{"start":{"line":205,"column":78},"end":{"line":205,"column":84}},{"start":{"line":205,"column":87},"end":{"line":205,"column":112}}],"line":205},"24":{"loc":{"start":{"line":205,"column":27},"end":{"line":205,"column":75}},"type":"binary-expr","locations":[{"start":{"line":205,"column":27},"end":{"line":205,"column":48}},{"start":{"line":205,"column":52},"end":{"line":205,"column":75}}],"line":205},"25":{"loc":{"start":{"line":207,"column":27},"end":{"line":207,"column":114}},"type":"cond-expr","locations":[{"start":{"line":207,"column":78},"end":{"line":207,"column":84}},{"start":{"line":207,"column":87},"end":{"line":207,"column":114}}],"line":207},"26":{"loc":{"start":{"line":207,"column":27},"end":{"line":207,"column":75}},"type":"binary-expr","locations":[{"start":{"line":207,"column":27},"end":{"line":207,"column":48}},{"start":{"line":207,"column":52},"end":{"line":207,"column":75}}],"line":207},"27":{"loc":{"start":{"line":229,"column":27},"end":{"line":229,"column":88}},"type":"cond-expr","locations":[{"start":{"line":229,"column":64},"end":{"line":229,"column":70}},{"start":{"line":229,"column":73},"end":{"line":229,"column":88}}],"line":229},"28":{"loc":{"start":{"line":229,"column":27},"end":{"line":229,"column":61}},"type":"binary-expr","locations":[{"start":{"line":229,"column":27},"end":{"line":229,"column":41}},{"start":{"line":229,"column":45},"end":{"line":229,"column":61}}],"line":229},"29":{"loc":{"start":{"line":231,"column":27},"end":{"line":231,"column":126}},"type":"cond-expr","locations":[{"start":{"line":231,"column":86},"end":{"line":231,"column":92}},{"start":{"line":231,"column":95},"end":{"line":231,"column":126}}],"line":231},"30":{"loc":{"start":{"line":231,"column":27},"end":{"line":231,"column":83}},"type":"binary-expr","locations":[{"start":{"line":231,"column":27},"end":{"line":231,"column":52}},{"start":{"line":231,"column":56},"end":{"line":231,"column":83}}],"line":231},"31":{"loc":{"start":{"line":231,"column":159},"end":{"line":231,"column":255}},"type":"cond-expr","locations":[{"start":{"line":231,"column":216},"end":{"line":231,"column":222}},{"start":{"line":231,"column":225},"end":{"line":231,"column":255}}],"line":231},"32":{"loc":{"start":{"line":231,"column":159},"end":{"line":231,"column":213}},"type":"binary-expr","locations":[{"start":{"line":231,"column":159},"end":{"line":231,"column":183}},{"start":{"line":231,"column":187},"end":{"line":231,"column":213}}],"line":231}},"s":{"0":1,"1":29,"2":10,"3":9,"4":29,"5":29,"6":0,"7":0,"8":0,"9":0,"10":38,"11":9,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":0,"126":0,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":0,"152":0,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1},"f":{"0":9,"1":29,"2":10,"3":9,"4":29,"5":0,"6":38,"7":3,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":0},"b":{"0":[1,1,1],"1":[19,10],"2":[9,9],"3":[9,29],"4":[9,9],"5":[1,1,1],"6":[0,3],"7":[3,3],"8":[1,0],"9":[0,1],"10":[1,1],"11":[1,0],"12":[1,1],"13":[0,1],"14":[1,1],"15":[0,1],"16":[1,1],"17":[1,0],"18":[1,1],"19":[0,1],"20":[1,1],"21":[0,1],"22":[1,1],"23":[0,1],"24":[1,1],"25":[0,1],"26":[1,1],"27":[0,1],"28":[1,1],"29":[0,1],"30":[1,1],"31":[0,1],"32":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/AorderScriptTest.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/AorderScriptTest.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport Big from \"big.js\";\r\nimport { use, request } from \"chai\";\r\nimport { expect } from \"chai\";\r\nimport chaiHttp from \"chai-http\";\r\nimport { ethers } from \"ethers\";\r\nimport mongoose from \"mongoose\";\r\nimport { httpServer } from \"../../../app\";\r\nimport { connect, OrderCreated, OrderExecuted, UserPosition } from \"../../db\";\r\nimport { getExchangeAddress } from \"../../helper/chain\";\r\nimport { BtcAddress, ExchangeAddress, UsdcAddress } from \"../helper/contractDeployment\";\r\nimport { ifOrderCreated } from \"../../helper/interface\";\r\nimport { getERC20ABI, getExchangeABI, getProvider, parseEther } from \"../../utils\";\r\nimport { io } from \"socket.io-client\";\r\nimport path from \"path\";\r\nimport { EVENT_NAME } from \"../../socketIo/socket.io\";\r\nuse(chaiHttp);\r\nrequire(\"dotenv\").config({ path: path.resolve(process.cwd(), process.env.NODE_ENV?.includes('test') ? \".env.test\" : \".env\") });\r\nconst socket = io(\"http://localhost:3010\");\r\n\r\n\r\ndescribe(\"Limit Order => Mint token, create order, execute order, cancel order\", async () => {\r\n\r\n    // requirements\r\n    let chainId = \"421613\"\r\n    let provider = getProvider(chainId);\r\n\r\n    let exchange = new ethers.Contract(ExchangeAddress, getExchangeABI(), provider);\r\n    let btc = new ethers.Contract(\r\n        BtcAddress, getERC20ABI(), provider);\r\n    let usdc = new ethers.Contract(UsdcAddress, getERC20ABI(), provider);\r\n\r\n    let user1 = new ethers.Wallet(process.env.PRIVATE_KEY1! as string).connect(provider); //1\r\n    let user2 = new ethers.Wallet(process.env.PRIVATE_KEY2! as string).connect(provider); //2\r\n    let signatures: any[] = [];\r\n    let orders: any[] = [];\r\n    let exchangeRate = ethers.utils.parseEther('20000').toString();\r\n    let txnId = \"\";\r\n    let orderId = \"\";\r\n    let salt = Math.floor(Math.random() * 9000000);\r\n    let amount = ethers.utils.parseEther('1').toString();\r\n    let orderType = 1; // 1 for sell 0 for buy\r\n    let btcAmount = \"\"\r\n    let userInOrderPre = '0';\r\n    before(async () => { //Before each test we empty the database   \r\n        // await mongoose.createConnection(process.env.MONGO_URL! as string).dropDatabase();\r\n        // httpServer\r\n        await connect()\r\n    });\r\n\r\n    it('mint 10 btc to user1, 200000 usdt to user2, approve exchange contract', async () => {\r\n\r\n        let user1BtcBalancePre = (await btc.balanceOf(user1.address)).toString();\r\n        let user2UsdcBalancePre = (await usdc.balanceOf(user2.address)).toString();\r\n\r\n        const btcAmount = ethers.utils.parseEther('10').toString();\r\n        let tx1 = await btc.connect(user1).mint(user1.address, btcAmount);\r\n\r\n        // approve for exchange\r\n        let approve = await btc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256);\r\n\r\n        const usdcAmount = ethers.utils.parseEther('200000').toString();\r\n        let tx2 = await usdc.connect(user2).mint(user2.address, usdcAmount);\r\n\r\n        // approve for exchange\r\n        let approve1 = await usdc.connect(user2).approve(exchange.address, ethers.constants.MaxUint256);\r\n\r\n        let user1BtcBalancePost = (await btc.balanceOf(user1.address)).toString();\r\n        let user2UsdcBalancePost = (await usdc.balanceOf(user2.address)).toString();\r\n\r\n        expect(user1BtcBalancePost).to.equal(parseEther(Big(btcAmount).plus(user1BtcBalancePre).toString()));\r\n        expect(user2UsdcBalancePost).to.equal(parseEther(Big(usdcAmount).plus(user2UsdcBalancePre).toString()));\r\n\r\n\r\n    });\r\n\r\n\r\n    it(`user1 creates limit order to sell 1 btc @ 20000, check user inOrder Balance`, async () => {\r\n\r\n        const domain = {\r\n            name: \"zexe\",\r\n            version: \"1\",\r\n            chainId: chainId.toString(),\r\n            verifyingContract: getExchangeAddress(chainId),\r\n        };\r\n\r\n        // The named list of all type definitions\r\n        const types = {\r\n            Order: [\r\n                { name: 'maker', type: 'address' },\r\n                { name: 'token0', type: 'address' },\r\n                { name: 'token1', type: 'address' },\r\n                { name: 'amount', type: 'uint256' },\r\n                { name: 'orderType', type: 'uint8' },\r\n                { name: 'salt', type: 'uint32' },\r\n                { name: 'exchangeRate', type: 'uint176' },\r\n                { name: 'borrowLimit', type: 'uint32' },\r\n                { name: 'loops', type: 'uint8' }\r\n            ]\r\n        };\r\n\r\n        // The data to sign\r\n        const value = {\r\n            maker: user1.address.toLowerCase(),\r\n            token0: btc.address.toLowerCase(),\r\n            token1: usdc.address.toLowerCase(),\r\n            amount: amount,\r\n            orderType: orderType,\r\n            salt: salt,\r\n            exchangeRate: exchangeRate,\r\n            borrowLimit: 0,\r\n            loops: 0\r\n        };\r\n\r\n        orders.push(value);\r\n        // sign typed data\r\n        const storedSignature = await user1._signTypedData(\r\n            domain,\r\n            types,\r\n            value\r\n        );\r\n        signatures.push(storedSignature);\r\n        // console.log([\r\n        //     value, storedSignature\r\n        // ]);\r\n\r\n        let userPositionPre = await UserPosition.findOne({ token: btc.address.toLowerCase(), id: user1.address.toLowerCase() }).lean();\r\n\r\n        let userInOrder = userPositionPre?.inOrderBalance ?? '0';\r\n\r\n        let res = await request(\"http://localhost:3010\")\r\n            .post(\"/order/create\")\r\n            .send(\r\n                {\r\n                    \"data\": {\r\n                        \"maker\": user1.address.toLowerCase(),\r\n                        \"token0\": btc.address.toLowerCase(),\r\n                        \"token1\": usdc.address.toLowerCase(),\r\n                        \"amount\": amount,\r\n                        \"orderType\": orderType,\r\n                        \"salt\": salt,\r\n                        \"exchangeRate\": exchangeRate,\r\n                        borrowLimit: 0,\r\n                        loops: 0\r\n                    },\r\n                    \"signature\": storedSignature.toLowerCase(),\r\n                    \"chainId\": chainId\r\n                }\r\n            );\r\n\r\n        let userPositionPost = await UserPosition.findOne({ token: btc.address.toLowerCase(), id: user1.address.toLowerCase() }).lean()\r\n\r\n        expect(res).to.have.status(201);\r\n        expect(res.body.status).to.be.equal(true);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.message).to.have.string('Order created successfully');\r\n        expect(userPositionPost).not.to.be.null;\r\n        expect(userPositionPost?.inOrderBalance).to.equal(Big(userInOrder).plus(amount).toString())\r\n\r\n    });\r\n\r\n    it(`find created order in data base`, async () => {\r\n\r\n        let data = await OrderCreated.findOne({ signature: signatures[0] }).lean()! as ifOrderCreated;\r\n        expect(data).to.be.an('object');\r\n        expect(data.amount).to.equal(amount);\r\n        expect(data.maker).to.equal(user1.address.toLowerCase());\r\n        orderId = data.id\r\n    })\r\n\r\n\r\n    it(`user2 buy user1s 0.8 btc order`, async () => {\r\n        // balances\r\n        let user1BtcBalancePre = btc.balanceOf(user1.address);\r\n        let user2BtcBalancePre = btc.balanceOf(user2.address);\r\n        let user2UsdcBalancePre = usdc.balanceOf(user2.address);\r\n        let user1UsdcBalancePre = usdc.balanceOf(user1.address);\r\n        let promise = await Promise.all([user1BtcBalancePre, user2BtcBalancePre, user2UsdcBalancePre, user1UsdcBalancePre])\r\n        user1BtcBalancePre = promise[0].toString();\r\n        user2BtcBalancePre = promise[1].toString()\r\n        user2UsdcBalancePre = promise[2].toString()\r\n        user1UsdcBalancePre = promise[3].toString()\r\n\r\n        // inOrder Balance\r\n        let userPositionPre = await UserPosition.findOne({ token: btc.address.toLowerCase(), id: user1.address.toLowerCase() }).lean();\r\n\r\n        userInOrderPre = userPositionPre?.inOrderBalance ?? '0';\r\n\r\n        btcAmount = ethers.utils.parseEther(`0.8`).toString();\r\n\r\n        const exTxn = await exchange.connect(user2).executeLimitOrders(\r\n            [signatures[0]],\r\n            [orders[0]],\r\n            btcAmount,\r\n            { gasLimit: \"100000000\" }\r\n        );\r\n\r\n        await exTxn.wait(1)\r\n        let user1BtcBalancePost = btc.balanceOf(user1.address);\r\n        let user1UsdcBalancePost = usdc.balanceOf(user1.address);\r\n        let user2UsdcBalancePost = usdc.balanceOf(user2.address);\r\n        let user2BtcBalancePost = btc.balanceOf(user2.address);\r\n\r\n        let promise1 = await Promise.all([user1BtcBalancePost, user1UsdcBalancePost, user2UsdcBalancePost, user2BtcBalancePost]);\r\n        user1BtcBalancePost = promise1[0].toString();\r\n        user1UsdcBalancePost = promise1[1].toString();\r\n        user2UsdcBalancePost = promise1[2].toString();\r\n        user2BtcBalancePost = promise1[3].toString();\r\n\r\n        expect(user1BtcBalancePost).to.equal(parseEther(Big(user1BtcBalancePre).minus(btcAmount).toString()));\r\n        expect(user1UsdcBalancePost).to.equal(parseEther(\r\n            Big(user1UsdcBalancePre)\r\n                .plus(Big(btcAmount)\r\n                    .times(exchangeRate)\r\n                    .div(Big(10).pow(18))).toString()\r\n        ));\r\n        expect(user2BtcBalancePost).to.equal(parseEther(Big(user2BtcBalancePre).plus(btcAmount).toString()))\r\n        expect(user2UsdcBalancePost).to.equal(parseEther(\r\n            Big(user2UsdcBalancePre)\r\n                .minus(Big(btcAmount)\r\n                    .times(exchangeRate)\r\n                    .div(Big(10).pow(18))).toString()\r\n        ));\r\n\r\n\r\n        let wait = () => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                let timeOutId = setTimeout(() => {\r\n                    return resolve(\"Success\")\r\n                }, 60000)\r\n\r\n                socket.on(EVENT_NAME.PAIR_HISTORY, (data) => {\r\n                    clearTimeout(timeOutId)\r\n                    return resolve(\"Success\")\r\n                })\r\n            })\r\n        }\r\n\r\n        let res = await wait()\r\n        expect(res).to.equal(\"Success\")\r\n\r\n        await exTxn.wait(1).then(async (resp: any) => {\r\n\r\n            txnId = resp.transactionHash\r\n\r\n        })\r\n    });\r\n\r\n\r\n    it(`find executed Order, check inOrderBalance`, async () => {\r\n\r\n        let executeOrder = await OrderExecuted.findOne({ txnId: txnId, id: orderId }).lean();\r\n        let userPosition = await UserPosition.findOne({ id: user1.address.toLowerCase(), token: btc.address.toLowerCase() }).lean()\r\n        expect(executeOrder).not.to.be.null;\r\n        expect(executeOrder?.fillAmount).to.equal(btcAmount);\r\n        expect(executeOrder?.exchangeRate).to.equal(exchangeRate);\r\n        expect(userPosition).not.to.be.null;\r\n        expect(userPosition?.inOrderBalance).to.equal(Big(userInOrderPre).minus(btcAmount).toString())\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n    it(`user1 cancell order 0.2 btc, check order, inOrderbalance `, async () => {\r\n\r\n        let userPositionPre = await UserPosition.findOne({ id: user1.address.toLowerCase(), token: btc.address.toLowerCase() }).lean()\r\n\r\n        let exTxn = await exchange.connect(user1).cancelOrder(\r\n            signatures[0],\r\n            orders[0],\r\n            { gasLimit: \"100000000\" }\r\n        )\r\n\r\n        await exTxn.wait(1);\r\n\r\n        let wait = () => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                let timeOutId = setTimeout(() => {\r\n                    return resolve(\"Success\")\r\n                }, 60000)\r\n\r\n                socket.on(EVENT_NAME.CANCEL_ORDER, (data) => {\r\n                    clearTimeout(timeOutId)\r\n                    return resolve(\"Success\")\r\n                })\r\n            })\r\n        }\r\n        let res = await wait()\r\n        expect(res).to.equal(\"Success\")\r\n        let order = await OrderCreated.findOne({ id: orderId }).lean();\r\n        let userPositionPost = await UserPosition.findOne({ id: user1.address.toLowerCase(), token: btc.address.toLowerCase() }).lean()\r\n        expect(order).to.be.an('object');\r\n        expect(order?.cancelled).to.equal(true);\r\n        expect(userPositionPost).to.be.an('object');\r\n        expect(userPositionPost?.inOrderBalance).to.equal(Big(userPositionPre?.inOrderBalance! as string).minus(Big(amount).minus(btcAmount)).toString());\r\n\r\n\r\n    })\r\n\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ab3d447d14f8715393325b49a82d345cdd3ffdf0","contentHash":"bb9b3c0569547c57ac361226968ac37d2732aa109a9c3b83c2777ba5c6dc0b96"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\db.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\db.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":204}},"16":{"start":{"line":17,"column":19},"end":{"line":17,"column":55}},"17":{"start":{"line":18,"column":15},"end":{"line":18,"column":47}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":185}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":87}},"20":{"start":{"line":21,"column":15},"end":{"line":21,"column":57}},"21":{"start":{"line":22,"column":22},"end":{"line":22,"column":71}},"22":{"start":{"line":23,"column":23},"end":{"line":23,"column":73}},"23":{"start":{"line":24,"column":24},"end":{"line":24,"column":75}},"24":{"start":{"line":25,"column":16},"end":{"line":25,"column":59}},"25":{"start":{"line":26,"column":23},"end":{"line":26,"column":73}},"26":{"start":{"line":28,"column":27},"end":{"line":28,"column":97}},"27":{"start":{"line":29,"column":0},"end":{"line":29,"column":48}},"28":{"start":{"line":31,"column":13},"end":{"line":31,"column":61}},"29":{"start":{"line":32,"column":0},"end":{"line":32,"column":20}},"30":{"start":{"line":33,"column":20},"end":{"line":33,"column":82}},"31":{"start":{"line":34,"column":0},"end":{"line":34,"column":34}},"32":{"start":{"line":35,"column":21},"end":{"line":35,"column":85}},"33":{"start":{"line":36,"column":0},"end":{"line":36,"column":36}},"34":{"start":{"line":37,"column":22},"end":{"line":37,"column":88}},"35":{"start":{"line":38,"column":0},"end":{"line":38,"column":38}},"36":{"start":{"line":39,"column":14},"end":{"line":39,"column":64}},"37":{"start":{"line":40,"column":0},"end":{"line":40,"column":22}},"38":{"start":{"line":41,"column":21},"end":{"line":41,"column":85}},"39":{"start":{"line":42,"column":0},"end":{"line":42,"column":36}},"40":{"start":{"line":45,"column":4},"end":{"line":54,"column":7}},"41":{"start":{"line":46,"column":8},"end":{"line":52,"column":11}},"42":{"start":{"line":48,"column":12},"end":{"line":48,"column":48}},"43":{"start":{"line":51,"column":12},"end":{"line":51,"column":29}},"44":{"start":{"line":53,"column":8},"end":{"line":53,"column":33}},"45":{"start":{"line":56,"column":0},"end":{"line":56,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"connect","decl":{"start":{"line":44,"column":9},"end":{"line":44,"column":16}},"loc":{"start":{"line":44,"column":19},"end":{"line":55,"column":1}},"line":44},"9":{"name":"(anonymous_9)","decl":{"start":{"line":45,"column":43},"end":{"line":45,"column":44}},"loc":{"start":{"line":45,"column":56},"end":{"line":54,"column":5}},"line":45},"10":{"name":"(anonymous_10)","decl":{"start":{"line":47,"column":18},"end":{"line":47,"column":19}},"loc":{"start":{"line":47,"column":24},"end":{"line":49,"column":9}},"line":47},"11":{"name":"(anonymous_11)","decl":{"start":{"line":50,"column":19},"end":{"line":50,"column":20}},"loc":{"start":{"line":50,"column":26},"end":{"line":52,"column":9}},"line":50}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":19,"column":71},"end":{"line":19,"column":180}},"type":"cond-expr","locations":[{"start":{"line":19,"column":160},"end":{"line":19,"column":171}},{"start":{"line":19,"column":174},"end":{"line":19,"column":180}}],"line":19},"9":{"loc":{"start":{"line":19,"column":72},"end":{"line":19,"column":156}},"type":"cond-expr","locations":[{"start":{"line":19,"column":128},"end":{"line":19,"column":134}},{"start":{"line":19,"column":137},"end":{"line":19,"column":156}}],"line":19},"10":{"loc":{"start":{"line":19,"column":72},"end":{"line":19,"column":125}},"type":"binary-expr","locations":[{"start":{"line":19,"column":72},"end":{"line":19,"column":108}},{"start":{"line":19,"column":112},"end":{"line":19,"column":125}}],"line":19}},"s":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":8,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":0,"44":1,"45":1},"f":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":1,"7":8,"8":1,"9":1,"10":1,"11":0},"b":{"0":[1,1,1],"1":[0,0],"2":[1,1],"3":[1,0],"4":[1,1],"5":[1,1,1],"6":[6,2],"7":[8,8],"8":[1,0],"9":[0,1],"10":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/db.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/db.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,wDAAgC;AAEhC,gDAAwB;AAExB,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAA,MAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,0CAAE,QAAQ,CAAC,MAAM,CAAC,EAAA,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC;AAK/G,QAAA,gBAAgB,GAAG,kBAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,UAAqB,CAAC,CAAC;AAE7F,0DAAwC;AACxC,wEAAsD;AACtD,0EAAwD;AACxD,4EAA0D;AAC1D,4DAA0C;AAC1C,0EAAwD;AACxD,0EAA0E;AAG1E,MAAM,kBAAkB,GAAQ,wBAAgB,CAAC,KAAK,CAAC,cAAc,EAAE,sBAAkB,CAAC,CAAC;AA+BJ,gDAAkB;AA9BzG,2GAA2G;AAC3G,MAAM,IAAI,GAAG,kBAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,cAAU,CAAC,CAAC;AA6BvC,oBAAI;AA5Bb,MAAM,WAAW,GAAG,kBAAQ,CAAC,KAAK,CAAC,aAAa,EAAE,qBAAiB,CAAC,CAAC;AA4B7C,kCAAW;AA3BnC,MAAM,YAAY,GAAG,kBAAQ,CAAC,KAAK,CAAC,cAAc,EAAE,sBAAkB,CAAC,CAAC;AA2BnC,oCAAY;AA1BjD,MAAM,aAAa,GAAG,kBAAQ,CAAC,KAAK,CAAC,eAAe,EAAE,uBAAmB,CAAC,CAAC;AA0BxB,sCAAa;AAzBhE,MAAM,KAAK,GAAG,kBAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,eAAW,CAAC,CAAC;AAyBe,sBAAK;AAxBvE,MAAM,YAAY,GAAG,kBAAQ,CAAC,KAAK,CAAC,cAAc,EAAE,sBAAkB,CAAC,CAAC;AAwBC,oCAAY;AAvBrF,4FAA4F;AAK5F,SAAe,OAAO;;QAElB,kBAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,SAAoB,CAAC;aAC7C,IAAI,CAAC,GAAG,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAA;QACvC,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QACpB,CAAC,CACA,CAAC;QACN,wBAAgB,CAAA;IACpB,CAAC;CAAA;AAOc,0BAAO","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nimport path from 'path';\r\n\r\nrequire(\"dotenv\").config({path: path.resolve(process.cwd(), process.env.NODE_ENV?.includes('test')? \".env.test\" : \".env\")});\r\n\r\n\r\n\r\n\r\nexport const backupConnection = mongoose.createConnection(process.env.MONGO_URL1! as string);\r\n\r\nimport SyncSchema from \"./schemas/Sync\";\r\nimport PairCreatedSchema from \"./schemas/PairCreated\";\r\nimport OrderCreatedSchema from \"./schemas/OrderCreated\";\r\nimport OrderExecutedSchema from \"./schemas/OrderExecuted\";\r\nimport TokenSchema from \"./schemas/Token\";\r\nimport UserPositionSchema from \"./schemas/UserPosition\";\r\n// import { MarginOrderCreatedSchema } from \"./schemas/MarginOrderCreated\"\r\n\r\n\r\nconst OrderCreatedBackup: any = backupConnection.model(\"OrderCreated\", OrderCreatedSchema);\r\n// const MarginOrderCreatedBackup = backupConnection.model(\"MarginOrderCreated\", MarginOrderCreatedSchema);\r\nconst Sync = mongoose.model(\"Sync\", SyncSchema);\r\nconst PairCreated = mongoose.model(\"PairCreated\", PairCreatedSchema);\r\nconst OrderCreated = mongoose.model(\"OrderCreated\", OrderCreatedSchema);\r\nconst OrderExecuted = mongoose.model(\"OrderExecuted\", OrderExecutedSchema);\r\nconst Token = mongoose.model(\"Token\", TokenSchema);\r\nconst UserPosition = mongoose.model(\"UserPosition\", UserPositionSchema);\r\n// const MarginOrderCreated = mongoose.model(\"MarginOrderCreated\", MarginOrderCreatedSchema)\r\n\r\n\r\n\r\n\r\nasync function connect() {\r\n\r\n    mongoose.connect(process.env.MONGO_URL! as string)\r\n        .then(() => {\r\n            console.log(\"MongoDb is connected\")\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        }\r\n        );\r\n    backupConnection\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport { Sync, connect, PairCreated, OrderCreated, OrderExecuted, Token, UserPosition, OrderCreatedBackup };\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b6f442a61bbafc91605b95e5e27ba8a83542af2e","contentHash":"e90390be42dfb9cc27cabec5925bbce5f5ad068006622005538ea4d2c504b5f5"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\Sync.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\Sync.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":27},"end":{"line":11,"column":24}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/Sync.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/Sync.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,kBAAkB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAE3C,mBAAmB,EAAE,MAAM;IAC3B,kBAAkB,EAAE,MAAM;IAC1B,OAAO,EAAE,MAAM;CAElB,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAEF,kBAAe,kBAAkB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst exchangeSyncSchema = new mongoose.Schema({\r\n\r\n    blockNumberExchange: Number,\r\n    pageNumberExchange: Number,\r\n    chainId: String\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\nexport default exchangeSyncSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"689f7f2d45dd5e9cf2792c5b6cf45fc972fecb09","contentHash":"8728e1df2a2d5e5ed38c156bf8f1f5438644fd1a74dab101ff328f9aa964f4a9"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\PairCreated.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\PairCreated.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":26},"end":{"line":18,"column":24}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/PairCreated.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/PairCreated.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,iBAAiB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAC1C,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAChD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,oBAAoB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACtD,cAAc,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAChD,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC9C,SAAS,EAAE,MAAM;IACjB,OAAO,EAAE,MAAM;IACf,MAAM,EAAE,MAAM;IACd,aAAa,EAAE,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAC;CAEjD,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,iBAAiB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst PairCreatedSchema = new mongoose.Schema({\r\n    id: { type: String, required: true, trim: true },\r\n    token0: { type: String, required: true, trim: true },\r\n    token1: { type: String, required: true, trim: true },\r\n    exchangeRateDecimals: { type: String, required: true },\r\n    minToken0Order: { type: String, required: true },\r\n    exchangeRate: { type: String, required: true },\r\n    priceDiff: String,\r\n    chainId: String,\r\n    symbol: String,\r\n    marginEnabled: {type: Boolean, default: false}\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default PairCreatedSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a5da90ad8d42093e95c0eba5fd4ecf7a813ccfd1","contentHash":"bfb26e06b4973a57bef250dc70ee5e2d4128989b883e1b91352235f4ce5d771f"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\OrderCreated.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\OrderCreated.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":27},"end":{"line":27,"column":24}},"5":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/OrderCreated.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/OrderCreated.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,kBAAkB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAC3C,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAChD,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACvD,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClD,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACnD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC1D,oBAAoB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClE,aAAa,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC3D,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;IACzC,OAAO,EAAE,MAAM;IACf,GAAG,EAAE,MAAM;IACX,SAAS,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;IAC5C,SAAS,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAC;IACvC,WAAW,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;IACxC,KAAK,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;CAErC,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,kBAAkB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst OrderCreatedSchema = new mongoose.Schema({\r\n    id: { type: String, required: true, trim: true },\r\n    signature: { type: String, required: true, trim: true },\r\n    pair: { type: String, required: true, trim: true },\r\n    maker: { type: String, required: true, trim: true },\r\n    token0: { type: String, required: true, trim: true },\r\n    token1: { type: String, required: true, trim: true },\r\n    salt: { type: String, required: true, trim: true },\r\n    amount: { type: String, required: true, trim: true },\r\n    exchangeRate: { type: String, required: true, trim: true },\r\n    exchangeRateDecimals: { type: String, required: true, trim: true },\r\n    balanceAmount: { type: String, required: true, trim: true },\r\n    deleted: { type: Boolean, required: true },\r\n    active: { type: Boolean, required: true },\r\n    chainId: String,\r\n    cid: String,\r\n    cancelled: { type: Boolean, default: false },\r\n    orderType: {type:Number, require: true},\r\n    borrowLimit: {type:String, default: '0'},\r\n    loops: {type:String, default: '0'},\r\n    \r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default OrderCreatedSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2493fb658565dbdddebf2a7fefd5283f8662804d","contentHash":"22d1e4c6cd8f02f23e173ff455d9257688864a2e18ef2afcfc4cad298d950f3e"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\OrderExecuted.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\OrderExecuted.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":28},"end":{"line":20,"column":24}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/OrderExecuted.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/OrderExecuted.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,mBAAmB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAC5C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvC,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC7C,cAAc,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAChD,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAChD,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACnD,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACxD,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClD,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC1D,oBAAoB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClE,SAAS,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAC;IACvC,OAAO,EAAE,MAAM;IACf,QAAQ,EAAE,MAAM;CAEnB,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,mBAAmB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst OrderExecutedSchema = new mongoose.Schema({\r\n    txnId: { type: String, required: true },\r\n    blockNumber: { type: Number, required: true },\r\n    blockTimestamp: { type: Number, required: true },\r\n    id: { type: String, required: true, trim: true },\r\n    taker: { type: String, required: true, trim: true },\r\n    fillAmount: { type: String, required: true, trim: true },\r\n    pair: { type: String, required: true, trim: true },\r\n    exchangeRate: { type: String, required: true, trim: true },\r\n    exchangeRateDecimals: { type: Number, required: true, trim: true },\r\n    orderType: {type:Number, require: true},\r\n    chainId: String,\r\n    logIndex: Number\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default OrderExecutedSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5e7ed6ec22551d3006e42a412b869b5f8277e00c","contentHash":"c0630133bf6c9e1cfebc7fa2a318172d2cdc021b538523411ba125cea228841a"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\Token.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\Token.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":20},"end":{"line":15,"column":24}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/Token.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/Token.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,WAAW,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAEpC,EAAE,EAAE,MAAM;IACV,IAAI,EAAE,MAAM;IACZ,MAAM,EAAE,MAAM;IACd,KAAK,EAAE,MAAM;IACb,QAAQ,EAAE,MAAM;IAChB,OAAO,EAAE,MAAM;IACf,aAAa,EAAE,EAAC,IAAI,EAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAC;CAEhD,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,WAAW,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst TokenSchema = new mongoose.Schema({\r\n\r\n    id: String,\r\n    name: String,\r\n    symbol: String,\r\n    price: Number,\r\n    decimals: Number,\r\n    chainId: String,\r\n    marginEnabled: {type:Boolean, default: false}\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default TokenSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d31ec044a2bda6af65f0f0de3d68ab0f870b5fc1","contentHash":"2b31e8508f4fb876a972ee76a3637e645ca777eeafde6c3c3dd202f46c1cd4f4"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\UserPosition.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\UserPosition.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":27},"end":{"line":12,"column":24}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/UserPosition.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/UserPosition.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,kBAAkB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAE3C,EAAE,EAAE,MAAM;IACV,KAAK,EAAE,MAAM;IACb,cAAc,EAAE,MAAM;IACtB,OAAO,EAAE,MAAM;CAElB,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,kBAAkB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst UserPositionSchema = new mongoose.Schema({\r\n\r\n    id: String,\r\n    token: String,\r\n    inOrderBalance: String,\r\n    chainId: String\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default UserPositionSchema;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8d9c8b120ae711cf8d7df42147f22646beae19e5","contentHash":"c4d702a7120dc39653ba9500060428a9a3660a446df1462b3afce637fdbcff7f"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\helper\\chain.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\helper\\chain.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":84}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":40}},"3":{"start":{"line":6,"column":14},"end":{"line":12,"column":5}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":24}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"6":{"start":{"line":17,"column":14},"end":{"line":19,"column":5}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":24}},"8":{"start":{"line":22,"column":0},"end":{"line":22,"column":48}},"9":{"start":{"line":23,"column":0},"end":{"line":26,"column":2}}},"fnMap":{"0":{"name":"getRpcLink","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":19}},"loc":{"start":{"line":5,"column":29},"end":{"line":14,"column":1}},"line":5},"1":{"name":"getExchangeAddress","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":27}},"loc":{"start":{"line":16,"column":37},"end":{"line":21,"column":1}},"line":16}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":2,"4":2,"5":1,"6":2,"7":2,"8":1,"9":1},"f":{"0":2,"1":2},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/helper/chain.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/helper/chain.ts"],"names":[],"mappings":";;;AAAA,yCAA6C;AAI7C,SAAgB,UAAU,CAAC,OAAe;IAEtC,IAAI,GAAG,GAAQ;QACX,YAAY,EAAE,2BAA2B;QACzC,qFAAqF;QACrF,kFAAkF;QAClF,QAAQ,EAAE,sEAAsE;QAChF,YAAY,EAAE,4BAA4B;KAC7C,CAAC;IAEF,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC;AACxB,CAAC;AAXD,gCAWC;AAED,SAAgB,kBAAkB,CAAC,OAAe;IAC9C,IAAI,GAAG,GAAQ;QACX,QAAQ,EAAE,0BAAe;KAC5B,CAAA;IAED,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;AAEvB,CAAC;AAPD,gDAOC;AAEY,QAAA,gBAAgB,GAAQ;IACjC,YAAY,EAAE,4CAA4C;IAC1D,QAAQ,EAAE,4CAA4C;CACzD,CAAC","sourcesContent":["import { ExchangeAddress } from \"./constant\";\r\n\r\n\r\n\r\nexport function getRpcLink(chainId: string): string {\r\n\r\n    let map: any = {\r\n        \"1666700000\": \"https://api.s0.b.hmny.io/\",\r\n        // \"421613\": \"https://arbitrum-goerli.infura.io/v3/bb621c9372d048979f8677ba78fe41d7\",\r\n        // \"421613\": \"https://nd-389-970-162.p2pify.com/17b0fbe8312c9ff963057d537b9c7864\",\r\n        \"421613\": \"https://arb-goerli.g.alchemy.com/v2/HyNaane88yHFsK8Yrn4gf2OOzHkd6GAJ\",\r\n        \"1313161555\": \"https://testnet.aurora.dev\"\r\n    };\r\n\r\n    return map[chainId];\r\n}\r\n\r\nexport function getExchangeAddress(chainId: string): string {\r\n    let map: any = {\r\n        \"421613\": ExchangeAddress\r\n    }\r\n\r\n    return map[chainId]\r\n\r\n}\r\n\r\nexport const MulticallAddress: any = {\r\n    \"1313161555\": \"0x266CCfe718EAac46ABF8589Dc8833f3A73a0Bd1c\",\r\n    \"421613\": \"0x7dc45EEe67CE15a32ea4ea28e5b2392Ad20F5D6d\"\r\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"80fcb122bd692b0aafee52515bdeb5dca103e42b","contentHash":"41c65a6b805d663efb393298b6c739fed56a1f806e4b67819fc0e059d4180614"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\helper\\constant.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\helper\\constant.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":62}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":206}},"4":{"start":{"line":8,"column":15},"end":{"line":8,"column":47}},"5":{"start":{"line":9,"column":17},"end":{"line":12,"column":1}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":185}},"8":{"start":{"line":15,"column":24},"end":{"line":15,"column":48}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":42}},"10":{"start":{"line":17,"column":19},"end":{"line":17,"column":63}},"11":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}},"12":{"start":{"line":20,"column":20},"end":{"line":20,"column":64}},"13":{"start":{"line":21,"column":0},"end":{"line":21,"column":34}},"14":{"start":{"line":22,"column":0},"end":{"line":22,"column":66}},"15":{"start":{"line":23,"column":0},"end":{"line":23,"column":67}},"16":{"start":{"line":24,"column":0},"end":{"line":24,"column":68}},"17":{"start":{"line":25,"column":0},"end":{"line":25,"column":68}},"18":{"start":{"line":26,"column":0},"end":{"line":26,"column":67}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":14,"column":71},"end":{"line":14,"column":180}},"type":"cond-expr","locations":[{"start":{"line":14,"column":160},"end":{"line":14,"column":171}},{"start":{"line":14,"column":174},"end":{"line":14,"column":180}}],"line":14},"4":{"loc":{"start":{"line":14,"column":72},"end":{"line":14,"column":156}},"type":"cond-expr","locations":[{"start":{"line":14,"column":128},"end":{"line":14,"column":134}},{"start":{"line":14,"column":137},"end":{"line":14,"column":156}}],"line":14},"5":{"loc":{"start":{"line":14,"column":72},"end":{"line":14,"column":125}},"type":"binary-expr","locations":[{"start":{"line":14,"column":72},"end":{"line":14,"column":108}},{"start":{"line":14,"column":112},"end":{"line":14,"column":125}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,0],"4":[0,1],"5":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/helper/constant.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/helper/constant.ts"],"names":[],"mappings":";;;;;;;AAAA,gDAAwB;AAOxB,MAAM,QAAQ,GAAG;IACb,KAAK,EAAE,EAAE;IACT,MAAM,EAAE,EAAE;CACb,CAAC;AAaQ,4BAAQ;AAZlB,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAA,MAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,0CAAE,QAAQ,CAAC,MAAM,CAAC,EAAA,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC;AAE5H,MAAM,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,YAAuB,CAAC;AAUxC,0CAAe;AATnC,MAAM,UAAU,GAAG,4CAA4C,CAAC,CAAA,UAAU;AASrC,gCAAU;AAR/C,+EAA+E;AAC/E,MAAM,WAAW,GAAG,4CAA4C,CAAC;AAOhB,kCAAW;AAN/C,QAAA,UAAU,GAAG,4CAA4C,CAAC;AAC1D,QAAA,WAAW,GAAG,4CAA4C,CAAC;AAC3D,QAAA,YAAY,GAAG,4CAA4C,CAAC;AAC5D,QAAA,YAAY,GAAG,4CAA4C,CAAC;AAC5D,QAAA,WAAW,GAAG,4CAA4C,CAAC","sourcesContent":["import path from \"path\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Decimals = {\r\n    token: 18,\r\n    amount: 18\r\n};\r\nrequire(\"dotenv\").config({path: path.resolve(process.cwd(), process.env.NODE_ENV?.includes('test')? \".env.test\" : \".env\")});\r\n\r\nconst ExchangeAddress = process.env.EXCHANGE_ADD! as string; \r\nconst BtcAddress = \"0x22f1311b6caE87A896a0B6915DAc39709e90E8b9\";// orignal\r\n// const BtcAddress = \"0x728824E0534265f21917316733BE8936602154e7\"; // ethereum\r\nconst UsdcAddress = \"0x4ebEcD763ba4508565241043bB6E4592De3CCf14\";\r\nexport const EthAddress = \"0x728824E0534265f21917316733BE8936602154e7\";\r\nexport const ZexeAddress = \"0xD2061ca8645EEAbD2fa5931BeA458C09E660C93C\";\r\nexport const leverAddress = \"0xc683afe8F98b53e98C85A7BFd9ab8AAfcBF4f723\";\r\nexport const cUsdcAddress = \"0xdF5c119455D4d8A8dC3DCfeeaD1257d348DB4A12\";\r\nexport const cBtcAddress = \"0x6baE033D85c6CE8C8469F26E76a68E4cEfEaefaC\";\r\n\r\nexport  { Decimals, ExchangeAddress, BtcAddress, UsdcAddress };"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ac000b6f9cffa2a263d34e6c21c8c3f57615b504","contentHash":"0dc99e90d2825cd292b2621fb68327a7ea9e2f7923573852ece986259d47cf4a"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\helper\\contractDeployment.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\helper\\contractDeployment.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":187}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":71}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":66}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":67}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":66}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":67}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":68}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":68}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":67}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/helper/contractDeployment.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/helper/contractDeployment.ts"],"names":[],"mappings":";;;AAMa,QAAA,eAAe,GAAG,4CAA4C,CAAC;AAC/D,QAAA,UAAU,GAAG,4CAA4C,CAAC,CAAA,UAAU;AACjF,sFAAsF;AACzE,QAAA,WAAW,GAAG,4CAA4C,CAAC;AAC3D,QAAA,UAAU,GAAG,4CAA4C,CAAC;AAC1D,QAAA,WAAW,GAAG,4CAA4C,CAAC;AAC3D,QAAA,YAAY,GAAG,4CAA4C,CAAC;AAC5D,QAAA,YAAY,GAAG,4CAA4C,CAAC;AAC5D,QAAA,WAAW,GAAG,4CAA4C,CAAC;AAIxE,mEAAmE;AACnE,gEAAgE;AAChE,8DAA8D;AAC9D,sEAAsE;AACtE,8DAA8D;AAC9D,+DAA+D;AAC/D,+DAA+D;AAC/D,gEAAgE;AAChE,+DAA+D;AAC/D,gEAAgE","sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\nexport const ExchangeAddress = \"0xC8a28C6EA6825428a5270F7e9070Cbe31E2cFDbf\";\r\nexport const BtcAddress = \"0x370a499A5Da9db63c8D73aC31631884e8A6F2046\";// orignal\r\n// export const BtcAddress = \"0x728824E0534265f21917316733BE8936602154e7\"; // ethereum\r\nexport const UsdcAddress = \"0x85A84D9796642feD966F05F27deE4460a5F74fEd\";\r\nexport const EthAddress = \"0xa0f42D19bbeBa02A7bE143f80eBe414A1F0Af2F8\";\r\nexport const ZexeAddress = \"0xb961d7eC6944074EccaA4054b36B7855453658B3\";\r\nexport const leverAddress = \"0xAF81CfD5ef93821f48E50ddB6dc37f70218D0123\";\r\nexport const cUsdcAddress = \"0xB49C251Ca54c9941fa6971276f10b24ea48DbA39\";\r\nexport const cBtcAddress = \"0x99e55a91Dfd1E7f86327E47d04a392C5cc9A0728\";\r\n\r\n\r\n\r\n// Exchange deployed to: 0xC8a28C6EA6825428a5270F7e9070Cbe31E2cFDbf\r\n// Lever deployed to: 0xAF81CfD5ef93821f48E50ddB6dc37f70218D0123\r\n// ETH deployed to: 0xa0f42D19bbeBa02A7bE143f80eBe414A1F0Af2F8\r\n// lETH market deployed to: 0x8795fdC78D8d5cb3C4b31acFfd5654F6D1002d45\r\n// BTC deployed to: 0x370a499A5Da9db63c8D73aC31631884e8A6F2046\r\n// lBTC deployed to: 0x99e55a91Dfd1E7f86327E47d04a392C5cc9A0728\r\n// USDC deployed to: 0x85A84D9796642feD966F05F27deE4460a5F74fEd\r\n// lUSDC deployed to: 0xB49C251Ca54c9941fa6971276f10b24ea48DbA39\r\n// ZEXE deployed to: 0xb961d7eC6944074EccaA4054b36B7855453658B3\r\n// lZEXE deployed to: 0xc8Ab87b3FCBfa7C4B569A65097EF079E56117C1e\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"13923e87e111f3a2dae6752d7ba67d744a8d2c0d","contentHash":"8c822668bca21f0438290148509662928d6b82775758d8b22875475599701b9f"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\utils.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\utils.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":246}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":43}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":34}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":51}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":41}},"8":{"start":{"line":11,"column":28},"end":{"line":11,"column":116}},"9":{"start":{"line":12,"column":25},"end":{"line":12,"column":110}},"10":{"start":{"line":13,"column":21},"end":{"line":13,"column":109}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":111}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":38}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":40}},"15":{"start":{"line":21,"column":4},"end":{"line":21,"column":35}},"16":{"start":{"line":23,"column":0},"end":{"line":23,"column":34}},"17":{"start":{"line":25,"column":4},"end":{"line":25,"column":129}},"18":{"start":{"line":27,"column":0},"end":{"line":27,"column":32}},"19":{"start":{"line":29,"column":18},"end":{"line":29,"column":58}},"20":{"start":{"line":30,"column":4},"end":{"line":30,"column":17}},"21":{"start":{"line":32,"column":0},"end":{"line":32,"column":36}},"22":{"start":{"line":34,"column":21},"end":{"line":34,"column":100}},"23":{"start":{"line":35,"column":4},"end":{"line":35,"column":20}},"24":{"start":{"line":37,"column":0},"end":{"line":37,"column":34}},"25":{"start":{"line":48,"column":4},"end":{"line":80,"column":5}},"26":{"start":{"line":49,"column":23},"end":{"line":54,"column":9}},"27":{"start":{"line":56,"column":22},"end":{"line":68,"column":9}},"28":{"start":{"line":69,"column":23},"end":{"line":69,"column":103}},"29":{"start":{"line":70,"column":33},"end":{"line":70,"column":102}},"30":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"31":{"start":{"line":73,"column":12},"end":{"line":73,"column":26}},"32":{"start":{"line":75,"column":8},"end":{"line":75,"column":20}},"33":{"start":{"line":78,"column":8},"end":{"line":78,"column":64}},"34":{"start":{"line":79,"column":8},"end":{"line":79,"column":20}},"35":{"start":{"line":82,"column":0},"end":{"line":82,"column":46}},"36":{"start":{"line":85,"column":35},"end":{"line":85,"column":37}},"37":{"start":{"line":86,"column":12},"end":{"line":86,"column":108}},"38":{"start":{"line":87,"column":4},"end":{"line":92,"column":5}},"39":{"start":{"line":88,"column":8},"end":{"line":88,"column":144}},"40":{"start":{"line":91,"column":8},"end":{"line":91,"column":37}},"41":{"start":{"line":93,"column":19},"end":{"line":93,"column":53}},"42":{"start":{"line":95,"column":4},"end":{"line":100,"column":5}},"43":{"start":{"line":96,"column":8},"end":{"line":96,"column":33}},"44":{"start":{"line":98,"column":9},"end":{"line":100,"column":5}},"45":{"start":{"line":99,"column":8},"end":{"line":99,"column":33}},"46":{"start":{"line":101,"column":17},"end":{"line":101,"column":18}},"47":{"start":{"line":102,"column":4},"end":{"line":109,"column":5}},"48":{"start":{"line":102,"column":17},"end":{"line":102,"column":18}},"49":{"start":{"line":103,"column":8},"end":{"line":108,"column":9}},"50":{"start":{"line":104,"column":12},"end":{"line":104,"column":21}},"51":{"start":{"line":107,"column":12},"end":{"line":107,"column":18}},"52":{"start":{"line":110,"column":22},"end":{"line":110,"column":23}},"53":{"start":{"line":111,"column":4},"end":{"line":118,"column":5}},"54":{"start":{"line":111,"column":17},"end":{"line":111,"column":18}},"55":{"start":{"line":112,"column":8},"end":{"line":117,"column":9}},"56":{"start":{"line":113,"column":12},"end":{"line":113,"column":26}},"57":{"start":{"line":116,"column":12},"end":{"line":116,"column":18}},"58":{"start":{"line":119,"column":4},"end":{"line":136,"column":5}},"59":{"start":{"line":120,"column":8},"end":{"line":120,"column":65}},"60":{"start":{"line":122,"column":9},"end":{"line":136,"column":5}},"61":{"start":{"line":123,"column":8},"end":{"line":123,"column":36}},"62":{"start":{"line":126,"column":8},"end":{"line":126,"column":42}},"63":{"start":{"line":127,"column":8},"end":{"line":134,"column":9}},"64":{"start":{"line":127,"column":21},"end":{"line":127,"column":22}},"65":{"start":{"line":128,"column":12},"end":{"line":133,"column":13}},"66":{"start":{"line":129,"column":16},"end":{"line":129,"column":25}},"67":{"start":{"line":131,"column":17},"end":{"line":133,"column":13}},"68":{"start":{"line":132,"column":16},"end":{"line":132,"column":73}},"69":{"start":{"line":135,"column":8},"end":{"line":135,"column":36}},"70":{"start":{"line":138,"column":0},"end":{"line":138,"column":34}},"71":{"start":{"line":139,"column":0},"end":{"line":182,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"getExchangeABI","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":23}},"loc":{"start":{"line":16,"column":26},"end":{"line":18,"column":1}},"line":16},"2":{"name":"getERC20ABI","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":20}},"loc":{"start":{"line":20,"column":23},"end":{"line":22,"column":1}},"line":20},"3":{"name":"parseEther","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":19}},"loc":{"start":{"line":24,"column":27},"end":{"line":26,"column":1}},"line":24},"4":{"name":"getInterface","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":21}},"loc":{"start":{"line":28,"column":27},"end":{"line":31,"column":1}},"line":28},"5":{"name":"getProvider","decl":{"start":{"line":33,"column":9},"end":{"line":33,"column":20}},"loc":{"start":{"line":33,"column":30},"end":{"line":36,"column":1}},"line":33},"6":{"name":"validateSignature","decl":{"start":{"line":47,"column":9},"end":{"line":47,"column":26}},"loc":{"start":{"line":47,"column":61},"end":{"line":81,"column":1}},"line":47},"7":{"name":"getDecimals","decl":{"start":{"line":83,"column":9},"end":{"line":83,"column":20}},"loc":{"start":{"line":83,"column":35},"end":{"line":137,"column":1}},"line":83}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},{"start":{"line":72,"column":8},"end":{"line":74,"column":9}}],"line":72},"4":{"loc":{"start":{"line":87,"column":4},"end":{"line":92,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":92,"column":5}},{"start":{"line":87,"column":4},"end":{"line":92,"column":5}}],"line":87},"5":{"loc":{"start":{"line":95,"column":4},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":100,"column":5}},{"start":{"line":95,"column":4},"end":{"line":100,"column":5}}],"line":95},"6":{"loc":{"start":{"line":98,"column":9},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":98,"column":9},"end":{"line":100,"column":5}},{"start":{"line":98,"column":9},"end":{"line":100,"column":5}}],"line":98},"7":{"loc":{"start":{"line":98,"column":13},"end":{"line":98,"column":64}},"type":"binary-expr","locations":[{"start":{"line":98,"column":13},"end":{"line":98,"column":26}},{"start":{"line":98,"column":30},"end":{"line":98,"column":64}}],"line":98},"8":{"loc":{"start":{"line":102,"column":20},"end":{"line":102,"column":149}},"type":"cond-expr","locations":[{"start":{"line":102,"column":143},"end":{"line":102,"column":145}},{"start":{"line":102,"column":148},"end":{"line":102,"column":149}}],"line":102},"9":{"loc":{"start":{"line":102,"column":20},"end":{"line":102,"column":140}},"type":"binary-expr","locations":[{"start":{"line":102,"column":20},"end":{"line":102,"column":123}},{"start":{"line":102,"column":127},"end":{"line":102,"column":140}}],"line":102},"10":{"loc":{"start":{"line":102,"column":31},"end":{"line":102,"column":112}},"type":"cond-expr","locations":[{"start":{"line":102,"column":94},"end":{"line":102,"column":100}},{"start":{"line":102,"column":103},"end":{"line":102,"column":112}}],"line":102},"11":{"loc":{"start":{"line":102,"column":31},"end":{"line":102,"column":91}},"type":"binary-expr","locations":[{"start":{"line":102,"column":31},"end":{"line":102,"column":74}},{"start":{"line":102,"column":78},"end":{"line":102,"column":91}}],"line":102},"12":{"loc":{"start":{"line":103,"column":8},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":108,"column":9}},{"start":{"line":103,"column":8},"end":{"line":108,"column":9}}],"line":103},"13":{"loc":{"start":{"line":111,"column":20},"end":{"line":111,"column":149}},"type":"cond-expr","locations":[{"start":{"line":111,"column":143},"end":{"line":111,"column":145}},{"start":{"line":111,"column":148},"end":{"line":111,"column":149}}],"line":111},"14":{"loc":{"start":{"line":111,"column":20},"end":{"line":111,"column":140}},"type":"binary-expr","locations":[{"start":{"line":111,"column":20},"end":{"line":111,"column":123}},{"start":{"line":111,"column":127},"end":{"line":111,"column":140}}],"line":111},"15":{"loc":{"start":{"line":111,"column":31},"end":{"line":111,"column":112}},"type":"cond-expr","locations":[{"start":{"line":111,"column":94},"end":{"line":111,"column":100}},{"start":{"line":111,"column":103},"end":{"line":111,"column":112}}],"line":111},"16":{"loc":{"start":{"line":111,"column":31},"end":{"line":111,"column":91}},"type":"binary-expr","locations":[{"start":{"line":111,"column":31},"end":{"line":111,"column":74}},{"start":{"line":111,"column":78},"end":{"line":111,"column":91}}],"line":111},"17":{"loc":{"start":{"line":112,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":117,"column":9}},{"start":{"line":112,"column":8},"end":{"line":117,"column":9}}],"line":112},"18":{"loc":{"start":{"line":119,"column":4},"end":{"line":136,"column":5}},"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":136,"column":5}},{"start":{"line":119,"column":4},"end":{"line":136,"column":5}}],"line":119},"19":{"loc":{"start":{"line":119,"column":8},"end":{"line":119,"column":101}},"type":"binary-expr","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":28}},{"start":{"line":119,"column":33},"end":{"line":119,"column":62}},{"start":{"line":119,"column":66},"end":{"line":119,"column":100}}],"line":119},"20":{"loc":{"start":{"line":122,"column":9},"end":{"line":136,"column":5}},"type":"if","locations":[{"start":{"line":122,"column":9},"end":{"line":136,"column":5}},{"start":{"line":122,"column":9},"end":{"line":136,"column":5}}],"line":122},"21":{"loc":{"start":{"line":122,"column":13},"end":{"line":122,"column":99}},"type":"binary-expr","locations":[{"start":{"line":122,"column":13},"end":{"line":122,"column":33}},{"start":{"line":122,"column":37},"end":{"line":122,"column":66}},{"start":{"line":122,"column":70},"end":{"line":122,"column":99}}],"line":122},"22":{"loc":{"start":{"line":127,"column":24},"end":{"line":127,"column":153}},"type":"cond-expr","locations":[{"start":{"line":127,"column":147},"end":{"line":127,"column":149}},{"start":{"line":127,"column":152},"end":{"line":127,"column":153}}],"line":127},"23":{"loc":{"start":{"line":127,"column":24},"end":{"line":127,"column":144}},"type":"binary-expr","locations":[{"start":{"line":127,"column":24},"end":{"line":127,"column":127}},{"start":{"line":127,"column":131},"end":{"line":127,"column":144}}],"line":127},"24":{"loc":{"start":{"line":127,"column":35},"end":{"line":127,"column":116}},"type":"cond-expr","locations":[{"start":{"line":127,"column":98},"end":{"line":127,"column":104}},{"start":{"line":127,"column":107},"end":{"line":127,"column":116}}],"line":127},"25":{"loc":{"start":{"line":127,"column":35},"end":{"line":127,"column":95}},"type":"binary-expr","locations":[{"start":{"line":127,"column":35},"end":{"line":127,"column":78}},{"start":{"line":127,"column":82},"end":{"line":127,"column":95}}],"line":127},"26":{"loc":{"start":{"line":128,"column":12},"end":{"line":133,"column":13}},"type":"if","locations":[{"start":{"line":128,"column":12},"end":{"line":133,"column":13}},{"start":{"line":128,"column":12},"end":{"line":133,"column":13}}],"line":128},"27":{"loc":{"start":{"line":131,"column":17},"end":{"line":133,"column":13}},"type":"if","locations":[{"start":{"line":131,"column":17},"end":{"line":133,"column":13}},{"start":{"line":131,"column":17},"end":{"line":133,"column":13}}],"line":131}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":2,"14":1,"15":6,"16":1,"17":10,"18":1,"19":0,"20":0,"21":1,"22":2,"23":2,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":1},"f":{"0":2,"1":2,"2":6,"3":10,"4":0,"5":2,"6":0,"7":0},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/utils.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from \"fs\";\r\nimport { ethers } from \"ethers\";\r\nimport Big from \"big.js\";\r\nimport { getExchangeAddress, getRpcLink } from \"./helper/chain\";\r\n\r\nconst exchangeDeployments = JSON.parse((fs.readFileSync(process.cwd() + \"/abi/Exchange.json\")).toString());\r\n\r\nconst erc20Deployments = JSON.parse((fs.readFileSync(process.cwd() + \"/abi/ERC20.json\")).toString());\r\n\r\nconst MulticallAbi = JSON.parse((fs.readFileSync(process.cwd() + \"/abi/Multical.json\")).toString());\r\n\r\nexport const leverageAbi = JSON.parse((fs.readFileSync(process.cwd() + \"/abi/Leverage.json\")).toString());\r\n\r\nfunction getExchangeABI() {\r\n    return exchangeDeployments[\"abi\"];\r\n\r\n}\r\n\r\n\r\nfunction getERC20ABI() {\r\n    return erc20Deployments[\"abi\"];\r\n}\r\n\r\n\r\nfunction parseEther(value: number | string): string {\r\n\r\n    return ethers.utils.parseEther(`${Big(value).div(Big(10).pow(18))}`).toString();\r\n}\r\n\r\nfunction getInterface(abi: object[]): ethers.utils.Interface {\r\n    const iface = new ethers.utils.Interface(abi);\r\n    return iface;\r\n}\r\n\r\nfunction getProvider(chainId: string): ethers.providers.JsonRpcProvider {\r\n    const provider = new ethers.providers.JsonRpcProvider(getRpcLink(chainId));\r\n    return provider;\r\n}\r\n\r\n/**\r\n * @dev This function would validate order signatures\r\n * @notice verify signature\r\n * @param {*} maker (string) should be order creator's address \r\n * @param {*} signature (string)\r\n * @param {*} value (object)\r\n * @param {*} chainId (string) numeric chainId\r\n * @returns digest will be id of order, or false\r\n */\r\nfunction validateSignature(maker: string, signature: string, value: object, chainId: string): (string | null) {\r\n    try {\r\n\r\n        const domain = {\r\n            name: \"zexe\",\r\n            version: \"1\",\r\n            chainId: chainId,\r\n            verifyingContract: getExchangeAddress(chainId),\r\n        };\r\n\r\n        // The named list of all type definitions\r\n        const types = {\r\n            Order: [\r\n\t\t\t\t{ name: 'maker', type: 'address' },\r\n\t\t\t\t{ name: 'token0', type: 'address' },\r\n\t\t\t\t{ name: 'token1', type: 'address' },\r\n\t\t\t\t{ name: 'amount', type: 'uint256' },\r\n\t\t\t\t{ name: 'orderType', type: 'uint8' },\r\n                { name: 'salt', type: 'uint32' },\r\n\t\t\t\t{ name: 'exchangeRate', type: 'uint176' },\r\n\t\t\t\t{ name: 'borrowLimit', type: 'uint32' },\r\n\t\t\t\t{ name: 'loops', type: 'uint8' }\r\n\t\t\t]\r\n        };\r\n\r\n        const digest: string = ethers.utils._TypedDataEncoder.hash(domain, types, value).toLowerCase();\r\n\r\n        const signatureAddress: string = ethers.utils.recoverAddress(digest, signature).toLowerCase();\r\n        // console.log(maker, signatureAddress)\r\n        if (maker == signatureAddress) {\r\n            return digest;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n    catch (error: any) {\r\n        console.log(\"Error @ validateSignature\", error.message);\r\n        return null\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction getDecimals(exchangeRate: string) {\r\n    let findExchangeRateDecimals: string[] = [];\r\n    let a = Big(exchangeRate).div(Big(10).pow(18)).toString().split(\".\");\r\n\r\n    if (a.length > 1) {\r\n        findExchangeRateDecimals = Big(exchangeRate).div(Big(10).pow(18)).toFixed(20).toString().split(\".\");\r\n    }\r\n    else {\r\n        findExchangeRateDecimals = a;\r\n    }\r\n\r\n    let countInt = findExchangeRateDecimals[0].length;\r\n    let exchangeRateDecimals;\r\n    if (countInt >= 4) {\r\n        exchangeRateDecimals = 2;\r\n    }\r\n    else if (countInt >= 1 && findExchangeRateDecimals[0] != '0') {\r\n        exchangeRateDecimals = 3;\r\n    }\r\n\r\n    let count0 = 0;\r\n\r\n    for (let i = 0; i < findExchangeRateDecimals[1]?.length ?? 0; i++) {\r\n        if (findExchangeRateDecimals[1][i] == '0') {\r\n            count0++;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    let countDecInt = 0;\r\n\r\n    for (let i = 0; i < findExchangeRateDecimals[1]?.length ?? 0; i++) {\r\n        if (findExchangeRateDecimals[1][i] != '0') {\r\n            countDecInt++;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (exchangeRateDecimals && (count0 > exchangeRateDecimals || countDecInt > exchangeRateDecimals)) {\r\n\r\n        return `only ${exchangeRateDecimals} decimal acceptable`;\r\n\r\n    }\r\n    else if (exchangeRateDecimals && count0 < exchangeRateDecimals && count0 < exchangeRateDecimals) {\r\n        return exchangeRateDecimals;\r\n    }\r\n    else {\r\n        exchangeRateDecimals = count0 + 4;\r\n        for (let i = 0; i < findExchangeRateDecimals[1]?.length ?? 0; i++) {\r\n            if (i <= exchangeRateDecimals - 1) {\r\n                continue;\r\n            }\r\n            else if (findExchangeRateDecimals[1][i] != '0') {\r\n                return `only ${exchangeRateDecimals} decimal acceptable`;\r\n            }\r\n\r\n        }\r\n        return exchangeRateDecimals;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const expressMonitorConfig = {\r\n\r\n    title: 'Express Status',  // Default title\r\n    theme: 'default.css',     // Default styles\r\n    path: '/status',\r\n    socketPath: '/socket.io', // In case you use a custom path\r\n    // websocket: existingSocketIoInstance,\r\n    spans: [{\r\n        interval: 1,            // Every second\r\n        retention: 60           // Keep 60 datapoints in memory\r\n    }, {\r\n        interval: 5,            // Every 5 seconds\r\n        retention: 60\r\n    }, {\r\n        interval: 15,           // Every 15 seconds\r\n        retention: 60\r\n    }],\r\n    chartVisibility: {\r\n        cpu: true,\r\n        mem: true,\r\n        load: true,\r\n        eventLoop: true,\r\n        heap: true,\r\n        responseTime: true,\r\n        rps: true,\r\n        statusCodes: true\r\n    },\r\n    healthChecks: [\r\n        {\r\n            protocol: 'http',\r\n            host: 'localhost',\r\n            port: 3010,\r\n            path: '/DB/status',\r\n            headers: {},\r\n        },\r\n        {\r\n            protocol: 'http',\r\n            host: 'localhost',\r\n            port: 3010,\r\n            path: '/DB/fetch/record',\r\n            headers: {},\r\n        },\r\n \r\n    ],\r\n    // ignoreStartsWith: '/pair'\r\n}\r\n\r\n\r\n\r\n\r\nexport { getExchangeABI, getERC20ABI, validateSignature, parseEther, getInterface, getProvider, MulticallAbi, getDecimals };"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dc11802a9ddf22ff612b3845a30ebf67610ad473","contentHash":"596383f64fc2bd033596b4b188fb284630619ad9d764ea9464784d049f525c39"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\socketIo\\socket.io.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\socketIo\\socket.io.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":40}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":43}},"4":{"start":{"line":10,"column":8},"end":{"line":14,"column":11}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":38}},"6":{"start":{"line":16,"column":8},"end":{"line":19,"column":11}},"7":{"start":{"line":17,"column":12},"end":{"line":17,"column":59}},"8":{"start":{"line":18,"column":12},"end":{"line":18,"column":89}},"9":{"start":{"line":18,"column":42},"end":{"line":18,"column":87}},"10":{"start":{"line":22,"column":8},"end":{"line":22,"column":40}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":38}},"12":{"start":{"line":28,"column":0},"end":{"line":32,"column":2}},"13":{"start":{"line":33,"column":0},"end":{"line":33,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":18},"end":{"line":8,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":17},"end":{"line":20,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":30},"end":{"line":16,"column":31}},"loc":{"start":{"line":16,"column":42},"end":{"line":19,"column":9}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":36},"end":{"line":18,"column":37}},"loc":{"start":{"line":18,"column":42},"end":{"line":18,"column":87}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":28},"end":{"line":23,"column":5}},"line":21},"5":{"name":"(anonymous_5)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":26},"end":{"line":26,"column":5}},"line":24}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/socketIo/socket.io.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/socketIo/socket.io.ts"],"names":[],"mappings":";;;AACA,yCAAgC;AAEhC,MAAM,aAAa;IAAnB;QACY,OAAE,GAAW,IAAI,kBAAM,EAAE,CAAC;IAuBtC,CAAC;IArBU,IAAI,CAAC,MAAW;QACnB,IAAI,CAAC,EAAE,GAAG,IAAI,kBAAM,CAAC,MAAM,EAAE;YACzB,IAAI,EAAE;gBACJ,MAAM,EAAE,GAAG;aACZ;SACF,CAAC,CAAC;QACL,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAE9B,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,MAAW,EAAE,EAAE;YAClC,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;YAC/C,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QAEhF,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,EAAE,CAAC,SAAiB,EAAE,QAAyB;QAClD,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACpC,CAAC;IACM,IAAI,CAAC,SAAiB,EAAE,IAAS;QACpC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;CACJ;AAIa,QAAA,UAAU,GAAI;IACxB,UAAU,EAAE,YAAY;IACxB,YAAY,EAAE,cAAc;IAC5B,YAAY,EAAE,cAAc;CAC/B,CAAA;AAEY,QAAA,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC","sourcesContent":["\r\nimport {Server} from \"socket.io\"\r\n\r\nclass SocketService{\r\n    private io: Server = new Server();\r\n    \r\n    public init(server: any){\r\n        this.io = new Server(server, {\r\n            cors: {\r\n              origin: \"*\"\r\n            }\r\n          });\r\n        console.log(\"WS Initialized\");\r\n\r\n        this.on(\"connection\", (socket: any) => {\r\n            console.log(\"New client connected\", socket.id);\r\n            socket.on(\"disconnect\", () => console.log(\"Client disconnected\",socket.id));\r\n            \r\n        });\r\n    }\r\n\r\n    public on(eventName: string, callback: (x:any) => void){\r\n        this.io.on(eventName, callback);\r\n    }\r\n    public emit(eventName: string, data: any){\r\n        this.io.emit(eventName, data);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const  EVENT_NAME  = {\r\n    PAIR_ORDER: \"PAIR_ORDER\",\r\n    PAIR_HISTORY: \"PAIR_HISTORY\",\r\n    CANCEL_ORDER: \"CANCEL_ORDER\"\r\n}\r\n\r\nexport const socketService = new SocketService();\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d438ed7f48a32b172365065d7ec439c07c958e73","contentHash":"5dc01bc6ac2b38b4b90c3a384236b3284c6a8252847642a04468be0fd473bced"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\BmarginOrderLong.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\BmarginOrderLong.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"15":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"16":{"start":{"line":17,"column":15},"end":{"line":17,"column":30}},"17":{"start":{"line":18,"column":20},"end":{"line":18,"column":57}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}},"19":{"start":{"line":20,"column":17},"end":{"line":20,"column":34}},"20":{"start":{"line":21,"column":17},"end":{"line":21,"column":51}},"21":{"start":{"line":22,"column":29},"end":{"line":22,"column":68}},"22":{"start":{"line":23,"column":20},"end":{"line":23,"column":55}},"23":{"start":{"line":24,"column":16},"end":{"line":24,"column":38}},"24":{"start":{"line":25,"column":16},"end":{"line":25,"column":45}},"25":{"start":{"line":26,"column":27},"end":{"line":26,"column":54}},"26":{"start":{"line":27,"column":15},"end":{"line":27,"column":47}},"27":{"start":{"line":28,"column":13},"end":{"line":28,"column":32}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":185}},"29":{"start":{"line":30,"column":15},"end":{"line":30,"column":66}},"30":{"start":{"line":37,"column":0},"end":{"line":226,"column":4}},"31":{"start":{"line":37,"column":88},"end":{"line":226,"column":2}},"32":{"start":{"line":39,"column":18},"end":{"line":39,"column":26}},"33":{"start":{"line":40,"column":19},"end":{"line":40,"column":52}},"34":{"start":{"line":41,"column":19},"end":{"line":41,"column":126}},"35":{"start":{"line":42,"column":14},"end":{"line":44,"column":41}},"36":{"start":{"line":45,"column":15},"end":{"line":45,"column":115}},"37":{"start":{"line":46,"column":16},"end":{"line":46,"column":110}},"38":{"start":{"line":47,"column":16},"end":{"line":47,"column":117}},"39":{"start":{"line":48,"column":15},"end":{"line":48,"column":115}},"40":{"start":{"line":49,"column":16},"end":{"line":49,"column":86}},"41":{"start":{"line":50,"column":16},"end":{"line":50,"column":86}},"42":{"start":{"line":51,"column":21},"end":{"line":51,"column":23}},"43":{"start":{"line":52,"column":17},"end":{"line":52,"column":19}},"44":{"start":{"line":53,"column":23},"end":{"line":53,"column":25}},"45":{"start":{"line":54,"column":23},"end":{"line":54,"column":75}},"46":{"start":{"line":55,"column":15},"end":{"line":55,"column":50}},"47":{"start":{"line":56,"column":17},"end":{"line":56,"column":65}},"48":{"start":{"line":57,"column":16},"end":{"line":57,"column":17}},"49":{"start":{"line":58,"column":20},"end":{"line":58,"column":21}},"50":{"start":{"line":59,"column":4},"end":{"line":63,"column":8}},"51":{"start":{"line":59,"column":17},"end":{"line":63,"column":6}},"52":{"start":{"line":64,"column":4},"end":{"line":85,"column":8}},"53":{"start":{"line":64,"column":56},"end":{"line":85,"column":6}},"54":{"start":{"line":66,"column":33},"end":{"line":66,"column":80}},"55":{"start":{"line":67,"column":33},"end":{"line":67,"column":80}},"56":{"start":{"line":68,"column":26},"end":{"line":68,"column":76}},"57":{"start":{"line":70,"column":8},"end":{"line":70,"column":64}},"58":{"start":{"line":71,"column":8},"end":{"line":71,"column":64}},"59":{"start":{"line":73,"column":8},"end":{"line":73,"column":97}},"60":{"start":{"line":74,"column":8},"end":{"line":74,"column":98}},"61":{"start":{"line":75,"column":8},"end":{"line":75,"column":97}},"62":{"start":{"line":77,"column":8},"end":{"line":77,"column":93}},"63":{"start":{"line":78,"column":8},"end":{"line":78,"column":93}},"64":{"start":{"line":79,"column":24},"end":{"line":79,"column":110}},"65":{"start":{"line":80,"column":8},"end":{"line":80,"column":30}},"66":{"start":{"line":81,"column":34},"end":{"line":81,"column":81}},"67":{"start":{"line":82,"column":34},"end":{"line":82,"column":81}},"68":{"start":{"line":83,"column":8},"end":{"line":83,"column":152}},"69":{"start":{"line":84,"column":8},"end":{"line":84,"column":152}},"70":{"start":{"line":86,"column":4},"end":{"line":103,"column":8}},"71":{"start":{"line":86,"column":35},"end":{"line":103,"column":6}},"72":{"start":{"line":87,"column":26},"end":{"line":87,"column":66}},"73":{"start":{"line":88,"column":27},"end":{"line":88,"column":71}},"74":{"start":{"line":90,"column":8},"end":{"line":93,"column":11}},"75":{"start":{"line":94,"column":8},"end":{"line":97,"column":11}},"76":{"start":{"line":99,"column":8},"end":{"line":102,"column":11}},"77":{"start":{"line":104,"column":4},"end":{"line":165,"column":8}},"78":{"start":{"line":104,"column":57},"end":{"line":165,"column":6}},"79":{"start":{"line":105,"column":23},"end":{"line":110,"column":9}},"80":{"start":{"line":112,"column":22},"end":{"line":124,"column":9}},"81":{"start":{"line":125,"column":22},"end":{"line":135,"column":9}},"82":{"start":{"line":137,"column":8},"end":{"line":137,"column":27}},"83":{"start":{"line":139,"column":32},"end":{"line":139,"column":80}},"84":{"start":{"line":140,"column":8},"end":{"line":140,"column":41}},"85":{"start":{"line":144,"column":18},"end":{"line":160,"column":10}},"86":{"start":{"line":161,"column":8},"end":{"line":161,"column":52}},"87":{"start":{"line":162,"column":8},"end":{"line":162,"column":62}},"88":{"start":{"line":163,"column":8},"end":{"line":163,"column":56}},"89":{"start":{"line":164,"column":8},"end":{"line":164,"column":90}},"90":{"start":{"line":166,"column":4},"end":{"line":173,"column":8}},"91":{"start":{"line":166,"column":48},"end":{"line":173,"column":6}},"92":{"start":{"line":167,"column":19},"end":{"line":167,"column":87}},"93":{"start":{"line":168,"column":8},"end":{"line":168,"column":52}},"94":{"start":{"line":169,"column":8},"end":{"line":169,"column":57}},"95":{"start":{"line":170,"column":8},"end":{"line":170,"column":77}},"96":{"start":{"line":171,"column":8},"end":{"line":171,"column":63}},"97":{"start":{"line":172,"column":8},"end":{"line":172,"column":32}},"98":{"start":{"line":174,"column":4},"end":{"line":203,"column":8}},"99":{"start":{"line":174,"column":79},"end":{"line":203,"column":6}},"100":{"start":{"line":175,"column":33},"end":{"line":175,"column":61}},"101":{"start":{"line":176,"column":33},"end":{"line":176,"column":61}},"102":{"start":{"line":177,"column":34},"end":{"line":177,"column":63}},"103":{"start":{"line":178,"column":34},"end":{"line":178,"column":63}},"104":{"start":{"line":179,"column":22},"end":{"line":179,"column":123}},"105":{"start":{"line":180,"column":8},"end":{"line":180,"column":51}},"106":{"start":{"line":181,"column":8},"end":{"line":181,"column":51}},"107":{"start":{"line":182,"column":8},"end":{"line":182,"column":52}},"108":{"start":{"line":183,"column":8},"end":{"line":183,"column":52}},"109":{"start":{"line":184,"column":26},"end":{"line":184,"column":74}},"110":{"start":{"line":185,"column":8},"end":{"line":185,"column":79}},"111":{"start":{"line":186,"column":8},"end":{"line":186,"column":79}},"112":{"start":{"line":187,"column":20},"end":{"line":187,"column":136}},"113":{"start":{"line":188,"column":8},"end":{"line":188,"column":28}},"114":{"start":{"line":189,"column":34},"end":{"line":189,"column":62}},"115":{"start":{"line":190,"column":35},"end":{"line":190,"column":64}},"116":{"start":{"line":191,"column":35},"end":{"line":191,"column":64}},"117":{"start":{"line":192,"column":34},"end":{"line":192,"column":62}},"118":{"start":{"line":193,"column":23},"end":{"line":193,"column":128}},"119":{"start":{"line":194,"column":8},"end":{"line":194,"column":53}},"120":{"start":{"line":195,"column":8},"end":{"line":195,"column":54}},"121":{"start":{"line":196,"column":8},"end":{"line":196,"column":54}},"122":{"start":{"line":197,"column":8},"end":{"line":197,"column":53}},"123":{"start":{"line":198,"column":8},"end":{"line":198,"column":153}},"124":{"start":{"line":199,"column":8},"end":{"line":202,"column":66}},"125":{"start":{"line":204,"column":4},"end":{"line":225,"column":8}},"126":{"start":{"line":204,"column":34},"end":{"line":225,"column":6}},"127":{"start":{"line":205,"column":20},"end":{"line":205,"column":114}},"128":{"start":{"line":206,"column":8},"end":{"line":206,"column":28}},"129":{"start":{"line":207,"column":19},"end":{"line":218,"column":9}},"130":{"start":{"line":208,"column":12},"end":{"line":217,"column":15}},"131":{"start":{"line":209,"column":32},"end":{"line":211,"column":25}},"132":{"start":{"line":210,"column":20},"end":{"line":210,"column":46}},"133":{"start":{"line":212,"column":16},"end":{"line":216,"column":19}},"134":{"start":{"line":213,"column":20},"end":{"line":213,"column":44}},"135":{"start":{"line":214,"column":20},"end":{"line":214,"column":48}},"136":{"start":{"line":215,"column":20},"end":{"line":215,"column":46}},"137":{"start":{"line":219,"column":18},"end":{"line":219,"column":30}},"138":{"start":{"line":220,"column":8},"end":{"line":220,"column":52}},"139":{"start":{"line":221,"column":19},"end":{"line":221,"column":87}},"140":{"start":{"line":222,"column":8},"end":{"line":222,"column":52}},"141":{"start":{"line":223,"column":8},"end":{"line":223,"column":48}},"142":{"start":{"line":224,"column":8},"end":{"line":224,"column":58}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":37,"column":82},"end":{"line":37,"column":83}},"loc":{"start":{"line":37,"column":88},"end":{"line":226,"column":2}},"line":37},"9":{"name":"(anonymous_9)","decl":{"start":{"line":37,"column":122},"end":{"line":37,"column":123}},"loc":{"start":{"line":37,"column":135},"end":{"line":226,"column":1}},"line":37},"10":{"name":"(anonymous_10)","decl":{"start":{"line":59,"column":11},"end":{"line":59,"column":12}},"loc":{"start":{"line":59,"column":17},"end":{"line":63,"column":6}},"line":59},"11":{"name":"(anonymous_11)","decl":{"start":{"line":59,"column":51},"end":{"line":59,"column":52}},"loc":{"start":{"line":59,"column":64},"end":{"line":63,"column":5}},"line":59},"12":{"name":"(anonymous_12)","decl":{"start":{"line":64,"column":50},"end":{"line":64,"column":51}},"loc":{"start":{"line":64,"column":56},"end":{"line":85,"column":6}},"line":64},"13":{"name":"(anonymous_13)","decl":{"start":{"line":64,"column":90},"end":{"line":64,"column":91}},"loc":{"start":{"line":64,"column":103},"end":{"line":85,"column":5}},"line":64},"14":{"name":"(anonymous_14)","decl":{"start":{"line":86,"column":29},"end":{"line":86,"column":30}},"loc":{"start":{"line":86,"column":35},"end":{"line":103,"column":6}},"line":86},"15":{"name":"(anonymous_15)","decl":{"start":{"line":86,"column":69},"end":{"line":86,"column":70}},"loc":{"start":{"line":86,"column":82},"end":{"line":103,"column":5}},"line":86},"16":{"name":"(anonymous_16)","decl":{"start":{"line":104,"column":51},"end":{"line":104,"column":52}},"loc":{"start":{"line":104,"column":57},"end":{"line":165,"column":6}},"line":104},"17":{"name":"(anonymous_17)","decl":{"start":{"line":104,"column":91},"end":{"line":104,"column":92}},"loc":{"start":{"line":104,"column":104},"end":{"line":165,"column":5}},"line":104},"18":{"name":"(anonymous_18)","decl":{"start":{"line":166,"column":42},"end":{"line":166,"column":43}},"loc":{"start":{"line":166,"column":48},"end":{"line":173,"column":6}},"line":166},"19":{"name":"(anonymous_19)","decl":{"start":{"line":166,"column":82},"end":{"line":166,"column":83}},"loc":{"start":{"line":166,"column":95},"end":{"line":173,"column":5}},"line":166},"20":{"name":"(anonymous_20)","decl":{"start":{"line":174,"column":73},"end":{"line":174,"column":74}},"loc":{"start":{"line":174,"column":79},"end":{"line":203,"column":6}},"line":174},"21":{"name":"(anonymous_21)","decl":{"start":{"line":174,"column":113},"end":{"line":174,"column":114}},"loc":{"start":{"line":174,"column":126},"end":{"line":203,"column":5}},"line":174},"22":{"name":"(anonymous_22)","decl":{"start":{"line":204,"column":28},"end":{"line":204,"column":29}},"loc":{"start":{"line":204,"column":34},"end":{"line":225,"column":6}},"line":204},"23":{"name":"(anonymous_23)","decl":{"start":{"line":204,"column":68},"end":{"line":204,"column":69}},"loc":{"start":{"line":204,"column":81},"end":{"line":225,"column":5}},"line":204},"24":{"name":"(anonymous_24)","decl":{"start":{"line":207,"column":19},"end":{"line":207,"column":20}},"loc":{"start":{"line":207,"column":25},"end":{"line":218,"column":9}},"line":207},"25":{"name":"(anonymous_25)","decl":{"start":{"line":208,"column":31},"end":{"line":208,"column":32}},"loc":{"start":{"line":208,"column":52},"end":{"line":217,"column":13}},"line":208},"26":{"name":"(anonymous_26)","decl":{"start":{"line":209,"column":43},"end":{"line":209,"column":44}},"loc":{"start":{"line":209,"column":49},"end":{"line":211,"column":17}},"line":209},"27":{"name":"(anonymous_27)","decl":{"start":{"line":212,"column":63},"end":{"line":212,"column":64}},"loc":{"start":{"line":212,"column":73},"end":{"line":216,"column":17}},"line":212}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":29,"column":71},"end":{"line":29,"column":180}},"type":"cond-expr","locations":[{"start":{"line":29,"column":160},"end":{"line":29,"column":171}},{"start":{"line":29,"column":174},"end":{"line":29,"column":180}}],"line":29},"9":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":156}},"type":"cond-expr","locations":[{"start":{"line":29,"column":128},"end":{"line":29,"column":134}},{"start":{"line":29,"column":137},"end":{"line":29,"column":156}}],"line":29},"10":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":125}},"type":"binary-expr","locations":[{"start":{"line":29,"column":72},"end":{"line":29,"column":108}},{"start":{"line":29,"column":112},"end":{"line":29,"column":125}}],"line":29}},"s":{"0":1,"1":29,"2":3,"3":8,"4":29,"5":29,"6":0,"7":0,"8":0,"9":0,"10":37,"11":8,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":0,"135":0,"136":0,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1},"f":{"0":8,"1":29,"2":3,"3":8,"4":29,"5":0,"6":37,"7":3,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":0},"b":{"0":[1,1,1],"1":[26,3],"2":[8,8],"3":[8,29],"4":[8,8],"5":[1,1,1],"6":[0,3],"7":[3,3],"8":[1,0],"9":[0,1],"10":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/BmarginOrderLong.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/BmarginOrderLong.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,+BAAoC;AACpC,+BAA8B;AAC9B,0DAAiC;AACjC,IAAA,UAAG,EAAC,mBAAQ,CAAC,CAAC;AACd,mCAAgC;AAChC,oDAAyB;AACzB,qEAAiI;AACjI,wDAAsD;AACtD,uCAAgG;AAChG,8CAAwD;AACxD,uDAAsC;AACtC,gDAAwB;AACxB,iCAAiD;AAKjD,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAA,MAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,0CAAE,QAAQ,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAI/H,MAAM,MAAM,GAAG,IAAA,qBAAE,EAAC,uBAAuB,CAAC,CAAC;AAE3C,+CAA+C;AAC/C,sCAAsC;AACtC,MAAM;AAEN,iDAAiD;AACjD,uCAAuC;AACvC,KAAK;AAGL,QAAQ,CAAC,uEAAuE,EAAE,GAAS,EAAE;IAEzF,eAAe;IACf,IAAI,OAAO,GAAG,QAAQ,CAAA;IACtB,IAAI,QAAQ,GAAG,IAAA,mBAAW,EAAC,OAAO,CAAC,CAAC;IAEpC,IAAI,QAAQ,GAAG,IAAI,eAAM,CAAC,QAAQ,CAAC,oCAAe,EAAE,IAAA,sBAAc,GAAE,EAAE,QAAQ,CAAC,CAAC;IAChF,IAAI,GAAG,GAAG,IAAI,eAAM,CAAC,QAAQ,CACzB,+BAAU;IACV,eAAe;IACf,IAAA,mBAAW,GAAE,EAAE,QAAQ,CAAC,CAAC;IAC7B,IAAI,IAAI,GAAG,IAAI,eAAM,CAAC,QAAQ,CAAC,gCAAW,EAAE,IAAA,mBAAW,GAAE,EAAE,QAAQ,CAAC,CAAC;IACrE,IAAI,KAAK,GAAG,IAAI,eAAM,CAAC,QAAQ,CAAC,iCAAY,EAAE,mBAAW,EAAE,QAAQ,CAAC,CAAC;IACrE,IAAI,KAAK,GAAG,IAAI,eAAM,CAAC,QAAQ,CAAC,iCAAY,EAAE,IAAA,mBAAW,GAAE,EAAE,QAAQ,CAAC,CAAC;IACvE,IAAI,IAAI,GAAG,IAAI,eAAM,CAAC,QAAQ,CAAC,gCAAW,EAAE,IAAA,mBAAW,GAAE,EAAE,QAAQ,CAAC,CAAC;IACrE,IAAI,KAAK,GAAG,IAAI,eAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,YAAuB,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG;IACzF,IAAI,KAAK,GAAG,IAAI,eAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,YAAuB,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG;IAGzF,IAAI,UAAU,GAAU,EAAE,CAAC;IAC3B,IAAI,MAAM,GAAU,EAAE,CAAC;IACvB,IAAI,YAAY,GAAU,EAAE,CAAA;IAC5B,IAAI,YAAY,GAAG,eAAM,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;IAE/D,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC;IAC/C,IAAI,MAAM,GAAG,eAAM,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IACrD,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,SAAS,GAAG,CAAC,CAAA,CAAC,OAAO;IAEzB,MAAM,CAAC,GAAS,EAAE;QACd,oFAAoF;QACpF,aAAa;QACb,kBAAkB;IACtB,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,GAAS,EAAE;QACrD,0CAA0C;QAE1C,IAAI,kBAAkB,GAAG,CAAC,MAAM,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QACzE,IAAI,kBAAkB,GAAG,CAAC,MAAM,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAEzE,MAAM,SAAS,GAAG,eAAM,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;QAE5D,4BAA4B;QAC5B,MAAM,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAA;QACvD,MAAM,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAA;QAEvD,yBAAyB;QACzB,MAAM,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,eAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;QAC/E,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,eAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA,CAAC,kCAAkC;QACnH,MAAM,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,eAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;QAE/E,qBAAqB;QACrB,MAAM,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,eAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;QAC3E,MAAM,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,eAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;QAC3E,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,eAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;QAC7F,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QAErB,IAAI,mBAAmB,GAAG,CAAC,MAAM,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC1E,IAAI,mBAAmB,GAAG,CAAC,MAAM,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAE1E,IAAA,aAAM,EAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAA,kBAAU,EAAC,IAAA,gBAAG,EAAC,SAAS,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACrG,IAAA,aAAM,EAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAA,kBAAU,EAAC,IAAA,gBAAG,EAAC,SAAS,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAEzG,CAAC,CAAA,CAAC,CAAC;IAGH,EAAE,CAAC,oBAAoB,EAAE,GAAS,EAAE;QAEhC,MAAM,SAAS,GAAG,eAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAClD,MAAM,UAAU,GAAG,eAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAEvD,OAAO;QACP,MAAM,OAAO,CAAC,GAAG,CACb;YACI,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC;YACjD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,CAAC;SACtD,CACJ,CAAA;QACD,MAAM,OAAO,CAAC,GAAG,CACb;YACI,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC;YACpD,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC;SACzD,CACJ,CAAA;QAED,YAAY;QACZ,MAAM,OAAO,CAAC,GAAG,CAAC;YACd,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,eAAM,CAAC,SAAS,CAAC,UAAU,CAAC;YACzE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,eAAM,CAAC,SAAS,CAAC,UAAU,CAAC;SAC7E,CAAC,CAAA;IACN,CAAC,CAAA,CAAC,CAAA;IAIF,EAAE,CAAC,0CAA0C,EAAE,GAAS,EAAE;QACtD,MAAM,MAAM,GAAG;YACX,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,GAAG;YACZ,OAAO,EAAE,OAAO,CAAC,QAAQ,EAAE;YAC3B,iBAAiB,EAAE,IAAA,0BAAkB,EAAC,OAAO,CAAC;SACjD,CAAC;QAEF,yCAAyC;QACzC,MAAM,KAAK,GAAG;YACV,KAAK,EAAE;gBACH,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE;gBAClC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE;gBACnC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE;gBACnC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE;gBACnC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE;gBACpC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE;gBAChC,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE;gBACzC,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACvC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;aACnC;SACJ,CAAC;QAEF,MAAM,KAAK,GAAG;YACV,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE;YAClC,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE;YACjC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;YAClC,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;YACpB,IAAI,EAAE,IAAI;YACV,YAAY,EAAE,YAAY;YAC1B,WAAW,EAAE,IAAA,gBAAG,EAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAA,gBAAG,EAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;YACvD,KAAK,EAAE,KAAK;SACf,CAAC;QACF,mBAAmB;QAGnB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnB,kBAAkB;QAClB,MAAM,eAAe,GAAG,MAAM,KAAK,CAAC,cAAc,CAC9C,MAAM,EACN,KAAK,EACL,KAAK,CACR,CAAC;QACF,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACjC,gBAAgB;QAChB,6BAA6B;QAC7B,MAAM;QACN,IAAI,GAAG,GAAG,MAAM,IAAA,cAAO,EAAC,uBAAuB,CAAC;aAC3C,IAAI,CAAC,eAAe,CAAC;aACrB,IAAI,CACD;YACI,MAAM,EAAE;gBACJ,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE;gBACpC,QAAQ,EAAE,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE;gBACnC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;gBACpC,QAAQ,EAAE,MAAM;gBAChB,WAAW,EAAE,SAAS;gBACtB,MAAM,EAAE,IAAI;gBACZ,cAAc,EAAE,YAAY;gBAC5B,WAAW,EAAE,IAAA,gBAAG,EAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAA,gBAAG,EAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;gBACvD,KAAK,EAAE,KAAK;aAEf;YACD,WAAW,EAAE,eAAe;YAC5B,SAAS,EAAE,OAAO;SACrB,CACJ,CAAC;QAEN,IAAA,aAAM,EAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAChC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,4BAA4B,CAAC,CAAC;IAE1E,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,GAAS,EAAE;QAE7C,IAAI,IAAI,GAAG,MAAM,iBAAY,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAqB,CAAC;QAC9F,IAAA,aAAM,EAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAA,aAAM,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACrC,IAAA,aAAM,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;QACzD,IAAA,aAAM,EAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;QAC1C,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAC3B,CAAC,CAAA,CAAC,CAAA;IAGF,EAAE,CAAC,gEAAgE,EAAE,GAAS,EAAE;QAC5E,IAAI,kBAAkB,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,kBAAkB,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,OAAO,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,kBAAkB,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,mBAAmB,CAAC,CAAC,CAAA;QACnH,kBAAkB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC3C,kBAAkB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QAC1C,mBAAmB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QAC3C,mBAAmB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QAE3C,MAAM,SAAS,GAAG,eAAM,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC1D,MAAM,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QACvE,MAAM,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAEvE,IAAI,KAAK,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,kBAAkB,CACxD,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EACf,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EACX,SAAS,EACT,EAAE,QAAQ,EAAE,WAAW,EAAE,CAC5B,CAAC;QAEF,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACnB,IAAI,mBAAmB,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvD,IAAI,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACzD,IAAI,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACzD,IAAI,mBAAmB,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAEvD,IAAI,QAAQ,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,mBAAmB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,mBAAmB,CAAC,CAAC,CAAC;QACzH,mBAAmB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC7C,oBAAoB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC9C,oBAAoB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC9C,mBAAmB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAE7C,IAAA,aAAM,EAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAA,kBAAU,EAAC,IAAA,gBAAG,EAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACtG,IAAA,aAAM,EAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,KAAK,CACjC,IAAA,kBAAU,EACN,IAAA,gBAAG,EAAC,mBAAmB,CAAC;aACnB,IAAI,CACD,IAAA,gBAAG,EAAC,SAAS,CAAC;aACT,KAAK,CAAC,YAAY,CAAC;aACnB,GAAG,CAAC,IAAA,gBAAG,EAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;IAE3D,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,GAAS,EAAE;QAI/B,IAAI,KAAK,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,WAAW,CACjD,UAAU,CAAC,CAAC,CAAC,EACb,MAAM,CAAC,CAAC,CAAC,EACT,EAAE,QAAQ,EAAE,WAAW,EAAE,CAC5B,CAAA;QACD,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEpB,IAAI,IAAI,GAAG,GAAG,EAAE;YACZ,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBAEnC,IAAI,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE;oBAC5B,OAAO,OAAO,CAAC,SAAS,CAAC,CAAA;gBAC7B,CAAC,EAAE,KAAK,CAAC,CAAA;gBAET,MAAM,CAAC,EAAE,CAAC,sBAAU,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,EAAE;oBACxC,YAAY,CAAC,SAAS,CAAC,CAAA;oBACvB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA;oBAC3B,OAAO,OAAO,CAAC,SAAS,CAAC,CAAA;gBAC7B,CAAC,CAAC,CAAA;YACN,CAAC,CAAC,CAAA;QACN,CAAC,CAAA;QACD,IAAI,GAAG,GAAG,MAAM,IAAI,EAAE,CAAA;QACtB,IAAA,aAAM,EAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;QAC/B,IAAI,IAAI,GAAG,MAAM,iBAAY,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAqB,CAAC;QAC9F,IAAA,aAAM,EAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAA;QAC/B,IAAA,aAAM,EAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QAC5B,IAAA,aAAM,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IAEzC,CAAC,CAAA,CAAC,CAAA;AAKN,CAAC,CAAA,CAAC,CAAC","sourcesContent":["\r\nimport { use, request } from \"chai\";\r\nimport { expect } from \"chai\";\r\nimport chaiHttp from \"chai-http\";\r\nuse(chaiHttp);\r\nimport { ethers } from \"ethers\";\r\nimport Big from \"big.js\";\r\nimport { BtcAddress, UsdcAddress, ExchangeAddress, leverAddress, cUsdcAddress, cBtcAddress } from '../helper/contractDeployment';\r\nimport { EVENT_NAME } from \"../../socketIo/socket.io\";\r\nimport { getERC20ABI, getExchangeABI, getProvider, leverageAbi, parseEther } from \"../../utils\";\r\nimport { getExchangeAddress } from \"../../helper/chain\";\r\nimport { io } from \"socket.io-client\";\r\nimport path from \"path\";\r\nimport { connect, OrderCreated } from \"../../db\";\r\nimport { ifOrderCreated } from \"../../helper/interface\";\r\n\r\n\r\n\r\nrequire(\"dotenv\").config({ path: path.resolve(process.cwd(), process.env.NODE_ENV?.includes('test') ? \".env.test\" : \".env\") });\r\n\r\n\r\n\r\nconst socket = io(\"http://localhost:3010\");\r\n\r\n// socket.on(EVENT_NAME.PAIR_ORDER, (data) => {\r\n//     console.log(\"pairOrders\", data)\r\n// });\r\n\r\n// socket.on(EVENT_NAME.PAIR_HISTORY, (data) => {\r\n//     console.log(\"pairHistory\", data)\r\n// })\r\n\r\n\r\ndescribe(\"Margin Order => Mint token, create order, execute order, cancel order\", async () => {\r\n\r\n    // requirements\r\n    let chainId = \"421613\"\r\n    let provider = getProvider(chainId);\r\n\r\n    let exchange = new ethers.Contract(ExchangeAddress, getExchangeABI(), provider);\r\n    let btc = new ethers.Contract(\r\n        BtcAddress,\r\n        // EthAddress, \r\n        getERC20ABI(), provider);\r\n    let usdc = new ethers.Contract(UsdcAddress, getERC20ABI(), provider);\r\n    let lever = new ethers.Contract(leverAddress, leverageAbi, provider);\r\n    let cUsdc = new ethers.Contract(cUsdcAddress, getERC20ABI(), provider);\r\n    let cBtc = new ethers.Contract(cBtcAddress, getERC20ABI(), provider);\r\n    let user1 = new ethers.Wallet(process.env.PRIVATE_KEY1! as string).connect(provider); //2\r\n    let user2 = new ethers.Wallet(process.env.PRIVATE_KEY2! as string).connect(provider); //1\r\n\r\n\r\n    let signatures: any[] = [];\r\n    let orders: any[] = [];\r\n    let orderCreated: any[] = []\r\n    let exchangeRate = ethers.utils.parseEther('20000').toString();\r\n\r\n    let salt = Math.floor(Math.random() * 9000000);\r\n    let amount = ethers.utils.parseEther('1').toString();\r\n    let loops = 5;\r\n    let orderType = 2 // long\r\n\r\n    before(async () => { //Before each test we empty the database   \r\n        // await mongoose.createConnection(process.env.MONGO_URL! as string).dropDatabase();\r\n        // httpServer\r\n        // await connect()\r\n    });\r\n\r\n    it('mint 100 btc to user1, 100 BTC to user2', async () => {\r\n        // ORDER IS LONG means user1 want more btc\r\n\r\n        let user1BtcBalancePre = (await btc.balanceOf(user1.address)).toString();\r\n        let user2BtcBalancePre = (await btc.balanceOf(user2.address)).toString();\r\n\r\n        const btcAmount = ethers.utils.parseEther('100').toString();\r\n\r\n        // user1 and user2 mint btc \r\n        await btc.connect(user1).mint(user1.address, btcAmount)\r\n        await btc.connect(user2).mint(user2.address, btcAmount)\r\n\r\n        // approve for exchange  \r\n        await btc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256)\r\n        await usdc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256) // as it will sell usdc to buy btc\r\n        await btc.connect(user2).approve(exchange.address, ethers.constants.MaxUint256)\r\n\r\n        // approve for market\r\n        await btc.connect(user1).approve(cBtc.address, ethers.constants.MaxUint256)\r\n        await btc.connect(user2).approve(cBtc.address, ethers.constants.MaxUint256)\r\n        const approve = await usdc.connect(user1).approve(cUsdc.address, ethers.constants.MaxUint256)\r\n        await approve.wait(1)\r\n\r\n        let user1BtcBalancePost = (await btc.balanceOf(user1.address)).toString();\r\n        let user2BtcBalancePost = (await btc.balanceOf(user2.address)).toString();\r\n\r\n        expect(user1BtcBalancePost).to.equal(parseEther(Big(btcAmount).plus(user1BtcBalancePre).toString()));\r\n        expect(user2BtcBalancePost).to.equal(parseEther(Big(btcAmount).plus(user2BtcBalancePre).toString()));\r\n\r\n    });\r\n\r\n\r\n    it(\"make market liquid\", async () => {\r\n\r\n        const btcAmount = ethers.utils.parseEther('1000');\r\n        const usdcAmount = ethers.utils.parseEther('20000000');\r\n\r\n        // mint\r\n        await Promise.all(\r\n            [\r\n                btc.connect(user1).mint(user1.address, btcAmount),\r\n                usdc.connect(user2).mint(user2.address, usdcAmount),\r\n            ]\r\n        )\r\n        await Promise.all(\r\n            [\r\n                exchange.connect(user1).mint(btc.address, btcAmount),\r\n                exchange.connect(user2).mint(usdc.address, usdcAmount)\r\n            ]\r\n        )\r\n\r\n        // Approval \r\n        await Promise.all([\r\n            btc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256),\r\n            usdc.connect(user2).approve(exchange.address, ethers.constants.MaxUint256),\r\n        ])\r\n    })\r\n\r\n\r\n\r\n    it(`user1 create margin order 1 btc @ 20000}`, async () => {\r\n        const domain = {\r\n            name: \"zexe\",\r\n            version: \"1\",\r\n            chainId: chainId.toString(),\r\n            verifyingContract: getExchangeAddress(chainId),\r\n        };\r\n\r\n        // The named list of all type definitions\r\n        const types = {\r\n            Order: [\r\n                { name: 'maker', type: 'address' },\r\n                { name: 'token0', type: 'address' },\r\n                { name: 'token1', type: 'address' },\r\n                { name: 'amount', type: 'uint256' },\r\n                { name: 'orderType', type: 'uint8' },\r\n                { name: 'salt', type: 'uint32' },\r\n                { name: 'exchangeRate', type: 'uint176' },\r\n                { name: 'borrowLimit', type: 'uint32' },\r\n                { name: 'loops', type: 'uint8' }\r\n            ]\r\n        };\r\n\r\n        const value = {\r\n            maker: user1.address.toLowerCase(),\r\n            token0: btc.address.toLowerCase(),\r\n            token1: usdc.address.toLowerCase(),\r\n            amount: amount,\r\n            orderType: orderType,\r\n            salt: salt,\r\n            exchangeRate: exchangeRate,\r\n            borrowLimit: Big(0.75).times(Big(10).pow(6)).toNumber(),\r\n            loops: loops\r\n        };\r\n        // The data to sign\r\n\r\n\r\n        orders.push(value);\r\n        // sign typed data\r\n        const storedSignature = await user1._signTypedData(\r\n            domain,\r\n            types,\r\n            value\r\n        );\r\n        signatures.push(storedSignature);\r\n        // console.log([\r\n        //     value, storedSignature\r\n        // ]);\r\n        let res = await request(\"http://localhost:3010\")\r\n            .post(\"/order/create\")\r\n            .send(\r\n                {\r\n                    \"data\": {\r\n                        \"maker\": user1.address.toLowerCase(),\r\n                        \"token0\": btc.address.toLowerCase(),\r\n                        \"token1\": usdc.address.toLowerCase(),\r\n                        \"amount\": amount,\r\n                        \"orderType\": orderType,\r\n                        \"salt\": salt,\r\n                        \"exchangeRate\": exchangeRate,\r\n                        borrowLimit: Big(0.75).times(Big(10).pow(6)).toNumber(),\r\n                        loops: loops\r\n\r\n                    },\r\n                    \"signature\": storedSignature,\r\n                    \"chainId\": chainId\r\n                }\r\n            );\r\n\r\n        expect(res).to.have.status(201);\r\n        expect(res.body.status).to.be.equal(true);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.message).to.have.string('Order created successfully');\r\n\r\n    });\r\n\r\n    it(`find created order in data base`, async () => {\r\n\r\n        let data = await OrderCreated.findOne({ signature: signatures[0] }).lean()! as ifOrderCreated;\r\n        expect(data).to.be.an('object');\r\n        expect(data.amount).to.equal(amount);\r\n        expect(data.maker).to.equal(user1.address.toLowerCase());\r\n        expect(Number(data.loops)).to.equal(loops)\r\n        orderCreated.push(data)\r\n    })\r\n\r\n\r\n    it(`user1 sell usdc got from market to user2 and got 2 btc @ 20000`, async () => {\r\n        let user1BtcBalancePre = btc.balanceOf(user1.address);\r\n        let user2BtcBalancePre = btc.balanceOf(user2.address);\r\n        let user2UsdcBalancePre = usdc.balanceOf(user2.address);\r\n        let user1UsdcBalancePre = usdc.balanceOf(user1.address);\r\n        let promise = await Promise.all([user1BtcBalancePre, user2BtcBalancePre, user2UsdcBalancePre, user1UsdcBalancePre])\r\n        user1BtcBalancePre = promise[0].toString();\r\n        user2BtcBalancePre = promise[1].toString()\r\n        user2UsdcBalancePre = promise[2].toString()\r\n        user1UsdcBalancePre = promise[3].toString()\r\n\r\n        const btcAmount = ethers.utils.parseEther('2').toString();\r\n        await lever.connect(user1).enterMarkets([cBtc.address, cUsdc.address]);\r\n        await lever.connect(user2).enterMarkets([cBtc.address, cUsdc.address]);\r\n\r\n        let exTxn = await exchange.connect(user2).executeLimitOrders(\r\n            [signatures[0]],\r\n            [orders[0]],\r\n            btcAmount,\r\n            { gasLimit: \"100000000\" }\r\n        );\r\n\r\n        await exTxn.wait(1)\r\n        let user1BtcBalancePost = btc.balanceOf(user1.address);\r\n        let user1UsdcBalancePost = usdc.balanceOf(user1.address);\r\n        let user2UsdcBalancePost = usdc.balanceOf(user2.address);\r\n        let user2BtcBalancePost = btc.balanceOf(user2.address);\r\n\r\n        let promise1 = await Promise.all([user1BtcBalancePost, user1UsdcBalancePost, user2UsdcBalancePost, user2BtcBalancePost]);\r\n        user1BtcBalancePost = promise1[0].toString();\r\n        user1UsdcBalancePost = promise1[1].toString();\r\n        user2UsdcBalancePost = promise1[2].toString();\r\n        user2BtcBalancePost = promise1[3].toString();\r\n\r\n        expect(user2BtcBalancePost).to.equal(parseEther(Big(user2BtcBalancePre).minus(btcAmount).toString()));\r\n        expect(user2UsdcBalancePost).to.equal(\r\n            parseEther(\r\n                Big(user2UsdcBalancePre)\r\n                    .plus(\r\n                        Big(btcAmount)\r\n                            .times(exchangeRate)\r\n                            .div(Big(10).pow(18))).toString()))\r\n\r\n    });\r\n\r\n    it(`cancelled  order `, async () => {\r\n\r\n\r\n\r\n        let exTxn = await exchange.connect(user1).cancelOrder(\r\n            signatures[0],\r\n            orders[0],\r\n            { gasLimit: \"100000000\" }\r\n        )\r\n        await exTxn.wait(1);\r\n\r\n        let wait = () => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                let timeOutId = setTimeout(() => {\r\n                    return resolve(\"Success\")\r\n                }, 60000)\r\n\r\n                socket.on(EVENT_NAME.CANCEL_ORDER, (data) => {\r\n                    clearTimeout(timeOutId)\r\n                    console.log(\"order cancel\")\r\n                    return resolve(\"Success\")\r\n                })\r\n            })\r\n        }\r\n        let res = await wait()\r\n        expect(res).to.equal(\"Success\")\r\n        let data = await OrderCreated.findOne({ signature: signatures[0] }).lean()! as ifOrderCreated;\r\n        expect(data).to.be.an('object')\r\n        expect(data).not.to.be.null;\r\n        expect(data.cancelled).to.equal(true)\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"68ff13bd307601bb25a7e6ca737b746e6c2ba761","contentHash":"6294edc6e1e36964aedaffb5a86870693b26b9d76d135ffc59f2508b59f4cbfc"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\pairTest.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\api\\pairTest.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":15},"end":{"line":15,"column":30}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"17":{"start":{"line":17,"column":20},"end":{"line":17,"column":57}},"18":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}},"19":{"start":{"line":19,"column":0},"end":{"line":48,"column":3}},"20":{"start":{"line":20,"column":4},"end":{"line":23,"column":8}},"21":{"start":{"line":20,"column":17},"end":{"line":23,"column":6}},"22":{"start":{"line":27,"column":4},"end":{"line":47,"column":8}},"23":{"start":{"line":27,"column":42},"end":{"line":47,"column":6}},"24":{"start":{"line":28,"column":8},"end":{"line":36,"column":12}},"25":{"start":{"line":28,"column":51},"end":{"line":36,"column":10}},"26":{"start":{"line":29,"column":22},"end":{"line":30,"column":53}},"27":{"start":{"line":31,"column":12},"end":{"line":31,"column":56}},"28":{"start":{"line":32,"column":12},"end":{"line":32,"column":60}},"29":{"start":{"line":33,"column":12},"end":{"line":33,"column":64}},"30":{"start":{"line":34,"column":12},"end":{"line":34,"column":70}},"31":{"start":{"line":35,"column":12},"end":{"line":35,"column":66}},"32":{"start":{"line":37,"column":8},"end":{"line":44,"column":12}},"33":{"start":{"line":37,"column":67},"end":{"line":44,"column":10}},"34":{"start":{"line":38,"column":22},"end":{"line":39,"column":38}},"35":{"start":{"line":40,"column":12},"end":{"line":40,"column":56}},"36":{"start":{"line":41,"column":12},"end":{"line":41,"column":67}},"37":{"start":{"line":42,"column":12},"end":{"line":42,"column":60}},"38":{"start":{"line":43,"column":12},"end":{"line":43,"column":85}},"39":{"start":{"line":45,"column":8},"end":{"line":46,"column":12}},"40":{"start":{"line":45,"column":51},"end":{"line":46,"column":10}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":19,"column":29},"end":{"line":19,"column":30}},"loc":{"start":{"line":19,"column":35},"end":{"line":48,"column":1}},"line":19},"9":{"name":"(anonymous_9)","decl":{"start":{"line":20,"column":11},"end":{"line":20,"column":12}},"loc":{"start":{"line":20,"column":17},"end":{"line":23,"column":6}},"line":20},"10":{"name":"(anonymous_10)","decl":{"start":{"line":20,"column":51},"end":{"line":20,"column":52}},"loc":{"start":{"line":20,"column":64},"end":{"line":23,"column":5}},"line":20},"11":{"name":"(anonymous_11)","decl":{"start":{"line":27,"column":36},"end":{"line":27,"column":37}},"loc":{"start":{"line":27,"column":42},"end":{"line":47,"column":6}},"line":27},"12":{"name":"(anonymous_12)","decl":{"start":{"line":27,"column":76},"end":{"line":27,"column":77}},"loc":{"start":{"line":27,"column":89},"end":{"line":47,"column":5}},"line":27},"13":{"name":"(anonymous_13)","decl":{"start":{"line":28,"column":45},"end":{"line":28,"column":46}},"loc":{"start":{"line":28,"column":51},"end":{"line":36,"column":10}},"line":28},"14":{"name":"(anonymous_14)","decl":{"start":{"line":28,"column":85},"end":{"line":28,"column":86}},"loc":{"start":{"line":28,"column":98},"end":{"line":36,"column":9}},"line":28},"15":{"name":"(anonymous_15)","decl":{"start":{"line":37,"column":61},"end":{"line":37,"column":62}},"loc":{"start":{"line":37,"column":67},"end":{"line":44,"column":10}},"line":37},"16":{"name":"(anonymous_16)","decl":{"start":{"line":37,"column":101},"end":{"line":37,"column":102}},"loc":{"start":{"line":37,"column":114},"end":{"line":44,"column":9}},"line":37},"17":{"name":"(anonymous_17)","decl":{"start":{"line":45,"column":45},"end":{"line":45,"column":46}},"loc":{"start":{"line":45,"column":51},"end":{"line":46,"column":10}},"line":45},"18":{"name":"(anonymous_18)","decl":{"start":{"line":45,"column":85},"end":{"line":45,"column":86}},"loc":{"start":{"line":45,"column":98},"end":{"line":46,"column":9}},"line":45}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":2,"2":2,"3":5,"4":2,"5":2,"6":0,"7":0,"8":0,"9":0,"10":7,"11":5,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1},"f":{"0":5,"1":2,"2":2,"3":5,"4":2,"5":0,"6":7,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"b":{"0":[1,1,1],"1":[0,2],"2":[5,5],"3":[5,2],"4":[5,5],"5":[1,1,1],"6":[0,1],"7":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/pairTest.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/api/pairTest.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA,+BAAoC;AACpC,+BAA8B;AAC9B,0DAAiC;AAEjC,IAAA,UAAG,EAAC,mBAAQ,CAAC,CAAC;AAQd,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAE9B,MAAM,CAAC,GAAS,EAAE;QACd,oFAAoF;QACpF,YAAY;IAChB,CAAC,CAAA,CAAC,CAAC;IACH;;QAEI;IACJ,QAAQ,CAAC,qBAAqB,EAAE,GAAS,EAAE;QAEvC,EAAE,CAAC,gCAAgC,EAAE,GAAS,EAAE;YAE5C,IAAI,GAAG,GAAG,MAAM,IAAA,cAAO,EAAC,uBAAuB,CAAC;iBAC3C,GAAG,CAAC,+BAA+B,CAAC,CAAA;YACzC,IAAA,aAAM,EAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAChC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;YACxC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC,CAAA,CAAC,CAAC;QAGH,EAAE,CAAC,gDAAgD,EAAE,GAAS,EAAE;YAC5D,IAAI,GAAG,GAAG,MAAM,IAAA,cAAO,EAAC,uBAAuB,CAAC;iBAC3C,GAAG,CAAC,gBAAgB,CAAC,CAAA;YAE1B,IAAA,aAAM,EAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAChC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3C,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;QAEjE,CAAC,CAAA,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,GAAS,EAAE;QAEhD,CAAC,CAAA,CAAC,CAAA;IAGN,CAAC,CAAA,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["\r\n\r\nimport { use, request } from \"chai\";\r\nimport { expect } from \"chai\";\r\nimport chaiHttp from \"chai-http\";\r\nimport { ethers } from \"ethers\";\r\nuse(chaiHttp);\r\nimport mongoose from 'mongoose';\r\nimport { httpServer } from '../../../app';\r\nimport { backupConnection, connect } from '../../db';\r\nimport { BtcAddress, ExchangeAddress, UsdcAddress } from \"../../helper/constant\";\r\nimport { getERC20ABI, getExchangeABI, getProvider } from \"../../utils\";\r\n\r\n\r\ndescribe('Testing Pair Api', () => {\r\n\r\n    before(async () => { //Before each test we empty the database   \r\n        // await mongoose.createConnection(process.env.MONGO_URL! as string).dropDatabase();\r\n        // connect()\r\n    });\r\n    /*\r\n      * Test the /GET route\r\n      */\r\n    describe('Get(/pair/allpairs)', async () => {\r\n\r\n        it('it should  have atleast a pair', async () => {\r\n\r\n            let res = await request(\"http://localhost:3010\")\r\n                .get('/pair/allpairs?chainId=421613')\r\n            expect(res).to.have.status(200);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body.data).to.be.an('array');\r\n            expect(res.body.data).not.to.have.lengthOf(0);\r\n            expect(res.body.status).to.be.equal(true);\r\n        });\r\n\r\n\r\n        it('it should send error for not providing chainId', async () => {\r\n            let res = await request(\"http://localhost:3010\")\r\n                .get('/pair/allpairs')\r\n\r\n            expect(res).to.have.status(400);\r\n            expect(res.body.status).to.be.equal(false);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body.error).to.have.string('chainId is required');\r\n\r\n        });\r\n\r\n        it('it should create a limit order', async () => {\r\n\r\n        })\r\n\r\n\r\n    });\r\n\r\n});"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"300a88c359ece13e2e5ff631664853be3a4e7763","contentHash":"9cf16d8a641b3b88e7c19a06cc630eece8c1d5ed4d8af35dd6f83e7f2207a98d"}}