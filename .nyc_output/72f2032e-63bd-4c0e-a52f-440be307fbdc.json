{"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\unitTest\\AorderScriptTest.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\unitTest\\AorderScriptTest.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"15":{"start":{"line":16,"column":17},"end":{"line":16,"column":51}},"16":{"start":{"line":17,"column":15},"end":{"line":17,"column":30}},"17":{"start":{"line":18,"column":15},"end":{"line":18,"column":30}},"18":{"start":{"line":19,"column":20},"end":{"line":19,"column":57}},"19":{"start":{"line":20,"column":17},"end":{"line":20,"column":34}},"20":{"start":{"line":21,"column":13},"end":{"line":21,"column":32}},"21":{"start":{"line":22,"column":16},"end":{"line":22,"column":45}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":44}},"23":{"start":{"line":24,"column":27},"end":{"line":24,"column":54}},"24":{"start":{"line":25,"column":15},"end":{"line":25,"column":47}},"25":{"start":{"line":26,"column":20},"end":{"line":26,"column":55}},"26":{"start":{"line":27,"column":19},"end":{"line":27,"column":51}},"27":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":185}},"29":{"start":{"line":30,"column":15},"end":{"line":30,"column":66}},"30":{"start":{"line":31,"column":0},"end":{"line":246,"column":4}},"31":{"start":{"line":31,"column":92},"end":{"line":246,"column":2}},"32":{"start":{"line":33,"column":18},"end":{"line":33,"column":26}},"33":{"start":{"line":34,"column":19},"end":{"line":34,"column":52}},"34":{"start":{"line":35,"column":19},"end":{"line":35,"column":58}},"35":{"start":{"line":36,"column":14},"end":{"line":36,"column":48}},"36":{"start":{"line":37,"column":15},"end":{"line":37,"column":50}},"37":{"start":{"line":38,"column":16},"end":{"line":38,"column":86}},"38":{"start":{"line":39,"column":16},"end":{"line":39,"column":86}},"39":{"start":{"line":40,"column":21},"end":{"line":40,"column":23}},"40":{"start":{"line":41,"column":17},"end":{"line":41,"column":19}},"41":{"start":{"line":42,"column":23},"end":{"line":42,"column":75}},"42":{"start":{"line":43,"column":18},"end":{"line":43,"column":20}},"43":{"start":{"line":44,"column":15},"end":{"line":44,"column":50}},"44":{"start":{"line":45,"column":17},"end":{"line":45,"column":65}},"45":{"start":{"line":46,"column":20},"end":{"line":46,"column":21}},"46":{"start":{"line":47,"column":20},"end":{"line":47,"column":22}},"47":{"start":{"line":48,"column":16},"end":{"line":48,"column":18}},"48":{"start":{"line":49,"column":25},"end":{"line":49,"column":28}},"49":{"start":{"line":50,"column":4},"end":{"line":52,"column":8}},"50":{"start":{"line":50,"column":17},"end":{"line":52,"column":6}},"51":{"start":{"line":51,"column":8},"end":{"line":51,"column":34}},"52":{"start":{"line":53,"column":4},"end":{"line":75,"column":8}},"53":{"start":{"line":53,"column":86},"end":{"line":75,"column":6}},"54":{"start":{"line":54,"column":33},"end":{"line":54,"column":80}},"55":{"start":{"line":55,"column":34},"end":{"line":55,"column":82}},"56":{"start":{"line":57,"column":26},"end":{"line":57,"column":76}},"57":{"start":{"line":58,"column":18},"end":{"line":58,"column":73}},"58":{"start":{"line":59,"column":8},"end":{"line":59,"column":64}},"59":{"start":{"line":61,"column":22},"end":{"line":61,"column":110}},"60":{"start":{"line":62,"column":8},"end":{"line":62,"column":97}},"61":{"start":{"line":64,"column":27},"end":{"line":64,"column":81}},"62":{"start":{"line":65,"column":18},"end":{"line":65,"column":75}},"63":{"start":{"line":66,"column":8},"end":{"line":66,"column":66}},"64":{"start":{"line":68,"column":23},"end":{"line":68,"column":112}},"65":{"start":{"line":69,"column":8},"end":{"line":69,"column":98}},"66":{"start":{"line":70,"column":8},"end":{"line":70,"column":31}},"67":{"start":{"line":71,"column":34},"end":{"line":71,"column":81}},"68":{"start":{"line":72,"column":35},"end":{"line":72,"column":83}},"69":{"start":{"line":73,"column":8},"end":{"line":73,"column":152}},"70":{"start":{"line":74,"column":8},"end":{"line":74,"column":155}},"71":{"start":{"line":76,"column":4},"end":{"line":144,"column":8}},"72":{"start":{"line":76,"column":92},"end":{"line":144,"column":6}},"73":{"start":{"line":78,"column":23},"end":{"line":83,"column":9}},"74":{"start":{"line":85,"column":22},"end":{"line":97,"column":9}},"75":{"start":{"line":99,"column":22},"end":{"line":109,"column":9}},"76":{"start":{"line":110,"column":8},"end":{"line":110,"column":27}},"77":{"start":{"line":112,"column":32},"end":{"line":112,"column":80}},"78":{"start":{"line":113,"column":8},"end":{"line":113,"column":41}},"79":{"start":{"line":114,"column":8},"end":{"line":116,"column":11}},"80":{"start":{"line":117,"column":30},"end":{"line":117,"column":139}},"81":{"start":{"line":118,"column":26},"end":{"line":118,"column":166}},"82":{"start":{"line":119,"column":18},"end":{"line":135,"column":10}},"83":{"start":{"line":136,"column":31},"end":{"line":136,"column":140}},"84":{"start":{"line":137,"column":8},"end":{"line":137,"column":30}},"85":{"start":{"line":138,"column":8},"end":{"line":138,"column":52}},"86":{"start":{"line":139,"column":8},"end":{"line":139,"column":62}},"87":{"start":{"line":140,"column":8},"end":{"line":140,"column":56}},"88":{"start":{"line":141,"column":8},"end":{"line":141,"column":90}},"89":{"start":{"line":142,"column":8},"end":{"line":142,"column":60}},"90":{"start":{"line":143,"column":8},"end":{"line":143,"column":197}},"91":{"start":{"line":145,"column":4},"end":{"line":151,"column":8}},"92":{"start":{"line":145,"column":48},"end":{"line":151,"column":6}},"93":{"start":{"line":146,"column":19},"end":{"line":146,"column":87}},"94":{"start":{"line":147,"column":8},"end":{"line":147,"column":52}},"95":{"start":{"line":148,"column":8},"end":{"line":148,"column":57}},"96":{"start":{"line":149,"column":8},"end":{"line":149,"column":77}},"97":{"start":{"line":150,"column":8},"end":{"line":150,"column":26}},"98":{"start":{"line":152,"column":4},"end":{"line":209,"column":8}},"99":{"start":{"line":152,"column":47},"end":{"line":209,"column":6}},"100":{"start":{"line":155,"column":33},"end":{"line":155,"column":61}},"101":{"start":{"line":156,"column":33},"end":{"line":156,"column":61}},"102":{"start":{"line":157,"column":34},"end":{"line":157,"column":63}},"103":{"start":{"line":158,"column":34},"end":{"line":158,"column":63}},"104":{"start":{"line":159,"column":22},"end":{"line":159,"column":123}},"105":{"start":{"line":160,"column":8},"end":{"line":160,"column":51}},"106":{"start":{"line":161,"column":8},"end":{"line":161,"column":51}},"107":{"start":{"line":162,"column":8},"end":{"line":162,"column":52}},"108":{"start":{"line":163,"column":8},"end":{"line":163,"column":52}},"109":{"start":{"line":165,"column":30},"end":{"line":165,"column":139}},"110":{"start":{"line":166,"column":8},"end":{"line":166,"column":166}},"111":{"start":{"line":167,"column":8},"end":{"line":167,"column":71}},"112":{"start":{"line":168,"column":22},"end":{"line":168,"column":140}},"113":{"start":{"line":169,"column":8},"end":{"line":169,"column":28}},"114":{"start":{"line":170,"column":34},"end":{"line":170,"column":62}},"115":{"start":{"line":171,"column":35},"end":{"line":171,"column":64}},"116":{"start":{"line":172,"column":35},"end":{"line":172,"column":64}},"117":{"start":{"line":173,"column":34},"end":{"line":173,"column":62}},"118":{"start":{"line":174,"column":23},"end":{"line":174,"column":128}},"119":{"start":{"line":175,"column":8},"end":{"line":175,"column":53}},"120":{"start":{"line":176,"column":8},"end":{"line":176,"column":54}},"121":{"start":{"line":177,"column":8},"end":{"line":177,"column":54}},"122":{"start":{"line":178,"column":8},"end":{"line":178,"column":53}},"123":{"start":{"line":179,"column":18},"end":{"line":179,"column":50}},"124":{"start":{"line":180,"column":29},"end":{"line":180,"column":133}},"125":{"start":{"line":181,"column":29},"end":{"line":181,"column":137}},"126":{"start":{"line":182,"column":8},"end":{"line":182,"column":153}},"127":{"start":{"line":183,"column":8},"end":{"line":187,"column":66}},"128":{"start":{"line":188,"column":8},"end":{"line":188,"column":197}},"129":{"start":{"line":189,"column":8},"end":{"line":192,"column":66}},"130":{"start":{"line":193,"column":19},"end":{"line":203,"column":9}},"131":{"start":{"line":194,"column":12},"end":{"line":202,"column":15}},"132":{"start":{"line":195,"column":32},"end":{"line":197,"column":25}},"133":{"start":{"line":196,"column":20},"end":{"line":196,"column":46}},"134":{"start":{"line":198,"column":16},"end":{"line":201,"column":19}},"135":{"start":{"line":199,"column":20},"end":{"line":199,"column":44}},"136":{"start":{"line":200,"column":20},"end":{"line":200,"column":46}},"137":{"start":{"line":204,"column":18},"end":{"line":204,"column":30}},"138":{"start":{"line":205,"column":8},"end":{"line":205,"column":52}},"139":{"start":{"line":206,"column":8},"end":{"line":208,"column":12}},"140":{"start":{"line":206,"column":43},"end":{"line":208,"column":10}},"141":{"start":{"line":207,"column":12},"end":{"line":207,"column":41}},"142":{"start":{"line":210,"column":4},"end":{"line":221,"column":8}},"143":{"start":{"line":210,"column":58},"end":{"line":221,"column":6}},"144":{"start":{"line":212,"column":27},"end":{"line":212,"column":83}},"145":{"start":{"line":213,"column":27},"end":{"line":213,"column":136}},"146":{"start":{"line":214,"column":27},"end":{"line":214,"column":82}},"147":{"start":{"line":215,"column":8},"end":{"line":215,"column":196}},"148":{"start":{"line":216,"column":8},"end":{"line":216,"column":56}},"149":{"start":{"line":217,"column":8},"end":{"line":217,"column":132}},"150":{"start":{"line":218,"column":8},"end":{"line":218,"column":137}},"151":{"start":{"line":219,"column":8},"end":{"line":219,"column":56}},"152":{"start":{"line":220,"column":8},"end":{"line":220,"column":192}},"153":{"start":{"line":222,"column":4},"end":{"line":245,"column":8}},"154":{"start":{"line":222,"column":73},"end":{"line":245,"column":6}},"155":{"start":{"line":223,"column":30},"end":{"line":223,"column":139}},"156":{"start":{"line":224,"column":20},"end":{"line":224,"column":114}},"157":{"start":{"line":225,"column":8},"end":{"line":225,"column":28}},"158":{"start":{"line":226,"column":19},"end":{"line":236,"column":9}},"159":{"start":{"line":227,"column":12},"end":{"line":235,"column":15}},"160":{"start":{"line":228,"column":32},"end":{"line":230,"column":25}},"161":{"start":{"line":229,"column":20},"end":{"line":229,"column":46}},"162":{"start":{"line":231,"column":16},"end":{"line":234,"column":19}},"163":{"start":{"line":232,"column":20},"end":{"line":232,"column":44}},"164":{"start":{"line":233,"column":20},"end":{"line":233,"column":46}},"165":{"start":{"line":237,"column":18},"end":{"line":237,"column":30}},"166":{"start":{"line":238,"column":8},"end":{"line":238,"column":52}},"167":{"start":{"line":239,"column":20},"end":{"line":239,"column":75}},"168":{"start":{"line":240,"column":31},"end":{"line":240,"column":140}},"169":{"start":{"line":241,"column":8},"end":{"line":241,"column":53}},"170":{"start":{"line":242,"column":8},"end":{"line":242,"column":105}},"171":{"start":{"line":243,"column":8},"end":{"line":243,"column":64}},"172":{"start":{"line":244,"column":8},"end":{"line":244,"column":323}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":31,"column":86},"end":{"line":31,"column":87}},"loc":{"start":{"line":31,"column":92},"end":{"line":246,"column":2}},"line":31},"9":{"name":"(anonymous_9)","decl":{"start":{"line":31,"column":126},"end":{"line":31,"column":127}},"loc":{"start":{"line":31,"column":139},"end":{"line":246,"column":1}},"line":31},"10":{"name":"(anonymous_10)","decl":{"start":{"line":50,"column":11},"end":{"line":50,"column":12}},"loc":{"start":{"line":50,"column":17},"end":{"line":52,"column":6}},"line":50},"11":{"name":"(anonymous_11)","decl":{"start":{"line":50,"column":51},"end":{"line":50,"column":52}},"loc":{"start":{"line":50,"column":64},"end":{"line":52,"column":5}},"line":50},"12":{"name":"(anonymous_12)","decl":{"start":{"line":53,"column":80},"end":{"line":53,"column":81}},"loc":{"start":{"line":53,"column":86},"end":{"line":75,"column":6}},"line":53},"13":{"name":"(anonymous_13)","decl":{"start":{"line":53,"column":120},"end":{"line":53,"column":121}},"loc":{"start":{"line":53,"column":133},"end":{"line":75,"column":5}},"line":53},"14":{"name":"(anonymous_14)","decl":{"start":{"line":76,"column":86},"end":{"line":76,"column":87}},"loc":{"start":{"line":76,"column":92},"end":{"line":144,"column":6}},"line":76},"15":{"name":"(anonymous_15)","decl":{"start":{"line":76,"column":126},"end":{"line":76,"column":127}},"loc":{"start":{"line":76,"column":139},"end":{"line":144,"column":5}},"line":76},"16":{"name":"(anonymous_16)","decl":{"start":{"line":145,"column":42},"end":{"line":145,"column":43}},"loc":{"start":{"line":145,"column":48},"end":{"line":151,"column":6}},"line":145},"17":{"name":"(anonymous_17)","decl":{"start":{"line":145,"column":82},"end":{"line":145,"column":83}},"loc":{"start":{"line":145,"column":95},"end":{"line":151,"column":5}},"line":145},"18":{"name":"(anonymous_18)","decl":{"start":{"line":152,"column":41},"end":{"line":152,"column":42}},"loc":{"start":{"line":152,"column":47},"end":{"line":209,"column":6}},"line":152},"19":{"name":"(anonymous_19)","decl":{"start":{"line":152,"column":81},"end":{"line":152,"column":82}},"loc":{"start":{"line":152,"column":94},"end":{"line":209,"column":5}},"line":152},"20":{"name":"(anonymous_20)","decl":{"start":{"line":193,"column":19},"end":{"line":193,"column":20}},"loc":{"start":{"line":193,"column":25},"end":{"line":203,"column":9}},"line":193},"21":{"name":"(anonymous_21)","decl":{"start":{"line":194,"column":31},"end":{"line":194,"column":32}},"loc":{"start":{"line":194,"column":52},"end":{"line":202,"column":13}},"line":194},"22":{"name":"(anonymous_22)","decl":{"start":{"line":195,"column":43},"end":{"line":195,"column":44}},"loc":{"start":{"line":195,"column":49},"end":{"line":197,"column":17}},"line":195},"23":{"name":"(anonymous_23)","decl":{"start":{"line":198,"column":63},"end":{"line":198,"column":64}},"loc":{"start":{"line":198,"column":73},"end":{"line":201,"column":17}},"line":198},"24":{"name":"(anonymous_24)","decl":{"start":{"line":206,"column":33},"end":{"line":206,"column":34}},"loc":{"start":{"line":206,"column":43},"end":{"line":208,"column":10}},"line":206},"25":{"name":"(anonymous_25)","decl":{"start":{"line":206,"column":77},"end":{"line":206,"column":78}},"loc":{"start":{"line":206,"column":90},"end":{"line":208,"column":9}},"line":206},"26":{"name":"(anonymous_26)","decl":{"start":{"line":210,"column":52},"end":{"line":210,"column":53}},"loc":{"start":{"line":210,"column":58},"end":{"line":221,"column":6}},"line":210},"27":{"name":"(anonymous_27)","decl":{"start":{"line":210,"column":92},"end":{"line":210,"column":93}},"loc":{"start":{"line":210,"column":105},"end":{"line":221,"column":5}},"line":210},"28":{"name":"(anonymous_28)","decl":{"start":{"line":222,"column":67},"end":{"line":222,"column":68}},"loc":{"start":{"line":222,"column":73},"end":{"line":245,"column":6}},"line":222},"29":{"name":"(anonymous_29)","decl":{"start":{"line":222,"column":107},"end":{"line":222,"column":108}},"loc":{"start":{"line":222,"column":120},"end":{"line":245,"column":5}},"line":222},"30":{"name":"(anonymous_30)","decl":{"start":{"line":226,"column":19},"end":{"line":226,"column":20}},"loc":{"start":{"line":226,"column":25},"end":{"line":236,"column":9}},"line":226},"31":{"name":"(anonymous_31)","decl":{"start":{"line":227,"column":31},"end":{"line":227,"column":32}},"loc":{"start":{"line":227,"column":52},"end":{"line":235,"column":13}},"line":227},"32":{"name":"(anonymous_32)","decl":{"start":{"line":228,"column":43},"end":{"line":228,"column":44}},"loc":{"start":{"line":228,"column":49},"end":{"line":230,"column":17}},"line":228},"33":{"name":"(anonymous_33)","decl":{"start":{"line":231,"column":63},"end":{"line":231,"column":64}},"loc":{"start":{"line":231,"column":73},"end":{"line":234,"column":17}},"line":231}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":29,"column":71},"end":{"line":29,"column":180}},"type":"cond-expr","locations":[{"start":{"line":29,"column":160},"end":{"line":29,"column":171}},{"start":{"line":29,"column":174},"end":{"line":29,"column":180}}],"line":29},"9":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":156}},"type":"cond-expr","locations":[{"start":{"line":29,"column":128},"end":{"line":29,"column":134}},{"start":{"line":29,"column":137},"end":{"line":29,"column":156}}],"line":29},"10":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":125}},"type":"binary-expr","locations":[{"start":{"line":29,"column":72},"end":{"line":29,"column":108}},{"start":{"line":29,"column":112},"end":{"line":29,"column":125}}],"line":29},"11":{"loc":{"start":{"line":118,"column":26},"end":{"line":118,"column":166}},"type":"cond-expr","locations":[{"start":{"line":118,"column":158},"end":{"line":118,"column":160}},{"start":{"line":118,"column":163},"end":{"line":118,"column":166}}],"line":118},"12":{"loc":{"start":{"line":118,"column":26},"end":{"line":118,"column":155}},"type":"binary-expr","locations":[{"start":{"line":118,"column":26},"end":{"line":118,"column":138}},{"start":{"line":118,"column":142},"end":{"line":118,"column":155}}],"line":118},"13":{"loc":{"start":{"line":118,"column":32},"end":{"line":118,"column":128}},"type":"cond-expr","locations":[{"start":{"line":118,"column":89},"end":{"line":118,"column":95}},{"start":{"line":118,"column":98},"end":{"line":118,"column":128}}],"line":118},"14":{"loc":{"start":{"line":118,"column":32},"end":{"line":118,"column":86}},"type":"binary-expr","locations":[{"start":{"line":118,"column":32},"end":{"line":118,"column":56}},{"start":{"line":118,"column":60},"end":{"line":118,"column":86}}],"line":118},"15":{"loc":{"start":{"line":143,"column":27},"end":{"line":143,"column":126}},"type":"cond-expr","locations":[{"start":{"line":143,"column":86},"end":{"line":143,"column":92}},{"start":{"line":143,"column":95},"end":{"line":143,"column":126}}],"line":143},"16":{"loc":{"start":{"line":143,"column":27},"end":{"line":143,"column":83}},"type":"binary-expr","locations":[{"start":{"line":143,"column":27},"end":{"line":143,"column":52}},{"start":{"line":143,"column":56},"end":{"line":143,"column":83}}],"line":143},"17":{"loc":{"start":{"line":166,"column":25},"end":{"line":166,"column":165}},"type":"cond-expr","locations":[{"start":{"line":166,"column":157},"end":{"line":166,"column":159}},{"start":{"line":166,"column":162},"end":{"line":166,"column":165}}],"line":166},"18":{"loc":{"start":{"line":166,"column":25},"end":{"line":166,"column":154}},"type":"binary-expr","locations":[{"start":{"line":166,"column":25},"end":{"line":166,"column":137}},{"start":{"line":166,"column":141},"end":{"line":166,"column":154}}],"line":166},"19":{"loc":{"start":{"line":166,"column":31},"end":{"line":166,"column":127}},"type":"cond-expr","locations":[{"start":{"line":166,"column":88},"end":{"line":166,"column":94}},{"start":{"line":166,"column":97},"end":{"line":166,"column":127}}],"line":166},"20":{"loc":{"start":{"line":166,"column":31},"end":{"line":166,"column":85}},"type":"binary-expr","locations":[{"start":{"line":166,"column":31},"end":{"line":166,"column":55}},{"start":{"line":166,"column":59},"end":{"line":166,"column":85}}],"line":166},"21":{"loc":{"start":{"line":180,"column":51},"end":{"line":180,"column":105}},"type":"cond-expr","locations":[{"start":{"line":180,"column":84},"end":{"line":180,"column":90}},{"start":{"line":180,"column":93},"end":{"line":180,"column":105}}],"line":180},"22":{"loc":{"start":{"line":180,"column":51},"end":{"line":180,"column":81}},"type":"binary-expr","locations":[{"start":{"line":180,"column":51},"end":{"line":180,"column":63}},{"start":{"line":180,"column":67},"end":{"line":180,"column":81}}],"line":180},"23":{"loc":{"start":{"line":215,"column":27},"end":{"line":215,"column":113}},"type":"cond-expr","locations":[{"start":{"line":215,"column":78},"end":{"line":215,"column":84}},{"start":{"line":215,"column":87},"end":{"line":215,"column":113}}],"line":215},"24":{"loc":{"start":{"line":215,"column":27},"end":{"line":215,"column":75}},"type":"binary-expr","locations":[{"start":{"line":215,"column":27},"end":{"line":215,"column":48}},{"start":{"line":215,"column":52},"end":{"line":215,"column":75}}],"line":215},"25":{"loc":{"start":{"line":217,"column":27},"end":{"line":217,"column":110}},"type":"cond-expr","locations":[{"start":{"line":217,"column":78},"end":{"line":217,"column":84}},{"start":{"line":217,"column":87},"end":{"line":217,"column":110}}],"line":217},"26":{"loc":{"start":{"line":217,"column":27},"end":{"line":217,"column":75}},"type":"binary-expr","locations":[{"start":{"line":217,"column":27},"end":{"line":217,"column":48}},{"start":{"line":217,"column":52},"end":{"line":217,"column":75}}],"line":217},"27":{"loc":{"start":{"line":218,"column":27},"end":{"line":218,"column":112}},"type":"cond-expr","locations":[{"start":{"line":218,"column":78},"end":{"line":218,"column":84}},{"start":{"line":218,"column":87},"end":{"line":218,"column":112}}],"line":218},"28":{"loc":{"start":{"line":218,"column":27},"end":{"line":218,"column":75}},"type":"binary-expr","locations":[{"start":{"line":218,"column":27},"end":{"line":218,"column":48}},{"start":{"line":218,"column":52},"end":{"line":218,"column":75}}],"line":218},"29":{"loc":{"start":{"line":220,"column":27},"end":{"line":220,"column":114}},"type":"cond-expr","locations":[{"start":{"line":220,"column":78},"end":{"line":220,"column":84}},{"start":{"line":220,"column":87},"end":{"line":220,"column":114}}],"line":220},"30":{"loc":{"start":{"line":220,"column":27},"end":{"line":220,"column":75}},"type":"binary-expr","locations":[{"start":{"line":220,"column":27},"end":{"line":220,"column":48}},{"start":{"line":220,"column":52},"end":{"line":220,"column":75}}],"line":220},"31":{"loc":{"start":{"line":242,"column":27},"end":{"line":242,"column":88}},"type":"cond-expr","locations":[{"start":{"line":242,"column":64},"end":{"line":242,"column":70}},{"start":{"line":242,"column":73},"end":{"line":242,"column":88}}],"line":242},"32":{"loc":{"start":{"line":242,"column":27},"end":{"line":242,"column":61}},"type":"binary-expr","locations":[{"start":{"line":242,"column":27},"end":{"line":242,"column":41}},{"start":{"line":242,"column":45},"end":{"line":242,"column":61}}],"line":242},"33":{"loc":{"start":{"line":244,"column":27},"end":{"line":244,"column":126}},"type":"cond-expr","locations":[{"start":{"line":244,"column":86},"end":{"line":244,"column":92}},{"start":{"line":244,"column":95},"end":{"line":244,"column":126}}],"line":244},"34":{"loc":{"start":{"line":244,"column":27},"end":{"line":244,"column":83}},"type":"binary-expr","locations":[{"start":{"line":244,"column":27},"end":{"line":244,"column":52}},{"start":{"line":244,"column":56},"end":{"line":244,"column":83}}],"line":244},"35":{"loc":{"start":{"line":244,"column":159},"end":{"line":244,"column":255}},"type":"cond-expr","locations":[{"start":{"line":244,"column":216},"end":{"line":244,"column":222}},{"start":{"line":244,"column":225},"end":{"line":244,"column":255}}],"line":244},"36":{"loc":{"start":{"line":244,"column":159},"end":{"line":244,"column":213}},"type":"binary-expr","locations":[{"start":{"line":244,"column":159},"end":{"line":244,"column":183}},{"start":{"line":244,"column":187},"end":{"line":244,"column":213}}],"line":244}},"s":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":1,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0},"f":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":1,"7":3,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"0":[1,1,1],"1":[0,0],"2":[1,1],"3":[1,0],"4":[1,1],"5":[1,1,1],"6":[0,3],"7":[3,3],"8":[0,1],"9":[0,1],"10":[1,1],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/unitTest/AorderScriptTest.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/unitTest/AorderScriptTest.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport Big from \"big.js\";\r\nimport { use, request } from \"chai\";\r\nimport { expect } from \"chai\";\r\nimport chaiHttp from \"chai-http\";\r\nimport { ethers } from \"ethers\";\r\nimport { connect, OrderCreated, OrderExecuted, Sync, UserPosition } from \"../../db\";\r\nimport { getExchangeAddress } from \"../../helper/chain\";\r\nimport { ifOrderCreated } from \"../../helper/interface\";\r\nimport {  getProvider, parseEther } from \"../../utils/utils\";\r\nimport { io } from \"socket.io-client\";\r\nimport path from \"path\";\r\nimport { EVENT_NAME } from \"../../socketIo/socket.io\";\r\nimport { contractName, getContract, version } from \"../../helper/constant\";\r\nuse(chaiHttp);\r\n\r\n\r\nrequire(\"dotenv\").config({ path: path.resolve(process.cwd(), process.env.NODE_ENV?.includes('test') ? \".env.test\" : \".env\") });\r\n\r\nconst socket = io(\"http://localhost:3010\");\r\n\r\n\r\n\r\ndescribe(\"Limit Order Sell => Mint token, create order, execute order, cancel order\", async () => {\r\n\r\n    // requirements\r\n    let chainId = \"421613\"\r\n    let provider = getProvider(chainId);\r\n    let exchange = getContract(\"Exchange\");\r\n    let btc = getContract(\"BTC\")\r\n    let usdc = getContract(\"USDC\")\r\n    let user1 = new ethers.Wallet(process.env.PRIVATE_KEY1! as string).connect(provider); //1\r\n    let user2 = new ethers.Wallet(process.env.PRIVATE_KEY2! as string).connect(provider); //2\r\n    let signatures: any[] = [];\r\n    let orders: any[] = [];\r\n    let exchangeRate = ethers.utils.parseEther('20000').toString();\r\n    let orderId = \"\";\r\n    let salt = Math.floor(Math.random() * 9000000);\r\n    let amount = ethers.utils.parseEther('1').toString();\r\n    let orderType = 1; // 1 for sell 0 for buy\r\n    let btcAmount = \"\"\r\n    let txnId = \"\"\r\n    let userInOrderPre = '0';\r\n    before(async () => {\r\n        await connect()\r\n    });\r\n\r\n    it('mint 10 btc to user1, 200000 usdt to user2, approve exchange contract', async () => {\r\n\r\n        let user1BtcBalancePre = (await btc.balanceOf(user1.address)).toString();\r\n        let user2UsdcBalancePre = (await usdc.balanceOf(user2.address)).toString();\r\n        // mint btc\r\n        const btcAmount = ethers.utils.parseEther('100').toString();\r\n        let tx1 = await btc.connect(user1).mint(user1.address, btcAmount);\r\n        await btc.connect(user2).mint(user2.address, btcAmount);\r\n\r\n        // approve for exchange btc \r\n        let approve = await btc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256);\r\n        await btc.connect(user2).approve(exchange.address, ethers.constants.MaxUint256)\r\n\r\n        // mint usdc\r\n        const usdcAmount = ethers.utils.parseEther('2000000').toString();\r\n        let tx2 = await usdc.connect(user2).mint(user2.address, usdcAmount);\r\n        await usdc.connect(user1).mint(user1.address, usdcAmount);\r\n\r\n        // approve for exchange usdc\r\n        let approve1 = await usdc.connect(user2).approve(exchange.address, ethers.constants.MaxUint256);\r\n        await usdc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256);\r\n        await approve1.wait(1)\r\n\r\n        let user1BtcBalancePost = (await btc.balanceOf(user1.address)).toString();\r\n        let user2UsdcBalancePost = (await usdc.balanceOf(user2.address)).toString();\r\n\r\n        expect(user1BtcBalancePost).to.equal(parseEther(Big(btcAmount).plus(user1BtcBalancePre).toString()));\r\n        expect(user2UsdcBalancePost).to.equal(parseEther(Big(usdcAmount).plus(user2UsdcBalancePre).toString()));\r\n\r\n    });\r\n\r\n\r\n    it(`user1 creates limit order to sell 1 btc @ 20000, check user inOrder Balance`, async () => {\r\n\r\n        const domain = {\r\n            name: contractName,\r\n            version: version,\r\n            chainId: chainId.toString(),\r\n            verifyingContract: getExchangeAddress(chainId),\r\n        };\r\n\r\n        // The named list of all type definitions\r\n        const types = {\r\n            Order: [\r\n                { name: 'maker', type: 'address' },\r\n                { name: 'token0', type: 'address' },\r\n                { name: 'token1', type: 'address' },\r\n                { name: 'amount', type: 'uint256' },\r\n                { name: 'orderType', type: 'uint8' },\r\n                { name: 'salt', type: 'uint32' },\r\n                { name: 'exchangeRate', type: 'uint176' },\r\n                { name: 'borrowLimit', type: 'uint32' },\r\n                { name: 'loops', type: 'uint8' }\r\n            ]\r\n        };\r\n\r\n        // The data to sign\r\n        const value = {\r\n            maker: user1.address.toLowerCase(),\r\n            token0: btc.address.toLowerCase(),\r\n            token1: usdc.address.toLowerCase(),\r\n            amount: amount,\r\n            orderType: orderType,\r\n            salt: salt,\r\n            exchangeRate: exchangeRate,\r\n            borrowLimit: 0,\r\n            loops: 0\r\n        };\r\n\r\n        orders.push(value);\r\n        // sign typed data\r\n        const storedSignature = await user1._signTypedData(\r\n            domain,\r\n            types,\r\n            value\r\n        );\r\n        signatures.push(storedSignature);\r\n        console.log([\r\n            value, storedSignature\r\n        ]);\r\n\r\n        let userPositionPre = await UserPosition.findOne({ token: btc.address.toLowerCase(), id: user1.address.toLowerCase() }).lean();\r\n\r\n        let userInOrder = userPositionPre?.inOrderBalance ?? '0';\r\n\r\n        let res = await request(\"http://localhost:3010\")\r\n            .post(`/v/${version}/order/create`)\r\n            .send(\r\n                {\r\n                    \"data\": {\r\n                        \"maker\": user1.address.toLowerCase(),\r\n                        \"token0\": btc.address.toLowerCase(),\r\n                        \"token1\": usdc.address.toLowerCase(),\r\n                        \"amount\": amount,\r\n                        \"orderType\": orderType,\r\n                        \"salt\": salt,\r\n                        \"exchangeRate\": exchangeRate,\r\n                        borrowLimit: 0,\r\n                        loops: 0\r\n                    },\r\n                    \"signature\": storedSignature.toLowerCase(),\r\n                    \"chainId\": chainId\r\n                }\r\n            );\r\n\r\n        let userPositionPost = await UserPosition.findOne({ token: btc.address.toLowerCase(), id: user1.address.toLowerCase() }).lean()\r\n        console.log(res.body)\r\n        expect(res).to.have.status(201);\r\n        expect(res.body.status).to.be.equal(true);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.message).to.have.string('Order created successfully');\r\n        expect(userPositionPost).not.to.be.null;\r\n        expect(userPositionPost?.inOrderBalance).to.equal(Big(userInOrder).plus(amount).toString())\r\n\r\n    });\r\n\r\n    it(`find created order in data base`, async () => {\r\n\r\n        let data = await OrderCreated.findOne({ signature: signatures[0] }).lean()! as ifOrderCreated;\r\n        expect(data).to.be.an('object');\r\n        expect(data.amount).to.equal(amount);\r\n        expect(data.maker).to.equal(user1.address.toLowerCase());\r\n        orderId = data.id\r\n    })\r\n\r\n\r\n    it(`user2 buy user1s 0.8 btc order`, async () => {\r\n        // balances\r\n        let user1BtcBalancePre = btc.balanceOf(user1.address);\r\n        let user2BtcBalancePre = btc.balanceOf(user2.address);\r\n        let user2UsdcBalancePre = usdc.balanceOf(user2.address);\r\n        let user1UsdcBalancePre = usdc.balanceOf(user1.address);\r\n        let promise = await Promise.all([user1BtcBalancePre, user2BtcBalancePre, user2UsdcBalancePre, user1UsdcBalancePre])\r\n        user1BtcBalancePre = promise[0].toString();\r\n        user2BtcBalancePre = promise[1].toString()\r\n        user2UsdcBalancePre = promise[2].toString()\r\n        user1UsdcBalancePre = promise[3].toString()\r\n\r\n        // inOrder Balance\r\n        let userPositionPre = await UserPosition.findOne({ token: btc.address.toLowerCase(), id: user1.address.toLowerCase() }).lean();\r\n\r\n        userInOrderPre = userPositionPre?.inOrderBalance ?? '0';\r\n\r\n        btcAmount = ethers.utils.parseEther(`0.8`).toString();\r\n\r\n        const exTxn = await exchange.connect(user2).executeT0LimitOrders(\r\n            [signatures[0]],\r\n            [orders[0]],\r\n            btcAmount,\r\n            { gasLimit: \"100000000\" }\r\n        );\r\n\r\n        await exTxn.wait(1)\r\n        let user1BtcBalancePost = btc.balanceOf(user1.address);\r\n        let user1UsdcBalancePost = usdc.balanceOf(user1.address);\r\n        let user2UsdcBalancePost = usdc.balanceOf(user2.address);\r\n        let user2BtcBalancePost = btc.balanceOf(user2.address);\r\n\r\n        let promise1 = await Promise.all([user1BtcBalancePost, user1UsdcBalancePost, user2UsdcBalancePost, user2BtcBalancePost]);\r\n        user1BtcBalancePost = promise1[0].toString();\r\n        user1UsdcBalancePost = promise1[1].toString();\r\n        user2UsdcBalancePost = promise1[2].toString();\r\n        user2BtcBalancePost = promise1[3].toString();\r\n\r\n        let fee = await Sync.findOne().lean()! as any;\r\n        let makerFeeAmount = Big(fee?.makerFee).div(1e18).times(btcAmount);\r\n        let takerFeeAmount = Big(Big(fee.takerFee).div(1e18)).times(Big(btcAmount));\r\n\r\n        expect(user1BtcBalancePost).to.equal(parseEther(Big(user1BtcBalancePre).minus(btcAmount).toString()));\r\n        expect(user1UsdcBalancePost).to.equal(parseEther(\r\n            Big(user1UsdcBalancePre)\r\n                .plus((Big(btcAmount)\r\n                    .minus(makerFeeAmount))\r\n                    .times(exchangeRate)\r\n                    .div(Big(10).pow(18))).toString()\r\n        ));\r\n        expect(user2BtcBalancePost).to.equal(parseEther(Big(user2BtcBalancePre).plus(Big(btcAmount).minus(takerFeeAmount)).toString()))\r\n        expect(user2UsdcBalancePost).to.equal(parseEther(\r\n            Big(user2UsdcBalancePre)\r\n                .minus(Big(btcAmount)\r\n                    .times(exchangeRate)\r\n                    .div(Big(10).pow(18))).toString()\r\n        ));\r\n\r\n\r\n        let wait = () => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                let timeOutId = setTimeout(() => {\r\n                    return resolve(\"Success\")\r\n                }, 15000)\r\n\r\n                socket.on(EVENT_NAME.PAIR_HISTORY, (data) => {\r\n                    clearTimeout(timeOutId)\r\n                    return resolve(\"Success\")\r\n                })\r\n            })\r\n        }\r\n\r\n        let res = await wait()\r\n        expect(res).to.equal(\"Success\")\r\n\r\n        await exTxn.wait(1).then(async (resp: any) => {\r\n\r\n            txnId = resp.transactionHash\r\n\r\n        })\r\n    });\r\n\r\n\r\n    it(`find executed Order, check inOrderBalance`, async () => {\r\n        // console.log(\"txnId=\",txnId, \"orderId\", orderId)\r\n        let executeOrder = await OrderExecuted.findOne({ id: orderId }).lean();\r\n        let userPosition = await UserPosition.findOne({ id: user1.address.toLowerCase(), token: btc.address.toLowerCase() }).lean()! as any;\r\n        let orderCreated = await OrderCreated.findOne({ id: orderId }).lean()! as any;\r\n\r\n        expect(orderCreated?.balanceAmount).to.equal(Big(orderCreated.amount).minus(btcAmount).toString())\r\n        expect(executeOrder).not.to.be.null;\r\n        expect(executeOrder?.fillAmount).to.equal(btcAmount);\r\n        expect(executeOrder?.exchangeRate).to.equal(exchangeRate);\r\n        expect(userPosition).not.to.be.null;\r\n        expect(userPosition?.inOrderBalance).to.equal(Big(userInOrderPre).minus(btcAmount).toString())\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n    it(`user1 cancel order 0.2 btc, check order, inOrderbalance `, async () => {\r\n\r\n        let userPositionPre = await UserPosition.findOne({ id: user1.address.toLowerCase(), token: btc.address.toLowerCase() }).lean()\r\n\r\n        let exTxn = await exchange.connect(user1).cancelOrder(\r\n            signatures[0],\r\n            orders[0],\r\n            { gasLimit: \"100000000\" }\r\n        )\r\n\r\n        await exTxn.wait(1);\r\n\r\n        let wait = () => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                let timeOutId = setTimeout(() => {\r\n                    return resolve(\"Success\")\r\n                }, 15000)\r\n\r\n                socket.on(EVENT_NAME.CANCEL_ORDER, (data) => {\r\n                    clearTimeout(timeOutId)\r\n                    return resolve(\"Success\")\r\n                })\r\n            })\r\n        }\r\n        let res = await wait()\r\n        expect(res).to.equal(\"Success\")\r\n        let order = await OrderCreated.findOne({ id: orderId }).lean();\r\n        let userPositionPost = await UserPosition.findOne({ id: user1.address.toLowerCase(), token: btc.address.toLowerCase() }).lean()\r\n        expect(order).to.be.an('object');\r\n        expect(order?.cancelled).to.equal(true);\r\n        expect(userPositionPost).to.be.an('object');\r\n        expect(userPositionPost?.inOrderBalance).to.equal(Big(userPositionPre?.inOrderBalance! as string).minus(Big(amount).minus(btcAmount)).toString());\r\n\r\n\r\n    })\r\n\r\n    \r\n});\r\n\r\n\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0d553335f2238335f429866eeacaf43a5c619e84","contentHash":"149d3cddaaa5d73b5923d2e05219b0427dfd1cefe2cedb6fb27e8bb6060019f5"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\db.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\db.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":204}},"16":{"start":{"line":17,"column":19},"end":{"line":17,"column":55}},"17":{"start":{"line":18,"column":15},"end":{"line":18,"column":47}},"18":{"start":{"line":19,"column":19},"end":{"line":19,"column":47}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":185}},"20":{"start":{"line":21,"column":8},"end":{"line":21,"column":37}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":8}},"22":{"start":{"line":23,"column":15},"end":{"line":23,"column":26}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":135}},"24":{"start":{"line":26,"column":15},"end":{"line":26,"column":57}},"25":{"start":{"line":27,"column":22},"end":{"line":27,"column":71}},"26":{"start":{"line":28,"column":23},"end":{"line":28,"column":73}},"27":{"start":{"line":29,"column":24},"end":{"line":29,"column":75}},"28":{"start":{"line":30,"column":16},"end":{"line":30,"column":59}},"29":{"start":{"line":31,"column":23},"end":{"line":31,"column":73}},"30":{"start":{"line":32,"column":27},"end":{"line":32,"column":97}},"31":{"start":{"line":33,"column":0},"end":{"line":33,"column":48}},"32":{"start":{"line":34,"column":13},"end":{"line":34,"column":61}},"33":{"start":{"line":35,"column":0},"end":{"line":35,"column":20}},"34":{"start":{"line":36,"column":20},"end":{"line":36,"column":82}},"35":{"start":{"line":37,"column":0},"end":{"line":37,"column":34}},"36":{"start":{"line":38,"column":21},"end":{"line":38,"column":85}},"37":{"start":{"line":39,"column":0},"end":{"line":39,"column":36}},"38":{"start":{"line":40,"column":22},"end":{"line":40,"column":88}},"39":{"start":{"line":41,"column":0},"end":{"line":41,"column":38}},"40":{"start":{"line":42,"column":14},"end":{"line":42,"column":64}},"41":{"start":{"line":43,"column":0},"end":{"line":43,"column":22}},"42":{"start":{"line":44,"column":21},"end":{"line":44,"column":85}},"43":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}},"44":{"start":{"line":47,"column":4},"end":{"line":57,"column":7}},"45":{"start":{"line":48,"column":8},"end":{"line":55,"column":11}},"46":{"start":{"line":51,"column":12},"end":{"line":51,"column":48}},"47":{"start":{"line":54,"column":12},"end":{"line":54,"column":29}},"48":{"start":{"line":56,"column":8},"end":{"line":56,"column":33}},"49":{"start":{"line":59,"column":0},"end":{"line":59,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"connect","decl":{"start":{"line":46,"column":9},"end":{"line":46,"column":16}},"loc":{"start":{"line":46,"column":19},"end":{"line":58,"column":1}},"line":46},"9":{"name":"(anonymous_9)","decl":{"start":{"line":47,"column":43},"end":{"line":47,"column":44}},"loc":{"start":{"line":47,"column":56},"end":{"line":57,"column":5}},"line":47},"10":{"name":"(anonymous_10)","decl":{"start":{"line":50,"column":18},"end":{"line":50,"column":19}},"loc":{"start":{"line":50,"column":24},"end":{"line":52,"column":9}},"line":50},"11":{"name":"(anonymous_11)","decl":{"start":{"line":53,"column":19},"end":{"line":53,"column":20}},"loc":{"start":{"line":53,"column":26},"end":{"line":55,"column":9}},"line":53}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":20,"column":71},"end":{"line":20,"column":180}},"type":"cond-expr","locations":[{"start":{"line":20,"column":160},"end":{"line":20,"column":171}},{"start":{"line":20,"column":174},"end":{"line":20,"column":180}}],"line":20},"9":{"loc":{"start":{"line":20,"column":72},"end":{"line":20,"column":156}},"type":"cond-expr","locations":[{"start":{"line":20,"column":128},"end":{"line":20,"column":134}},{"start":{"line":20,"column":137},"end":{"line":20,"column":156}}],"line":20},"10":{"loc":{"start":{"line":20,"column":72},"end":{"line":20,"column":125}},"type":"binary-expr","locations":[{"start":{"line":20,"column":72},"end":{"line":20,"column":108}},{"start":{"line":20,"column":112},"end":{"line":20,"column":125}}],"line":20}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":8,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":8,"8":0,"9":0,"10":0,"11":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,1,1],"6":[6,2],"7":[8,8],"8":[0,1],"9":[1,0],"10":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/db.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/db.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,wDAAgC;AAEhC,gDAAwB;AACxB,gDAA4C;AAE5C,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAA,MAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,0CAAE,QAAQ,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAE/H,IAAI,CAAC,GAAG,kBAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;AAC1B,CAAC,CAAC,GAAG,EAAE,CAAA;AACP,IAAI,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AAEb,QAAA,gBAAgB,GAAG,kBAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,GAAC,6CAAwD,CAAC,CAAC;AAC3I,4JAA4J;AAE5J,0DAAwC;AACxC,wEAAsD;AACtD,0EAAwD;AACxD,4EAA0D;AAC1D,4DAA0C;AAC1C,0EAAwD;AAKxD,MAAM,kBAAkB,GAAQ,wBAAgB,CAAC,KAAK,CAAC,cAAc,EAAE,sBAAkB,CAAC,CAAC;AA+BJ,gDAAkB;AA9BzG,MAAM,IAAI,GAAG,kBAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,cAAU,CAAC,CAAC;AA8BvC,oBAAI;AA7Bb,MAAM,WAAW,GAAG,kBAAQ,CAAC,KAAK,CAAC,aAAa,EAAE,qBAAiB,CAAC,CAAC;AA6B7C,kCAAW;AA5BnC,MAAM,YAAY,GAAG,kBAAQ,CAAC,KAAK,CAAC,cAAc,EAAE,sBAAkB,CAAC,CAAC;AA4BnC,oCAAY;AA3BjD,MAAM,aAAa,GAAG,kBAAQ,CAAC,KAAK,CAAC,eAAe,EAAE,uBAAmB,CAAC,CAAC;AA2BxB,sCAAa;AA1BhE,MAAM,KAAK,GAAG,kBAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,eAAW,CAAC,CAAC;AA0Be,sBAAK;AAzBvE,MAAM,YAAY,GAAG,kBAAQ,CAAC,KAAK,CAAC,cAAc,EAAE,sBAAkB,CAAC,CAAC;AAyBC,oCAAY;AAnBrF,SAAe,OAAO;;QAElB,kBAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,GAAC,kDAA6D,CAAC;YACrG,0GAA0G;aACrG,IAAI,CAAC,GAAG,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAA;QACvC,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QACpB,CAAC,CACA,CAAC;QACN,wBAAgB,CAAA;IACpB,CAAC;CAAA;AAOc,0BAAO","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nimport path from 'path';\r\nimport { version } from \"./helper/constant\";\r\n\r\nrequire(\"dotenv\").config({ path: path.resolve(process.cwd(), process.env.NODE_ENV?.includes('test') ? \".env.test\" : \".env\") });\r\n\r\nlet a = version.split('.')\r\na.pop()\r\nlet _version = a.join(\"_\")\r\n\r\nexport const backupConnection = mongoose.createConnection(process.env.MONGO_URL1+`backup-zexe-006?retryWrites=true&w=majority`! as string);\r\n// export const backupConnection = mongoose.createConnection(process.env.MONGO_URL1 + `dev-backup-zexe-${_version}?retryWrites=true&w=majority`! as string);\r\n\r\nimport SyncSchema from \"./schemas/Sync\";\r\nimport PairCreatedSchema from \"./schemas/PairCreated\";\r\nimport OrderCreatedSchema from \"./schemas/OrderCreated\";\r\nimport OrderExecutedSchema from \"./schemas/OrderExecuted\";\r\nimport TokenSchema from \"./schemas/Token\";\r\nimport UserPositionSchema from \"./schemas/UserPosition\";\r\n\r\n\r\n\r\n\r\nconst OrderCreatedBackup: any = backupConnection.model(\"OrderCreated\", OrderCreatedSchema);\r\nconst Sync = mongoose.model(\"Sync\", SyncSchema);\r\nconst PairCreated = mongoose.model(\"PairCreated\", PairCreatedSchema);\r\nconst OrderCreated = mongoose.model(\"OrderCreated\", OrderCreatedSchema);\r\nconst OrderExecuted = mongoose.model(\"OrderExecuted\", OrderExecutedSchema);\r\nconst Token = mongoose.model(\"Token\", TokenSchema);\r\nconst UserPosition = mongoose.model(\"UserPosition\", UserPositionSchema);\r\n\r\n\r\n\r\n\r\n\r\nasync function connect() {\r\n\r\n    mongoose.connect(process.env.MONGO_URL+`dev-zexe-arbitrum006?retryWrites=true&w=majority`! as string)\r\n    // mongoose.connect(process.env.MONGO_URL + `dev-zexe-${_version}?retryWrites=true&w=majority`! as string)\r\n        .then(() => {\r\n            console.log(\"MongoDb is connected\")\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        }\r\n        );\r\n    backupConnection\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport { Sync, connect, PairCreated, OrderCreated, OrderExecuted, Token, UserPosition, OrderCreatedBackup };\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7aa5b7581f46e22b399b2728965c780b749cbe2d","contentHash":"141052ff670c6c6baeeb934546f70a4354417e78924e9901ef8ba8501ec2d791"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\helper\\constant.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\helper\\constant.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":308}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":34}},"5":{"start":{"line":8,"column":13},"end":{"line":8,"column":43}},"6":{"start":{"line":9,"column":16},"end":{"line":9,"column":41}},"7":{"start":{"line":10,"column":20},"end":{"line":10,"column":123}},"8":{"start":{"line":11,"column":15},"end":{"line":11,"column":113}},"9":{"start":{"line":12,"column":0},"end":{"line":15,"column":2}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":87}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}},"12":{"start":{"line":18,"column":0},"end":{"line":18,"column":34}},"13":{"start":{"line":19,"column":0},"end":{"line":19,"column":71}},"14":{"start":{"line":20,"column":0},"end":{"line":20,"column":61}},"15":{"start":{"line":22,"column":0},"end":{"line":22,"column":63}},"16":{"start":{"line":23,"column":0},"end":{"line":23,"column":61}},"17":{"start":{"line":24,"column":0},"end":{"line":24,"column":65}},"18":{"start":{"line":25,"column":0},"end":{"line":25,"column":63}},"19":{"start":{"line":26,"column":0},"end":{"line":26,"column":72}},"20":{"start":{"line":27,"column":0},"end":{"line":27,"column":70}},"21":{"start":{"line":28,"column":0},"end":{"line":28,"column":63}},"22":{"start":{"line":30,"column":4},"end":{"line":30,"column":53}},"23":{"start":{"line":33,"column":18},"end":{"line":33,"column":26}},"24":{"start":{"line":34,"column":19},"end":{"line":34,"column":52}},"25":{"start":{"line":35,"column":14},"end":{"line":35,"column":40}},"26":{"start":{"line":36,"column":4},"end":{"line":41,"column":5}},"27":{"start":{"line":37,"column":8},"end":{"line":37,"column":44}},"28":{"start":{"line":39,"column":9},"end":{"line":41,"column":5}},"29":{"start":{"line":40,"column":8},"end":{"line":40,"column":34}},"30":{"start":{"line":42,"column":4},"end":{"line":42,"column":81}},"31":{"start":{"line":44,"column":0},"end":{"line":44,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"getContractAddress","decl":{"start":{"line":29,"column":9},"end":{"line":29,"column":27}},"loc":{"start":{"line":29,"column":34},"end":{"line":31,"column":1}},"line":29},"2":{"name":"getContract","decl":{"start":{"line":32,"column":9},"end":{"line":32,"column":20}},"loc":{"start":{"line":32,"column":27},"end":{"line":43,"column":1}},"line":32}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":36,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":41,"column":5}},{"start":{"line":36,"column":4},"end":{"line":41,"column":5}}],"line":36},"4":{"loc":{"start":{"line":39,"column":9},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":9},"end":{"line":41,"column":5}},{"start":{"line":39,"column":9},"end":{"line":41,"column":5}}],"line":39}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":24,"23":15,"24":15,"25":15,"26":15,"27":3,"28":12,"29":2,"30":15,"31":1},"f":{"0":1,"1":24,"2":15},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[3,12],"4":[2,10]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/helper/constant.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/helper/constant.ts"],"names":[],"mappings":";;;;;;AACA,mCAAgC;AAChC,4CAAoB;AACpB,0CAAuF;AAGvF,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAE,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,mCAAmC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAClH,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,YAAE,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,8BAA8B,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAG3F,QAAA,QAAQ,GAAG;IACpB,KAAK,EAAE,EAAE;IACT,MAAM,EAAE,EAAE;CACb,CAAC;AAEW,QAAA,YAAY,GAAG,WAAW,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/E,QAAA,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AAC5B,QAAA,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC1B,QAAA,eAAe,GAAG,kBAAkB,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,CAAC;AAC/D,QAAA,UAAU,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;AAClE,+DAA+D;AAClD,QAAA,WAAW,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;AACvD,QAAA,UAAU,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;AACrD,QAAA,YAAY,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;AACzD,QAAA,WAAW,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;AACvD,QAAA,YAAY,GAAG,kBAAkB,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAC;AAChE,QAAA,WAAW,GAAG,kBAAkB,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,CAAC;AAC9D,QAAA,WAAW,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;AAEpE,SAAS,kBAAkB,CAAC,IAAY;IACpC,OAAO,WAAW,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAA;AACpD,CAAC;AAED,SAAgB,WAAW,CAAC,IAAY;IACpC,IAAI,OAAO,GAAG,QAAQ,CAAA;IACtB,IAAI,QAAQ,GAAG,IAAA,mBAAW,EAAC,OAAO,CAAC,CAAC;IACpC,IAAI,GAAG,GAAG,IAAA,mBAAW,GAAE,CAAC;IAExB,IAAI,IAAI,IAAI,UAAU,EAAE;QACpB,GAAG,GAAG,IAAA,sBAAc,GAAE,CAAA;KACzB;SACI,IAAI,IAAI,IAAI,OAAO,EAAC;QACrB,GAAG,GAAG,mBAAW,CAAA;KACpB;IAED,OAAO,IAAI,eAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAA;AACvE,CAAC;AAbD,kCAaC;AAED,uCAAuC","sourcesContent":["\r\nimport { ethers } from \"ethers\";\r\nimport fs from \"fs\";\r\nimport { getERC20ABI, getExchangeABI, getProvider, leverageAbi } from \"../utils/utils\";\r\n\r\n\r\nconst Deployments = JSON.parse((fs.readFileSync(process.cwd() + \"/src/deployments/deployments.json\")).toString());\r\nconst Config = JSON.parse((fs.readFileSync(process.cwd() + \"/src/deployments/config.json\")).toString());\r\n\r\n\r\nexport const Decimals = {\r\n    token: 18,\r\n    amount: 18\r\n};\r\n\r\nexport const contractName = Deployments[\"contracts\"][\"Exchange\"][\"constructorArguments\"][0];\r\nexport const version = Config[\"version\"];\r\nexport const latest = Config[\"latest\"];\r\nexport const ExchangeAddress = getContractAddress(\"Exchange\").toLowerCase();\r\nexport const BtcAddress = getContractAddress(\"BTC\").toLowerCase();\r\n//export const BtcAddress = getContractAddress(\"\"); // ethereum\r\nexport const UsdcAddress = getContractAddress(\"USDC\").toLowerCase();\r\nexport const EthAddress = getContractAddress(\"ETH\").toLowerCase();\r\nexport const leverAddress = getContractAddress(\"Lever\").toLowerCase();\r\nexport const ZexeAddress = getContractAddress(\"ZEXE\").toLowerCase();\r\nexport const cUsdcAddress = getContractAddress(\"lUSDC_Market\").toLowerCase();\r\nexport const cBtcAddress = getContractAddress(\"lBTC_Market\").toLowerCase();\r\nexport const LinkAddress = getContractAddress(\"LINK\").toLowerCase();\r\n\r\nfunction getContractAddress(name: string) {\r\n    return Deployments[\"contracts\"][name][\"address\"]\r\n}\r\n\r\nexport function getContract(name: string) {\r\n    let chainId = \"421613\"\r\n    let provider = getProvider(chainId);\r\n    let abi = getERC20ABI();\r\n\r\n    if (name == \"Exchange\") {\r\n        abi = getExchangeABI()\r\n    }\r\n    else if (name == \"Lever\"){\r\n        abi = leverageAbi\r\n    }\r\n\r\n    return new ethers.Contract(getContractAddress(name), abi, provider)\r\n}\r\n\r\n// console.log(getContract(\"Exchange\"))"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"558ded110a2d0787d6fec351d74e18fdb8c7885e","contentHash":"af1f86692e85c00f38ec7a49d2de4ba50894ecb4fd708e72f0952ffc21b295b9"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\utils\\utils.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\utils\\utils.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":246}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":43}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":34}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":51}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":42}},"8":{"start":{"line":11,"column":19},"end":{"line":11,"column":48}},"9":{"start":{"line":13,"column":20},"end":{"line":13,"column":123}},"10":{"start":{"line":14,"column":25},"end":{"line":14,"column":110}},"11":{"start":{"line":15,"column":21},"end":{"line":15,"column":109}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":36}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":54}},"14":{"start":{"line":20,"column":4},"end":{"line":20,"column":46}},"15":{"start":{"line":22,"column":0},"end":{"line":22,"column":40}},"16":{"start":{"line":24,"column":4},"end":{"line":24,"column":35}},"17":{"start":{"line":26,"column":0},"end":{"line":26,"column":34}},"18":{"start":{"line":28,"column":4},"end":{"line":28,"column":129}},"19":{"start":{"line":30,"column":0},"end":{"line":30,"column":32}},"20":{"start":{"line":32,"column":18},"end":{"line":32,"column":58}},"21":{"start":{"line":33,"column":4},"end":{"line":33,"column":17}},"22":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}},"23":{"start":{"line":37,"column":21},"end":{"line":37,"column":100}},"24":{"start":{"line":38,"column":4},"end":{"line":38,"column":20}},"25":{"start":{"line":40,"column":0},"end":{"line":40,"column":34}},"26":{"start":{"line":51,"column":4},"end":{"line":83,"column":5}},"27":{"start":{"line":52,"column":23},"end":{"line":57,"column":9}},"28":{"start":{"line":59,"column":22},"end":{"line":71,"column":9}},"29":{"start":{"line":72,"column":23},"end":{"line":72,"column":103}},"30":{"start":{"line":73,"column":33},"end":{"line":73,"column":102}},"31":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"32":{"start":{"line":76,"column":12},"end":{"line":76,"column":26}},"33":{"start":{"line":78,"column":8},"end":{"line":78,"column":20}},"34":{"start":{"line":81,"column":8},"end":{"line":81,"column":64}},"35":{"start":{"line":82,"column":8},"end":{"line":82,"column":20}},"36":{"start":{"line":85,"column":0},"end":{"line":85,"column":46}},"37":{"start":{"line":88,"column":35},"end":{"line":88,"column":37}},"38":{"start":{"line":89,"column":12},"end":{"line":89,"column":108}},"39":{"start":{"line":90,"column":4},"end":{"line":95,"column":5}},"40":{"start":{"line":91,"column":8},"end":{"line":91,"column":144}},"41":{"start":{"line":94,"column":8},"end":{"line":94,"column":37}},"42":{"start":{"line":96,"column":19},"end":{"line":96,"column":53}},"43":{"start":{"line":98,"column":4},"end":{"line":103,"column":5}},"44":{"start":{"line":99,"column":8},"end":{"line":99,"column":33}},"45":{"start":{"line":101,"column":9},"end":{"line":103,"column":5}},"46":{"start":{"line":102,"column":8},"end":{"line":102,"column":33}},"47":{"start":{"line":104,"column":17},"end":{"line":104,"column":18}},"48":{"start":{"line":105,"column":4},"end":{"line":112,"column":5}},"49":{"start":{"line":105,"column":17},"end":{"line":105,"column":18}},"50":{"start":{"line":106,"column":8},"end":{"line":111,"column":9}},"51":{"start":{"line":107,"column":12},"end":{"line":107,"column":21}},"52":{"start":{"line":110,"column":12},"end":{"line":110,"column":18}},"53":{"start":{"line":113,"column":22},"end":{"line":113,"column":23}},"54":{"start":{"line":114,"column":4},"end":{"line":121,"column":5}},"55":{"start":{"line":114,"column":17},"end":{"line":114,"column":18}},"56":{"start":{"line":115,"column":8},"end":{"line":120,"column":9}},"57":{"start":{"line":116,"column":12},"end":{"line":116,"column":26}},"58":{"start":{"line":119,"column":12},"end":{"line":119,"column":18}},"59":{"start":{"line":122,"column":4},"end":{"line":139,"column":5}},"60":{"start":{"line":123,"column":8},"end":{"line":123,"column":65}},"61":{"start":{"line":125,"column":9},"end":{"line":139,"column":5}},"62":{"start":{"line":126,"column":8},"end":{"line":126,"column":36}},"63":{"start":{"line":129,"column":8},"end":{"line":129,"column":42}},"64":{"start":{"line":130,"column":8},"end":{"line":137,"column":9}},"65":{"start":{"line":130,"column":21},"end":{"line":130,"column":22}},"66":{"start":{"line":131,"column":12},"end":{"line":136,"column":13}},"67":{"start":{"line":132,"column":16},"end":{"line":132,"column":25}},"68":{"start":{"line":134,"column":17},"end":{"line":136,"column":13}},"69":{"start":{"line":135,"column":16},"end":{"line":135,"column":73}},"70":{"start":{"line":138,"column":8},"end":{"line":138,"column":36}},"71":{"start":{"line":141,"column":0},"end":{"line":141,"column":34}},"72":{"start":{"line":142,"column":0},"end":{"line":185,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"getExchangeABI","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":23}},"loc":{"start":{"line":19,"column":26},"end":{"line":21,"column":1}},"line":19},"2":{"name":"getERC20ABI","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":20}},"loc":{"start":{"line":23,"column":23},"end":{"line":25,"column":1}},"line":23},"3":{"name":"parseEther","decl":{"start":{"line":27,"column":9},"end":{"line":27,"column":19}},"loc":{"start":{"line":27,"column":27},"end":{"line":29,"column":1}},"line":27},"4":{"name":"getInterface","decl":{"start":{"line":31,"column":9},"end":{"line":31,"column":21}},"loc":{"start":{"line":31,"column":27},"end":{"line":34,"column":1}},"line":31},"5":{"name":"getProvider","decl":{"start":{"line":36,"column":9},"end":{"line":36,"column":20}},"loc":{"start":{"line":36,"column":30},"end":{"line":39,"column":1}},"line":36},"6":{"name":"validateSignature","decl":{"start":{"line":50,"column":9},"end":{"line":50,"column":26}},"loc":{"start":{"line":50,"column":61},"end":{"line":84,"column":1}},"line":50},"7":{"name":"getDecimals","decl":{"start":{"line":86,"column":9},"end":{"line":86,"column":20}},"loc":{"start":{"line":86,"column":35},"end":{"line":140,"column":1}},"line":86}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},{"start":{"line":75,"column":8},"end":{"line":77,"column":9}}],"line":75},"4":{"loc":{"start":{"line":90,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":5}},{"start":{"line":90,"column":4},"end":{"line":95,"column":5}}],"line":90},"5":{"loc":{"start":{"line":98,"column":4},"end":{"line":103,"column":5}},"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":103,"column":5}},{"start":{"line":98,"column":4},"end":{"line":103,"column":5}}],"line":98},"6":{"loc":{"start":{"line":101,"column":9},"end":{"line":103,"column":5}},"type":"if","locations":[{"start":{"line":101,"column":9},"end":{"line":103,"column":5}},{"start":{"line":101,"column":9},"end":{"line":103,"column":5}}],"line":101},"7":{"loc":{"start":{"line":101,"column":13},"end":{"line":101,"column":64}},"type":"binary-expr","locations":[{"start":{"line":101,"column":13},"end":{"line":101,"column":26}},{"start":{"line":101,"column":30},"end":{"line":101,"column":64}}],"line":101},"8":{"loc":{"start":{"line":105,"column":20},"end":{"line":105,"column":149}},"type":"cond-expr","locations":[{"start":{"line":105,"column":143},"end":{"line":105,"column":145}},{"start":{"line":105,"column":148},"end":{"line":105,"column":149}}],"line":105},"9":{"loc":{"start":{"line":105,"column":20},"end":{"line":105,"column":140}},"type":"binary-expr","locations":[{"start":{"line":105,"column":20},"end":{"line":105,"column":123}},{"start":{"line":105,"column":127},"end":{"line":105,"column":140}}],"line":105},"10":{"loc":{"start":{"line":105,"column":31},"end":{"line":105,"column":112}},"type":"cond-expr","locations":[{"start":{"line":105,"column":94},"end":{"line":105,"column":100}},{"start":{"line":105,"column":103},"end":{"line":105,"column":112}}],"line":105},"11":{"loc":{"start":{"line":105,"column":31},"end":{"line":105,"column":91}},"type":"binary-expr","locations":[{"start":{"line":105,"column":31},"end":{"line":105,"column":74}},{"start":{"line":105,"column":78},"end":{"line":105,"column":91}}],"line":105},"12":{"loc":{"start":{"line":106,"column":8},"end":{"line":111,"column":9}},"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":111,"column":9}},{"start":{"line":106,"column":8},"end":{"line":111,"column":9}}],"line":106},"13":{"loc":{"start":{"line":114,"column":20},"end":{"line":114,"column":149}},"type":"cond-expr","locations":[{"start":{"line":114,"column":143},"end":{"line":114,"column":145}},{"start":{"line":114,"column":148},"end":{"line":114,"column":149}}],"line":114},"14":{"loc":{"start":{"line":114,"column":20},"end":{"line":114,"column":140}},"type":"binary-expr","locations":[{"start":{"line":114,"column":20},"end":{"line":114,"column":123}},{"start":{"line":114,"column":127},"end":{"line":114,"column":140}}],"line":114},"15":{"loc":{"start":{"line":114,"column":31},"end":{"line":114,"column":112}},"type":"cond-expr","locations":[{"start":{"line":114,"column":94},"end":{"line":114,"column":100}},{"start":{"line":114,"column":103},"end":{"line":114,"column":112}}],"line":114},"16":{"loc":{"start":{"line":114,"column":31},"end":{"line":114,"column":91}},"type":"binary-expr","locations":[{"start":{"line":114,"column":31},"end":{"line":114,"column":74}},{"start":{"line":114,"column":78},"end":{"line":114,"column":91}}],"line":114},"17":{"loc":{"start":{"line":115,"column":8},"end":{"line":120,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":120,"column":9}},{"start":{"line":115,"column":8},"end":{"line":120,"column":9}}],"line":115},"18":{"loc":{"start":{"line":122,"column":4},"end":{"line":139,"column":5}},"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":139,"column":5}},{"start":{"line":122,"column":4},"end":{"line":139,"column":5}}],"line":122},"19":{"loc":{"start":{"line":122,"column":8},"end":{"line":122,"column":101}},"type":"binary-expr","locations":[{"start":{"line":122,"column":8},"end":{"line":122,"column":28}},{"start":{"line":122,"column":33},"end":{"line":122,"column":62}},{"start":{"line":122,"column":66},"end":{"line":122,"column":100}}],"line":122},"20":{"loc":{"start":{"line":125,"column":9},"end":{"line":139,"column":5}},"type":"if","locations":[{"start":{"line":125,"column":9},"end":{"line":139,"column":5}},{"start":{"line":125,"column":9},"end":{"line":139,"column":5}}],"line":125},"21":{"loc":{"start":{"line":125,"column":13},"end":{"line":125,"column":99}},"type":"binary-expr","locations":[{"start":{"line":125,"column":13},"end":{"line":125,"column":33}},{"start":{"line":125,"column":37},"end":{"line":125,"column":66}},{"start":{"line":125,"column":70},"end":{"line":125,"column":99}}],"line":125},"22":{"loc":{"start":{"line":130,"column":24},"end":{"line":130,"column":153}},"type":"cond-expr","locations":[{"start":{"line":130,"column":147},"end":{"line":130,"column":149}},{"start":{"line":130,"column":152},"end":{"line":130,"column":153}}],"line":130},"23":{"loc":{"start":{"line":130,"column":24},"end":{"line":130,"column":144}},"type":"binary-expr","locations":[{"start":{"line":130,"column":24},"end":{"line":130,"column":127}},{"start":{"line":130,"column":131},"end":{"line":130,"column":144}}],"line":130},"24":{"loc":{"start":{"line":130,"column":35},"end":{"line":130,"column":116}},"type":"cond-expr","locations":[{"start":{"line":130,"column":98},"end":{"line":130,"column":104}},{"start":{"line":130,"column":107},"end":{"line":130,"column":116}}],"line":130},"25":{"loc":{"start":{"line":130,"column":35},"end":{"line":130,"column":95}},"type":"binary-expr","locations":[{"start":{"line":130,"column":35},"end":{"line":130,"column":78}},{"start":{"line":130,"column":82},"end":{"line":130,"column":95}}],"line":130},"26":{"loc":{"start":{"line":131,"column":12},"end":{"line":136,"column":13}},"type":"if","locations":[{"start":{"line":131,"column":12},"end":{"line":136,"column":13}},{"start":{"line":131,"column":12},"end":{"line":136,"column":13}}],"line":131},"27":{"loc":{"start":{"line":134,"column":17},"end":{"line":136,"column":13}},"type":"if","locations":[{"start":{"line":134,"column":17},"end":{"line":136,"column":13}},{"start":{"line":134,"column":17},"end":{"line":136,"column":13}}],"line":134}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":3,"15":1,"16":15,"17":1,"18":0,"19":1,"20":0,"21":0,"22":1,"23":19,"24":19,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":1},"f":{"0":2,"1":3,"2":15,"3":0,"4":0,"5":19,"6":0,"7":0},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/utils/utils.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/utils/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from \"fs\";\r\nimport { ethers } from \"ethers\";\r\nimport Big from \"big.js\";\r\nimport { getExchangeAddress, getRpcLink } from \"../helper/chain\";\r\nimport { contractName, version } from \"../helper/constant\";\r\n\r\n// const exchangeDeployments = JSON.parse((fs.readFileSync(process.cwd() + \"/abi/Exchange.json\")).toString());\r\nconst Deployments = JSON.parse((fs.readFileSync(process.cwd() + \"/src/deployments/deployments.json\")).toString());\r\n\r\nconst erc20Deployments = JSON.parse((fs.readFileSync(process.cwd() + \"/abi/ERC20.json\")).toString());\r\n\r\nconst MulticallAbi = JSON.parse((fs.readFileSync(process.cwd() + \"/abi/Multical.json\")).toString());\r\n\r\nexport const leverageAbi = Deployments[\"sources\"][\"Lever\"];\r\n\r\n// export const ExchangeAddress1 =  Deployments[\"contracts\"][\"Exchange\"][\"address\"]\r\n\r\nfunction getExchangeABI() {\r\n    return Deployments[\"sources\"][\"Exchange\"];\r\n}\r\n\r\nfunction getERC20ABI() {\r\n    return erc20Deployments[\"abi\"];\r\n}\r\n\r\nfunction parseEther(value: number | string): string {\r\n\r\n    return ethers.utils.parseEther(`${Big(value).div(Big(10).pow(18))}`).toString();\r\n}\r\n\r\nfunction getInterface(abi: object[]): ethers.utils.Interface {\r\n    const iface = new ethers.utils.Interface(abi);\r\n    return iface;\r\n}\r\n\r\nfunction getProvider(chainId: string): ethers.providers.JsonRpcProvider {\r\n    const provider = new ethers.providers.JsonRpcProvider(getRpcLink(chainId));\r\n    return provider;\r\n}\r\n\r\n/**\r\n * @dev This function would validate order signatures\r\n * @notice verify signature\r\n * @param {*} maker (string) should be order creator's address \r\n * @param {*} signature (string)\r\n * @param {*} value (object)\r\n * @param {*} chainId (string) numeric chainId\r\n * @returns digest will be id of order, or false\r\n */\r\nfunction validateSignature(maker: string, signature: string, value: object, chainId: string): (string | null) {\r\n    try {\r\n\r\n        const domain = {\r\n            name: contractName,\r\n            version: version,\r\n            chainId: chainId,\r\n            verifyingContract: getExchangeAddress(chainId),\r\n        };\r\n\r\n        // The named list of all type definitions\r\n        const types = {\r\n            Order: [\r\n                { name: 'maker', type: 'address' },\r\n                { name: 'token0', type: 'address' },\r\n                { name: 'token1', type: 'address' },\r\n                { name: 'amount', type: 'uint256' },\r\n                { name: 'orderType', type: 'uint8' },\r\n                { name: 'salt', type: 'uint32' },\r\n                { name: 'exchangeRate', type: 'uint176' },\r\n                { name: 'borrowLimit', type: 'uint32' },\r\n                { name: 'loops', type: 'uint8' }\r\n            ]\r\n        };\r\n\r\n        const digest: string = ethers.utils._TypedDataEncoder.hash(domain, types, value).toLowerCase();\r\n\r\n        const signatureAddress: string = ethers.utils.recoverAddress(digest, signature).toLowerCase();\r\n        // console.log(maker, signatureAddress)\r\n        if (maker == signatureAddress) {\r\n            return digest;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n    catch (error: any) {\r\n        console.log(\"Error @ validateSignature\", error.message);\r\n        return null\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction getDecimals(exchangeRate: string) {\r\n    let findExchangeRateDecimals: string[] = [];\r\n    let a = Big(exchangeRate).div(Big(10).pow(18)).toString().split(\".\");\r\n\r\n    if (a.length > 1) {\r\n        findExchangeRateDecimals = Big(exchangeRate).div(Big(10).pow(18)).toFixed(20).toString().split(\".\");\r\n    }\r\n    else {\r\n        findExchangeRateDecimals = a;\r\n    }\r\n\r\n    let countInt = findExchangeRateDecimals[0].length;\r\n    let exchangeRateDecimals;\r\n    if (countInt >= 4) {\r\n        exchangeRateDecimals = 2;\r\n    }\r\n    else if (countInt >= 1 && findExchangeRateDecimals[0] != '0') {\r\n        exchangeRateDecimals = 3;\r\n    }\r\n\r\n    let count0 = 0;\r\n\r\n    for (let i = 0; i < findExchangeRateDecimals[1]?.length ?? 0; i++) {\r\n        if (findExchangeRateDecimals[1][i] == '0') {\r\n            count0++;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    let countDecInt = 0;\r\n\r\n    for (let i = 0; i < findExchangeRateDecimals[1]?.length ?? 0; i++) {\r\n        if (findExchangeRateDecimals[1][i] != '0') {\r\n            countDecInt++;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (exchangeRateDecimals && (count0 > exchangeRateDecimals || countDecInt > exchangeRateDecimals)) {\r\n\r\n        return `only ${exchangeRateDecimals} decimal acceptable`;\r\n\r\n    }\r\n    else if (exchangeRateDecimals && count0 < exchangeRateDecimals && count0 < exchangeRateDecimals) {\r\n        return exchangeRateDecimals;\r\n    }\r\n    else {\r\n        exchangeRateDecimals = count0 + 4;\r\n        for (let i = 0; i < findExchangeRateDecimals[1]?.length ?? 0; i++) {\r\n            if (i <= exchangeRateDecimals - 1) {\r\n                continue;\r\n            }\r\n            else if (findExchangeRateDecimals[1][i] != '0') {\r\n                return `only ${exchangeRateDecimals} decimal acceptable`;\r\n            }\r\n\r\n        }\r\n        return exchangeRateDecimals;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const expressMonitorConfig = {\r\n\r\n    title: 'Express Status',  // Default title\r\n    theme: 'default.css',     // Default styles\r\n    path: '/status',\r\n    socketPath: '/socket.io', // In case you use a custom path\r\n    // websocket: existingSocketIoInstance,\r\n    spans: [{\r\n        interval: 1,            // Every second\r\n        retention: 60           // Keep 60 datapoints in memory\r\n    }, {\r\n        interval: 5,            // Every 5 seconds\r\n        retention: 60\r\n    }, {\r\n        interval: 15,           // Every 15 seconds\r\n        retention: 60\r\n    }],\r\n    chartVisibility: {\r\n        cpu: true,\r\n        mem: true,\r\n        load: true,\r\n        eventLoop: true,\r\n        heap: true,\r\n        responseTime: true,\r\n        rps: true,\r\n        statusCodes: true\r\n    },\r\n    healthChecks: [\r\n        {\r\n            protocol: 'http',\r\n            host: 'localhost',\r\n            port: 3010,\r\n            path: '/DB/status',\r\n            headers: {},\r\n        },\r\n        {\r\n            protocol: 'http',\r\n            host: 'localhost',\r\n            port: 3010,\r\n            path: '/DB/fetch/record',\r\n            headers: {},\r\n        },\r\n\r\n    ],\r\n    // ignoreStartsWith: '/pair'\r\n}\r\n\r\n\r\n\r\n\r\nexport { getExchangeABI, getERC20ABI, validateSignature, parseEther, getInterface, getProvider, MulticallAbi, getDecimals };"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2a2cdff1ecbbee4097157b1dca94f6c2975b8612","contentHash":"7dd42dfd0e51804dd12803f8dbb29e9bf419e10243f6c6348fe7f6a24bf89bc9"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\helper\\chain.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\helper\\chain.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":84}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":40}},"3":{"start":{"line":6,"column":14},"end":{"line":12,"column":5}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":24}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"6":{"start":{"line":17,"column":14},"end":{"line":19,"column":5}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":24}},"8":{"start":{"line":22,"column":0},"end":{"line":22,"column":48}},"9":{"start":{"line":24,"column":0},"end":{"line":27,"column":2}}},"fnMap":{"0":{"name":"getRpcLink","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":19}},"loc":{"start":{"line":5,"column":29},"end":{"line":14,"column":1}},"line":5},"1":{"name":"getExchangeAddress","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":27}},"loc":{"start":{"line":16,"column":37},"end":{"line":21,"column":1}},"line":16}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":19,"4":19,"5":1,"6":0,"7":0,"8":1,"9":1},"f":{"0":19,"1":0},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/helper/chain.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/helper/chain.ts"],"names":[],"mappings":";;;AAAA,yCAA6C;AAI7C,SAAgB,UAAU,CAAC,OAAe;IAEtC,IAAI,GAAG,GAAQ;QACX,YAAY,EAAE,2BAA2B;QACzC,qFAAqF;QACrF,kFAAkF;QAClF,QAAQ,EAAE,sEAAsE;QAChF,YAAY,EAAE,4BAA4B;KAC7C,CAAC;IAEF,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC;AACxB,CAAC;AAXD,gCAWC;AAED,SAAgB,kBAAkB,CAAC,OAAe;IAC9C,IAAI,GAAG,GAAQ;QACX,QAAQ,EAAE,0BAAe;KAC5B,CAAA;IAED,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;AAEvB,CAAC;AAPD,gDAOC;AAED,4CAA4C;AAE/B,QAAA,gBAAgB,GAAQ;IACjC,YAAY,EAAE,4CAA4C;IAC1D,QAAQ,EAAE,4CAA4C;CACzD,CAAC","sourcesContent":["import { ExchangeAddress } from \"./constant\";\r\n\r\n\r\n\r\nexport function getRpcLink(chainId: string): string {\r\n\r\n    let map: any = {\r\n        \"1666700000\": \"https://api.s0.b.hmny.io/\",\r\n        // \"421613\": \"https://arbitrum-goerli.infura.io/v3/bb621c9372d048979f8677ba78fe41d7\",\r\n        // \"421613\": \"https://nd-389-970-162.p2pify.com/17b0fbe8312c9ff963057d537b9c7864\",\r\n        \"421613\": \"https://arb-goerli.g.alchemy.com/v2/HyNaane88yHFsK8Yrn4gf2OOzHkd6GAJ\",\r\n        \"1313161555\": \"https://testnet.aurora.dev\"\r\n    };\r\n\r\n    return map[chainId];\r\n}\r\n\r\nexport function getExchangeAddress(chainId: string): string {\r\n    let map: any = {\r\n        \"421613\": ExchangeAddress\r\n    }\r\n\r\n    return map[chainId]\r\n\r\n}\r\n\r\n// console.log(getExchangeAddress(\"421613\"))\r\n\r\nexport const MulticallAddress: any = {\r\n    \"1313161555\": \"0x266CCfe718EAac46ABF8589Dc8833f3A73a0Bd1c\",\r\n    \"421613\": \"0x7dc45EEe67CE15a32ea4ea28e5b2392Ad20F5D6d\"\r\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d23768bf304313f5ed46532775fe40b5e5c3c24b","contentHash":"bd140f055fa35b9c4f3a576a87d60a611ed2dede59ba54c26c3b10ecc2d38147"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\Sync.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\Sync.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":27},"end":{"line":13,"column":24}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/Sync.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/Sync.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,kBAAkB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAE3C,mBAAmB,EAAE,MAAM;IAC3B,kBAAkB,EAAE,MAAM;IAC1B,OAAO,EAAE,MAAM;IACf,QAAQ,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;IACrC,QAAQ,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;CAExC,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAEF,kBAAe,kBAAkB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst exchangeSyncSchema = new mongoose.Schema({\r\n\r\n    blockNumberExchange: Number,\r\n    pageNumberExchange: Number,\r\n    chainId: String,\r\n    makerFee: {type:String, default: '0'},\r\n    takerFee: {type:String, default: '0'}\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\nexport default exchangeSyncSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"de7b66410b2e3a034d1e8a4986fb7bfa9a5d595b","contentHash":"8da8cf6c98f1dcce4262636dcf7f37378cc21297b836d5b581f7ec83a3c670da"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\PairCreated.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\PairCreated.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":26},"end":{"line":19,"column":24}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/PairCreated.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/PairCreated.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,iBAAiB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAC1C,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAChD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,oBAAoB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACtD,cAAc,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAChD,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC9C,SAAS,EAAE,MAAM;IACjB,OAAO,EAAE,MAAM;IACf,MAAM,EAAE,MAAM;IACd,aAAa,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;IAChD,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;CAE3C,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,iBAAiB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst PairCreatedSchema = new mongoose.Schema({\r\n    id: { type: String, required: true, trim: true },\r\n    token0: { type: String, required: true, trim: true },\r\n    token1: { type: String, required: true, trim: true },\r\n    exchangeRateDecimals: { type: String, required: true },\r\n    minToken0Order: { type: String, required: true },\r\n    exchangeRate: { type: String, required: true },\r\n    priceDiff: String,\r\n    chainId: String,\r\n    symbol: String,\r\n    marginEnabled: { type: Boolean, default: false },\r\n    active: { type: Boolean, default: true }\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default PairCreatedSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1215fb2a15bb76854be7827947841c1236858e85","contentHash":"868bcc8c97b3de2682e9235051d7c67fddc15e205cb76886888b757755e5deb1"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\OrderCreated.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\OrderCreated.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":27},"end":{"line":30,"column":24}},"5":{"start":{"line":31,"column":0},"end":{"line":31,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/OrderCreated.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/OrderCreated.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,kBAAkB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAC3C,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAChD,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACvD,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClD,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACnD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClD,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACpD,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC1D,oBAAoB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClE,aAAa,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC3D,OAAO,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE;IACzC,OAAO,EAAE,MAAM;IACf,GAAG,EAAE,MAAM;IACX,SAAS,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;IAC5C,SAAS,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAC;IACvC,WAAW,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;IACxC,KAAK,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;IAClC,iBAAiB,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;IAC9C,iBAAiB,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;IAC9C,UAAU,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAC;CAC1C,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,kBAAkB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst OrderCreatedSchema = new mongoose.Schema({\r\n    id: { type: String, required: true, trim: true },\r\n    signature: { type: String, required: true, trim: true },\r\n    pair: { type: String, required: true, trim: true },\r\n    maker: { type: String, required: true, trim: true },\r\n    token0: { type: String, required: true, trim: true },\r\n    token1: { type: String, required: true, trim: true },\r\n    salt: { type: String, required: true, trim: true },\r\n    amount: { type: String, required: true, trim: true },\r\n    exchangeRate: { type: String, required: true, trim: true },\r\n    exchangeRateDecimals: { type: String, required: true, trim: true },\r\n    balanceAmount: { type: String, required: true, trim: true },\r\n    deleted: { type: Boolean, required: true },\r\n    active: { type: Boolean, required: true },\r\n    chainId: String,\r\n    cid: String,\r\n    cancelled: { type: Boolean, default: false },\r\n    orderType: {type:Number, require: true},\r\n    borrowLimit: {type:String, default: '0'},\r\n    loops: {type:String, default: '0'},\r\n    lastInOrderToken0: {type:String, default: '0'},\r\n    lastInOrderToken1: {type:String, default: '0'},\r\n    fillAmount: {type:String, default: '0'}, \r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default OrderCreatedSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"43c142de871274bc4f708da081bf7951fdbfd287","contentHash":"9116982632c4215793c1c7023c4a0ae0a5fc305e32b9288b96efdb537a6f633c"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\OrderExecuted.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\OrderExecuted.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":28},"end":{"line":20,"column":24}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/OrderExecuted.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/OrderExecuted.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,mBAAmB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAC5C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvC,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC7C,cAAc,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAChD,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAChD,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACnD,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IACxD,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClD,YAAY,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC1D,oBAAoB,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAClE,SAAS,EAAE,EAAC,IAAI,EAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAC;IACvC,OAAO,EAAE,MAAM;IACf,QAAQ,EAAE,MAAM;CAEnB,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,mBAAmB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst OrderExecutedSchema = new mongoose.Schema({\r\n    txnId: { type: String, required: true },\r\n    blockNumber: { type: Number, required: true },\r\n    blockTimestamp: { type: Number, required: true },\r\n    id: { type: String, required: true, trim: true },\r\n    taker: { type: String, required: true, trim: true },\r\n    fillAmount: { type: String, required: true, trim: true },\r\n    pair: { type: String, required: true, trim: true },\r\n    exchangeRate: { type: String, required: true, trim: true },\r\n    exchangeRateDecimals: { type: Number, required: true, trim: true },\r\n    orderType: {type:Number, require: true},\r\n    chainId: String,\r\n    logIndex: Number\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default OrderExecutedSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5e7ed6ec22551d3006e42a412b869b5f8277e00c","contentHash":"c0630133bf6c9e1cfebc7fa2a318172d2cdc021b538523411ba125cea228841a"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\Token.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\Token.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":20},"end":{"line":18,"column":24}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/Token.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/Token.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,WAAW,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAEpC,EAAE,EAAE,MAAM;IACV,IAAI,EAAE,MAAM;IACZ,MAAM,EAAE,MAAM;IACd,KAAK,EAAE,MAAM;IACb,QAAQ,EAAE,MAAM;IAChB,OAAO,EAAE,MAAM;IACf,aAAa,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;IAChD,GAAG,EAAE,MAAM;IACX,cAAc,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE;IACxD,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;CAE3C,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,WAAW,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst TokenSchema = new mongoose.Schema({\r\n\r\n    id: String,\r\n    name: String,\r\n    symbol: String,\r\n    price: Number,\r\n    decimals: Number,\r\n    chainId: String,\r\n    marginEnabled: { type: Boolean, default: false },\r\n    cId: String,\r\n    minTokenAmount: { type: String, default: \"10000000000\" },\r\n    active: { type: Boolean, default: true }\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default TokenSchema;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8a4858e605dc6b83a8914f742503d67c7756efaa","contentHash":"1ce6783cd1f3c35e4eb7fc816600c54b00e346e6123f4c46052fa128049ea44f"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\UserPosition.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\schemas\\UserPosition.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":55}},"4":{"start":{"line":7,"column":27},"end":{"line":12,"column":24}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/UserPosition.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/schemas/UserPosition.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAEhC,MAAM,kBAAkB,GAAG,IAAI,kBAAQ,CAAC,MAAM,CAAC;IAE3C,EAAE,EAAE,MAAM;IACV,KAAK,EAAE,MAAM;IACb,cAAc,EAAE,MAAM;IACtB,OAAO,EAAE,MAAM;CAElB,EACG,EAAE,UAAU,EAAE,IAAI,EAAE,CACvB,CAAC;AAGF,kBAAe,kBAAkB,CAAC","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst UserPositionSchema = new mongoose.Schema({\r\n\r\n    id: String,\r\n    token: String,\r\n    inOrderBalance: String,\r\n    chainId: String\r\n\r\n},\r\n    { timestamps: true }\r\n);\r\n\r\n\r\nexport default UserPositionSchema;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8d9c8b120ae711cf8d7df42147f22646beae19e5","contentHash":"c4d702a7120dc39653ba9500060428a9a3660a446df1462b3afce637fdbcff7f"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\socketIo\\socket.io.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\socketIo\\socket.io.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":40}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":43}},"4":{"start":{"line":10,"column":8},"end":{"line":14,"column":11}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":38}},"6":{"start":{"line":16,"column":8},"end":{"line":19,"column":11}},"7":{"start":{"line":17,"column":12},"end":{"line":17,"column":59}},"8":{"start":{"line":18,"column":12},"end":{"line":18,"column":89}},"9":{"start":{"line":18,"column":42},"end":{"line":18,"column":87}},"10":{"start":{"line":22,"column":8},"end":{"line":22,"column":40}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":38}},"12":{"start":{"line":28,"column":0},"end":{"line":32,"column":2}},"13":{"start":{"line":33,"column":0},"end":{"line":33,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":18},"end":{"line":8,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":17},"end":{"line":20,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":30},"end":{"line":16,"column":31}},"loc":{"start":{"line":16,"column":42},"end":{"line":19,"column":9}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":36},"end":{"line":18,"column":37}},"loc":{"start":{"line":18,"column":42},"end":{"line":18,"column":87}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":28},"end":{"line":23,"column":5}},"line":21},"5":{"name":"(anonymous_5)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":26},"end":{"line":26,"column":5}},"line":24}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/socketIo/socket.io.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/socketIo/socket.io.ts"],"names":[],"mappings":";;;AACA,yCAAgC;AAEhC,MAAM,aAAa;IAAnB;QACY,OAAE,GAAW,IAAI,kBAAM,EAAE,CAAC;IAuBtC,CAAC;IArBU,IAAI,CAAC,MAAW;QACnB,IAAI,CAAC,EAAE,GAAG,IAAI,kBAAM,CAAC,MAAM,EAAE;YACzB,IAAI,EAAE;gBACJ,MAAM,EAAE,GAAG;aACZ;SACF,CAAC,CAAC;QACL,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAE9B,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,MAAW,EAAE,EAAE;YAClC,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;YAC/C,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QAEhF,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,EAAE,CAAC,SAAiB,EAAE,QAAyB;QAClD,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACpC,CAAC;IACM,IAAI,CAAC,SAAiB,EAAE,IAAS;QACpC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;CACJ;AAIa,QAAA,UAAU,GAAI;IACxB,UAAU,EAAE,YAAY;IACxB,YAAY,EAAE,cAAc;IAC5B,YAAY,EAAE,cAAc;CAC/B,CAAA;AAEY,QAAA,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC","sourcesContent":["\r\nimport {Server} from \"socket.io\"\r\n\r\nclass SocketService{\r\n    private io: Server = new Server();\r\n    \r\n    public init(server: any){\r\n        this.io = new Server(server, {\r\n            cors: {\r\n              origin: \"*\"\r\n            }\r\n          });\r\n        console.log(\"WS Initialized\");\r\n\r\n        this.on(\"connection\", (socket: any) => {\r\n            console.log(\"New client connected\", socket.id);\r\n            socket.on(\"disconnect\", () => console.log(\"Client disconnected\",socket.id));\r\n            \r\n        });\r\n    }\r\n\r\n    public on(eventName: string, callback: (x:any) => void){\r\n        this.io.on(eventName, callback);\r\n    }\r\n    public emit(eventName: string, data: any){\r\n        this.io.emit(eventName, data);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const  EVENT_NAME  = {\r\n    PAIR_ORDER: \"PAIR_ORDER\",\r\n    PAIR_HISTORY: \"PAIR_HISTORY\",\r\n    CANCEL_ORDER: \"CANCEL_ORDER\"\r\n}\r\n\r\nexport const socketService = new SocketService();\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d438ed7f48a32b172365065d7ec439c07c958e73","contentHash":"5dc01bc6ac2b38b4b90c3a384236b3284c6a8252847642a04468be0fd473bced"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\unitTest\\BmarginOrderLong.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\unitTest\\BmarginOrderLong.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"15":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"16":{"start":{"line":17,"column":15},"end":{"line":17,"column":30}},"17":{"start":{"line":18,"column":20},"end":{"line":18,"column":57}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}},"19":{"start":{"line":20,"column":17},"end":{"line":20,"column":34}},"20":{"start":{"line":21,"column":17},"end":{"line":21,"column":51}},"21":{"start":{"line":22,"column":20},"end":{"line":22,"column":55}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":44}},"23":{"start":{"line":24,"column":16},"end":{"line":24,"column":45}},"24":{"start":{"line":25,"column":27},"end":{"line":25,"column":54}},"25":{"start":{"line":26,"column":15},"end":{"line":26,"column":47}},"26":{"start":{"line":27,"column":13},"end":{"line":27,"column":32}},"27":{"start":{"line":28,"column":19},"end":{"line":28,"column":51}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":185}},"29":{"start":{"line":30,"column":15},"end":{"line":30,"column":66}},"30":{"start":{"line":31,"column":0},"end":{"line":191,"column":4}},"31":{"start":{"line":31,"column":93},"end":{"line":191,"column":2}},"32":{"start":{"line":33,"column":18},"end":{"line":33,"column":26}},"33":{"start":{"line":34,"column":19},"end":{"line":34,"column":52}},"34":{"start":{"line":35,"column":19},"end":{"line":35,"column":58}},"35":{"start":{"line":36,"column":14},"end":{"line":36,"column":48}},"36":{"start":{"line":37,"column":15},"end":{"line":37,"column":50}},"37":{"start":{"line":38,"column":16},"end":{"line":38,"column":52}},"38":{"start":{"line":39,"column":16},"end":{"line":39,"column":59}},"39":{"start":{"line":40,"column":15},"end":{"line":40,"column":57}},"40":{"start":{"line":41,"column":16},"end":{"line":41,"column":86}},"41":{"start":{"line":42,"column":16},"end":{"line":42,"column":86}},"42":{"start":{"line":43,"column":21},"end":{"line":43,"column":23}},"43":{"start":{"line":44,"column":17},"end":{"line":44,"column":19}},"44":{"start":{"line":45,"column":23},"end":{"line":45,"column":25}},"45":{"start":{"line":46,"column":23},"end":{"line":46,"column":75}},"46":{"start":{"line":47,"column":15},"end":{"line":47,"column":50}},"47":{"start":{"line":48,"column":17},"end":{"line":48,"column":65}},"48":{"start":{"line":49,"column":16},"end":{"line":49,"column":17}},"49":{"start":{"line":50,"column":20},"end":{"line":50,"column":21}},"50":{"start":{"line":51,"column":4},"end":{"line":63,"column":8}},"51":{"start":{"line":51,"column":35},"end":{"line":63,"column":6}},"52":{"start":{"line":52,"column":26},"end":{"line":52,"column":66}},"53":{"start":{"line":53,"column":27},"end":{"line":53,"column":71}},"54":{"start":{"line":55,"column":8},"end":{"line":55,"column":91}},"55":{"start":{"line":56,"column":8},"end":{"line":56,"column":93}},"56":{"start":{"line":58,"column":8},"end":{"line":58,"column":94}},"57":{"start":{"line":59,"column":8},"end":{"line":59,"column":96}},"58":{"start":{"line":61,"column":8},"end":{"line":61,"column":124}},"59":{"start":{"line":62,"column":8},"end":{"line":62,"column":125}},"60":{"start":{"line":64,"column":4},"end":{"line":126,"column":8}},"61":{"start":{"line":64,"column":57},"end":{"line":126,"column":6}},"62":{"start":{"line":65,"column":23},"end":{"line":70,"column":9}},"63":{"start":{"line":72,"column":22},"end":{"line":84,"column":9}},"64":{"start":{"line":85,"column":22},"end":{"line":95,"column":9}},"65":{"start":{"line":97,"column":8},"end":{"line":97,"column":27}},"66":{"start":{"line":99,"column":32},"end":{"line":99,"column":80}},"67":{"start":{"line":100,"column":8},"end":{"line":100,"column":41}},"68":{"start":{"line":101,"column":8},"end":{"line":103,"column":11}},"69":{"start":{"line":104,"column":18},"end":{"line":120,"column":10}},"70":{"start":{"line":121,"column":8},"end":{"line":121,"column":30}},"71":{"start":{"line":122,"column":8},"end":{"line":122,"column":52}},"72":{"start":{"line":123,"column":8},"end":{"line":123,"column":62}},"73":{"start":{"line":124,"column":8},"end":{"line":124,"column":56}},"74":{"start":{"line":125,"column":8},"end":{"line":125,"column":90}},"75":{"start":{"line":127,"column":4},"end":{"line":134,"column":8}},"76":{"start":{"line":127,"column":48},"end":{"line":134,"column":6}},"77":{"start":{"line":128,"column":19},"end":{"line":128,"column":87}},"78":{"start":{"line":129,"column":8},"end":{"line":129,"column":52}},"79":{"start":{"line":130,"column":8},"end":{"line":130,"column":57}},"80":{"start":{"line":131,"column":8},"end":{"line":131,"column":77}},"81":{"start":{"line":132,"column":8},"end":{"line":132,"column":63}},"82":{"start":{"line":133,"column":8},"end":{"line":133,"column":32}},"83":{"start":{"line":135,"column":4},"end":{"line":169,"column":8}},"84":{"start":{"line":135,"column":79},"end":{"line":169,"column":6}},"85":{"start":{"line":136,"column":33},"end":{"line":136,"column":61}},"86":{"start":{"line":137,"column":33},"end":{"line":137,"column":61}},"87":{"start":{"line":138,"column":34},"end":{"line":138,"column":63}},"88":{"start":{"line":139,"column":34},"end":{"line":139,"column":63}},"89":{"start":{"line":140,"column":22},"end":{"line":140,"column":123}},"90":{"start":{"line":141,"column":8},"end":{"line":141,"column":51}},"91":{"start":{"line":142,"column":8},"end":{"line":142,"column":51}},"92":{"start":{"line":143,"column":8},"end":{"line":143,"column":52}},"93":{"start":{"line":144,"column":8},"end":{"line":144,"column":52}},"94":{"start":{"line":146,"column":26},"end":{"line":146,"column":74}},"95":{"start":{"line":147,"column":8},"end":{"line":147,"column":79}},"96":{"start":{"line":148,"column":8},"end":{"line":148,"column":79}},"97":{"start":{"line":149,"column":20},"end":{"line":149,"column":138}},"98":{"start":{"line":150,"column":8},"end":{"line":150,"column":28}},"99":{"start":{"line":151,"column":34},"end":{"line":151,"column":62}},"100":{"start":{"line":152,"column":35},"end":{"line":152,"column":64}},"101":{"start":{"line":153,"column":35},"end":{"line":153,"column":64}},"102":{"start":{"line":154,"column":34},"end":{"line":154,"column":62}},"103":{"start":{"line":155,"column":23},"end":{"line":155,"column":128}},"104":{"start":{"line":156,"column":8},"end":{"line":156,"column":53}},"105":{"start":{"line":157,"column":8},"end":{"line":157,"column":54}},"106":{"start":{"line":158,"column":8},"end":{"line":158,"column":54}},"107":{"start":{"line":159,"column":8},"end":{"line":159,"column":53}},"108":{"start":{"line":161,"column":18},"end":{"line":161,"column":50}},"109":{"start":{"line":162,"column":29},"end":{"line":162,"column":133}},"110":{"start":{"line":163,"column":29},"end":{"line":163,"column":137}},"111":{"start":{"line":164,"column":8},"end":{"line":164,"column":153}},"112":{"start":{"line":165,"column":8},"end":{"line":168,"column":66}},"113":{"start":{"line":170,"column":4},"end":{"line":190,"column":8}},"114":{"start":{"line":170,"column":34},"end":{"line":190,"column":6}},"115":{"start":{"line":171,"column":20},"end":{"line":171,"column":114}},"116":{"start":{"line":172,"column":8},"end":{"line":172,"column":28}},"117":{"start":{"line":173,"column":19},"end":{"line":183,"column":9}},"118":{"start":{"line":174,"column":12},"end":{"line":182,"column":15}},"119":{"start":{"line":175,"column":32},"end":{"line":177,"column":25}},"120":{"start":{"line":176,"column":20},"end":{"line":176,"column":46}},"121":{"start":{"line":178,"column":16},"end":{"line":181,"column":19}},"122":{"start":{"line":179,"column":20},"end":{"line":179,"column":44}},"123":{"start":{"line":180,"column":20},"end":{"line":180,"column":46}},"124":{"start":{"line":184,"column":18},"end":{"line":184,"column":30}},"125":{"start":{"line":185,"column":8},"end":{"line":185,"column":52}},"126":{"start":{"line":186,"column":19},"end":{"line":186,"column":87}},"127":{"start":{"line":187,"column":8},"end":{"line":187,"column":52}},"128":{"start":{"line":188,"column":8},"end":{"line":188,"column":48}},"129":{"start":{"line":189,"column":8},"end":{"line":189,"column":58}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":31,"column":87},"end":{"line":31,"column":88}},"loc":{"start":{"line":31,"column":93},"end":{"line":191,"column":2}},"line":31},"9":{"name":"(anonymous_9)","decl":{"start":{"line":31,"column":127},"end":{"line":31,"column":128}},"loc":{"start":{"line":31,"column":140},"end":{"line":191,"column":1}},"line":31},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":29},"end":{"line":51,"column":30}},"loc":{"start":{"line":51,"column":35},"end":{"line":63,"column":6}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":51,"column":69},"end":{"line":51,"column":70}},"loc":{"start":{"line":51,"column":82},"end":{"line":63,"column":5}},"line":51},"12":{"name":"(anonymous_12)","decl":{"start":{"line":64,"column":51},"end":{"line":64,"column":52}},"loc":{"start":{"line":64,"column":57},"end":{"line":126,"column":6}},"line":64},"13":{"name":"(anonymous_13)","decl":{"start":{"line":64,"column":91},"end":{"line":64,"column":92}},"loc":{"start":{"line":64,"column":104},"end":{"line":126,"column":5}},"line":64},"14":{"name":"(anonymous_14)","decl":{"start":{"line":127,"column":42},"end":{"line":127,"column":43}},"loc":{"start":{"line":127,"column":48},"end":{"line":134,"column":6}},"line":127},"15":{"name":"(anonymous_15)","decl":{"start":{"line":127,"column":82},"end":{"line":127,"column":83}},"loc":{"start":{"line":127,"column":95},"end":{"line":134,"column":5}},"line":127},"16":{"name":"(anonymous_16)","decl":{"start":{"line":135,"column":73},"end":{"line":135,"column":74}},"loc":{"start":{"line":135,"column":79},"end":{"line":169,"column":6}},"line":135},"17":{"name":"(anonymous_17)","decl":{"start":{"line":135,"column":113},"end":{"line":135,"column":114}},"loc":{"start":{"line":135,"column":126},"end":{"line":169,"column":5}},"line":135},"18":{"name":"(anonymous_18)","decl":{"start":{"line":170,"column":28},"end":{"line":170,"column":29}},"loc":{"start":{"line":170,"column":34},"end":{"line":190,"column":6}},"line":170},"19":{"name":"(anonymous_19)","decl":{"start":{"line":170,"column":68},"end":{"line":170,"column":69}},"loc":{"start":{"line":170,"column":81},"end":{"line":190,"column":5}},"line":170},"20":{"name":"(anonymous_20)","decl":{"start":{"line":173,"column":19},"end":{"line":173,"column":20}},"loc":{"start":{"line":173,"column":25},"end":{"line":183,"column":9}},"line":173},"21":{"name":"(anonymous_21)","decl":{"start":{"line":174,"column":31},"end":{"line":174,"column":32}},"loc":{"start":{"line":174,"column":52},"end":{"line":182,"column":13}},"line":174},"22":{"name":"(anonymous_22)","decl":{"start":{"line":175,"column":43},"end":{"line":175,"column":44}},"loc":{"start":{"line":175,"column":49},"end":{"line":177,"column":17}},"line":175},"23":{"name":"(anonymous_23)","decl":{"start":{"line":178,"column":63},"end":{"line":178,"column":64}},"loc":{"start":{"line":178,"column":73},"end":{"line":181,"column":17}},"line":178}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":29,"column":71},"end":{"line":29,"column":180}},"type":"cond-expr","locations":[{"start":{"line":29,"column":160},"end":{"line":29,"column":171}},{"start":{"line":29,"column":174},"end":{"line":29,"column":180}}],"line":29},"9":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":156}},"type":"cond-expr","locations":[{"start":{"line":29,"column":128},"end":{"line":29,"column":134}},{"start":{"line":29,"column":137},"end":{"line":29,"column":156}}],"line":29},"10":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":125}},"type":"binary-expr","locations":[{"start":{"line":29,"column":72},"end":{"line":29,"column":108}},{"start":{"line":29,"column":112},"end":{"line":29,"column":125}}],"line":29},"11":{"loc":{"start":{"line":162,"column":51},"end":{"line":162,"column":105}},"type":"cond-expr","locations":[{"start":{"line":162,"column":84},"end":{"line":162,"column":90}},{"start":{"line":162,"column":93},"end":{"line":162,"column":105}}],"line":162},"12":{"loc":{"start":{"line":162,"column":51},"end":{"line":162,"column":81}},"type":"binary-expr","locations":[{"start":{"line":162,"column":51},"end":{"line":162,"column":63}},{"start":{"line":162,"column":67},"end":{"line":162,"column":81}}],"line":162}},"s":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0},"f":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":1,"7":3,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"0":[1,1,1],"1":[0,0],"2":[1,1],"3":[1,0],"4":[1,1],"5":[1,1,1],"6":[0,3],"7":[3,3],"8":[0,1],"9":[0,1],"10":[1,1],"11":[0,0],"12":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/unitTest/BmarginOrderLong.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/unitTest/BmarginOrderLong.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,+BAAoC;AACpC,+BAA8B;AAC9B,0DAAiC;AACjC,IAAA,UAAG,EAAC,mBAAQ,CAAC,CAAC;AACd,mCAAgC;AAChC,oDAAyB;AACzB,wDAAsD;AACtD,6CAAsG;AACtG,8CAAwD;AACxD,uDAAsC;AACtC,gDAAwB;AACxB,iCAAuD;AAEvD,oDAA2E;AAI3E,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAA,MAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,0CAAE,QAAQ,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAI/H,MAAM,MAAM,GAAG,IAAA,qBAAE,EAAC,uBAAuB,CAAC,CAAC;AAE3C,QAAQ,CAAC,4EAA4E,EAAE,GAAS,EAAE;IAE9F,eAAe;IACf,IAAI,OAAO,GAAG,QAAQ,CAAA;IACtB,IAAI,QAAQ,GAAG,IAAA,mBAAW,EAAC,OAAO,CAAC,CAAC;IAEpC,IAAI,QAAQ,GAAG,IAAA,sBAAW,EAAC,UAAU,CAAC,CAAA;IACtC,IAAI,GAAG,GAAG,IAAA,sBAAW,EAAC,KAAK,CAAC,CAAA;IAC5B,IAAI,IAAI,GAAG,IAAA,sBAAW,EAAC,MAAM,CAAC,CAAA;IAC9B,IAAI,KAAK,GAAG,IAAA,sBAAW,EAAC,OAAO,CAAC,CAAA;IAChC,IAAI,KAAK,GAAG,IAAA,sBAAW,EAAC,cAAc,CAAC,CAAA;IACvC,IAAI,IAAI,GAAG,IAAA,sBAAW,EAAC,aAAa,CAAC,CAAA;IACrC,IAAI,KAAK,GAAG,IAAI,eAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,YAAuB,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG;IACzF,IAAI,KAAK,GAAG,IAAI,eAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,YAAuB,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG;IAGzF,IAAI,UAAU,GAAU,EAAE,CAAC;IAC3B,IAAI,MAAM,GAAU,EAAE,CAAC;IACvB,IAAI,YAAY,GAAU,EAAE,CAAA;IAC5B,IAAI,YAAY,GAAG,eAAM,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;IAE/D,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC;IAC/C,IAAI,MAAM,GAAG,eAAM,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IACrD,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,SAAS,GAAG,CAAC,CAAA,CAAC,OAAO;IAEzB,EAAE,CAAC,oBAAoB,EAAE,GAAS,EAAE;QAEhC,MAAM,SAAS,GAAG,eAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAClD,MAAM,UAAU,GAAG,eAAM,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAEvD,OAAO;QAEP,MAAM,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;QACnF,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;QAErF,YAAY;QACZ,MAAM,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;QACtF,MAAM,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;QAGxF,YAAY;QAEZ,MAAM,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,eAAM,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;QAC3G,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,eAAM,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;IAEhH,CAAC,CAAA,CAAC,CAAA;IAIF,EAAE,CAAC,0CAA0C,EAAE,GAAS,EAAE;QACtD,MAAM,MAAM,GAAG;YACX,IAAI,EAAE,uBAAY;YAClB,OAAO,EAAE,kBAAO;YAChB,OAAO,EAAE,OAAO,CAAC,QAAQ,EAAE;YAC3B,iBAAiB,EAAE,IAAA,0BAAkB,EAAC,OAAO,CAAC;SACjD,CAAC;QAEF,yCAAyC;QACzC,MAAM,KAAK,GAAG;YACV,KAAK,EAAE;gBACH,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE;gBAClC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE;gBACnC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE;gBACnC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE;gBACnC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE;gBACpC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE;gBAChC,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,SAAS,EAAE;gBACzC,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACvC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;aACnC;SACJ,CAAC;QAEF,MAAM,KAAK,GAAG;YACV,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE;YAClC,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE;YACjC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;YAClC,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,SAAS;YACpB,IAAI,EAAE,IAAI;YACV,YAAY,EAAE,YAAY;YAC1B,WAAW,EAAE,IAAA,gBAAG,EAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAA,gBAAG,EAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;YACvD,KAAK,EAAE,KAAK;SACf,CAAC;QACF,mBAAmB;QAGnB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnB,kBAAkB;QAClB,MAAM,eAAe,GAAG,MAAM,KAAK,CAAC,cAAc,CAC9C,MAAM,EACN,KAAK,EACL,KAAK,CACR,CAAC;QACF,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC;YACR,KAAK,EAAE,eAAe;SACzB,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,MAAM,IAAA,cAAO,EAAC,uBAAuB,CAAC;aAC3C,IAAI,CAAC,MAAM,kBAAO,eAAe,CAAC;aAClC,IAAI,CACD;YACI,MAAM,EAAE;gBACJ,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE;gBACpC,QAAQ,EAAE,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE;gBACnC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;gBACpC,QAAQ,EAAE,MAAM;gBAChB,WAAW,EAAE,SAAS;gBACtB,MAAM,EAAE,IAAI;gBACZ,cAAc,EAAE,YAAY;gBAC5B,WAAW,EAAE,IAAA,gBAAG,EAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAA,gBAAG,EAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;gBACvD,KAAK,EAAE,KAAK;aAEf;YACD,WAAW,EAAE,eAAe;YAC5B,SAAS,EAAE,OAAO;SACrB,CACJ,CAAC;QACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QACrB,IAAA,aAAM,EAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAChC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,4BAA4B,CAAC,CAAC;IAE1E,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,GAAS,EAAE;QAE7C,IAAI,IAAI,GAAG,MAAM,iBAAY,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAqB,CAAC;QAC9F,IAAA,aAAM,EAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAA,aAAM,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACrC,IAAA,aAAM,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;QACzD,IAAA,aAAM,EAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;QAC1C,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAC3B,CAAC,CAAA,CAAC,CAAA;IAEF,EAAE,CAAC,gEAAgE,EAAE,GAAS,EAAE;QAC5E,IAAI,kBAAkB,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,kBAAkB,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACtD,IAAI,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,OAAO,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,kBAAkB,EAAE,kBAAkB,EAAE,mBAAmB,EAAE,mBAAmB,CAAC,CAAC,CAAA;QACnH,kBAAkB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC3C,kBAAkB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QAC1C,mBAAmB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QAC3C,mBAAmB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;QAC3C,kCAAkC;QAClC,MAAM,SAAS,GAAG,eAAM,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC1D,MAAM,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QACvE,MAAM,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAEvE,IAAI,KAAK,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,oBAAoB,CAC1D,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EACf,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EACX,SAAS,EACT,EAAE,QAAQ,EAAE,WAAW,EAAE,CAC5B,CAAC;QAEF,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACnB,IAAI,mBAAmB,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvD,IAAI,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACzD,IAAI,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACzD,IAAI,mBAAmB,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAEvD,IAAI,QAAQ,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,mBAAmB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,mBAAmB,CAAC,CAAC,CAAC;QACzH,mBAAmB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC7C,oBAAoB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC9C,oBAAoB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC9C,mBAAmB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QAC7C,gDAAgD;QAEhD,IAAI,GAAG,GAAG,MAAM,SAAI,CAAC,OAAO,EAAE,CAAC,IAAI,EAAU,CAAC;QAC9C,IAAI,cAAc,GAAG,IAAA,gBAAG,EAAC,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAEnE,IAAI,cAAc,GAAG,IAAA,gBAAG,EAAC,IAAA,gBAAG,EAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAA,gBAAG,EAAC,SAAS,CAAC,CAAC,CAAC;QAE5E,IAAA,aAAM,EAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAA,kBAAU,EAAC,IAAA,gBAAG,EAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACtG,IAAA,aAAM,EAAC,oBAAoB,CAAC,CAAC,EAAE,CAAC,KAAK,CACjC,IAAA,kBAAU,EACN,IAAA,gBAAG,EAAC,mBAAmB,CAAC;aACnB,IAAI,CACD,IAAA,gBAAG,EAAC,SAAS,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC;aAC/B,KAAK,CAAC,YAAY,CAAC;aACnB,GAAG,CAAC,IAAA,gBAAG,EAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;IAE3D,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,GAAS,EAAE;QAI/B,IAAI,KAAK,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,WAAW,CACjD,UAAU,CAAC,CAAC,CAAC,EACb,MAAM,CAAC,CAAC,CAAC,EACT,EAAE,QAAQ,EAAE,WAAW,EAAE,CAC5B,CAAA;QACD,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEpB,IAAI,IAAI,GAAG,GAAG,EAAE;YACZ,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBAEnC,IAAI,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE;oBAC5B,OAAO,OAAO,CAAC,SAAS,CAAC,CAAA;gBAC7B,CAAC,EAAE,KAAK,CAAC,CAAA;gBAET,MAAM,CAAC,EAAE,CAAC,sBAAU,CAAC,YAAY,EAAE,CAAC,IAAI,EAAE,EAAE;oBACxC,YAAY,CAAC,SAAS,CAAC,CAAA;oBACvB,OAAO,OAAO,CAAC,SAAS,CAAC,CAAA;gBAC7B,CAAC,CAAC,CAAA;YACN,CAAC,CAAC,CAAA;QACN,CAAC,CAAA;QACD,IAAI,GAAG,GAAG,MAAM,IAAI,EAAE,CAAA;QACtB,IAAA,aAAM,EAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;QAC/B,IAAI,IAAI,GAAG,MAAM,iBAAY,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAqB,CAAC;QAC9F,IAAA,aAAM,EAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAA;QAC/B,IAAA,aAAM,EAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QAC5B,IAAA,aAAM,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IAEzC,CAAC,CAAA,CAAC,CAAA;AAEN,CAAC,CAAA,CAAC,CAAC","sourcesContent":["\r\nimport { use, request } from \"chai\";\r\nimport { expect } from \"chai\";\r\nimport chaiHttp from \"chai-http\";\r\nuse(chaiHttp);\r\nimport { ethers } from \"ethers\";\r\nimport Big from \"big.js\";\r\nimport { EVENT_NAME } from \"../../socketIo/socket.io\";\r\nimport { getERC20ABI, getExchangeABI, getProvider, leverageAbi, parseEther } from \"../../utils/utils\";\r\nimport { getExchangeAddress } from \"../../helper/chain\";\r\nimport { io } from \"socket.io-client\";\r\nimport path from \"path\";\r\nimport { connect, OrderCreated, Sync } from \"../../db\";\r\nimport { ifOrderCreated } from \"../../helper/interface\";\r\nimport { contractName, getContract, version } from \"../../helper/constant\";\r\n\r\n\r\n\r\nrequire(\"dotenv\").config({ path: path.resolve(process.cwd(), process.env.NODE_ENV?.includes('test') ? \".env.test\" : \".env\") });\r\n\r\n\r\n\r\nconst socket = io(\"http://localhost:3010\");\r\n\r\ndescribe(\"Margin Order Long => Mint token, create order, execute order, cancel order\", async () => {\r\n\r\n    // requirements\r\n    let chainId = \"421613\"\r\n    let provider = getProvider(chainId);\r\n\r\n    let exchange = getContract(\"Exchange\")\r\n    let btc = getContract(\"BTC\")\r\n    let usdc = getContract(\"USDC\")\r\n    let lever = getContract(\"Lever\")\r\n    let cUsdc = getContract(\"lUSDC_Market\")\r\n    let cBtc = getContract(\"lBTC_Market\")\r\n    let user1 = new ethers.Wallet(process.env.PRIVATE_KEY1! as string).connect(provider); //2\r\n    let user2 = new ethers.Wallet(process.env.PRIVATE_KEY2! as string).connect(provider); //1\r\n\r\n\r\n    let signatures: any[] = [];\r\n    let orders: any[] = [];\r\n    let orderCreated: any[] = []\r\n    let exchangeRate = ethers.utils.parseEther('20000').toString();\r\n\r\n    let salt = Math.floor(Math.random() * 9000000);\r\n    let amount = ethers.utils.parseEther('1').toString();\r\n    let loops = 5;\r\n    let orderType = 2 // long\r\n   \r\n    it(\"make market liquid\", async () => {\r\n\r\n        const btcAmount = ethers.utils.parseEther('1000');\r\n        const usdcAmount = ethers.utils.parseEther('20000000');\r\n\r\n        // mint\r\n\r\n        await btc.connect(user1).mint(user1.address, btcAmount, { gasLimit: \"100000000\" });\r\n        await usdc.connect(user2).mint(user2.address, usdcAmount, { gasLimit: \"100000000\" });\r\n\r\n        // to market\r\n        await exchange.connect(user1).mint(btc.address, btcAmount, { gasLimit: \"100000000\" });\r\n        await exchange.connect(user2).mint(usdc.address, usdcAmount, { gasLimit: \"100000000\" });\r\n\r\n\r\n        // Approval \r\n\r\n        await btc.connect(user1).approve(exchange.address, ethers.constants.MaxUint256, { gasLimit: \"100000000\" });\r\n        await usdc.connect(user2).approve(exchange.address, ethers.constants.MaxUint256, { gasLimit: \"100000000\" });\r\n        \r\n    })\r\n\r\n\r\n\r\n    it(`user1 create margin order 1 btc @ 20000}`, async () => {\r\n        const domain = {\r\n            name: contractName,\r\n            version: version,\r\n            chainId: chainId.toString(),\r\n            verifyingContract: getExchangeAddress(chainId),\r\n        };\r\n\r\n        // The named list of all type definitions\r\n        const types = {\r\n            Order: [\r\n                { name: 'maker', type: 'address' },\r\n                { name: 'token0', type: 'address' },\r\n                { name: 'token1', type: 'address' },\r\n                { name: 'amount', type: 'uint256' },\r\n                { name: 'orderType', type: 'uint8' },\r\n                { name: 'salt', type: 'uint32' },\r\n                { name: 'exchangeRate', type: 'uint176' },\r\n                { name: 'borrowLimit', type: 'uint32' },\r\n                { name: 'loops', type: 'uint8' }\r\n            ]\r\n        };\r\n\r\n        const value = {\r\n            maker: user1.address.toLowerCase(),\r\n            token0: btc.address.toLowerCase(),\r\n            token1: usdc.address.toLowerCase(),\r\n            amount: amount,\r\n            orderType: orderType,\r\n            salt: salt,\r\n            exchangeRate: exchangeRate,\r\n            borrowLimit: Big(0.75).times(Big(10).pow(6)).toNumber(),\r\n            loops: loops\r\n        };\r\n        // The data to sign\r\n\r\n\r\n        orders.push(value);\r\n        // sign typed data\r\n        const storedSignature = await user1._signTypedData(\r\n            domain,\r\n            types,\r\n            value\r\n        );\r\n        signatures.push(storedSignature);\r\n        console.log([\r\n            value, storedSignature\r\n        ]);\r\n        let res = await request(\"http://localhost:3010\")\r\n            .post(`/v/${version}/order/create`)\r\n            .send(\r\n                {\r\n                    \"data\": {\r\n                        \"maker\": user1.address.toLowerCase(),\r\n                        \"token0\": btc.address.toLowerCase(),\r\n                        \"token1\": usdc.address.toLowerCase(),\r\n                        \"amount\": amount,\r\n                        \"orderType\": orderType,\r\n                        \"salt\": salt,\r\n                        \"exchangeRate\": exchangeRate,\r\n                        borrowLimit: Big(0.75).times(Big(10).pow(6)).toNumber(),\r\n                        loops: loops\r\n\r\n                    },\r\n                    \"signature\": storedSignature,\r\n                    \"chainId\": chainId\r\n                }\r\n            );\r\n        console.log(res.body)\r\n        expect(res).to.have.status(201);\r\n        expect(res.body.status).to.be.equal(true);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.message).to.have.string('Order created successfully');\r\n\r\n    });\r\n\r\n    it(`find created order in data base`, async () => {\r\n\r\n        let data = await OrderCreated.findOne({ signature: signatures[0] }).lean()! as ifOrderCreated;\r\n        expect(data).to.be.an('object');\r\n        expect(data.amount).to.equal(amount);\r\n        expect(data.maker).to.equal(user1.address.toLowerCase());\r\n        expect(Number(data.loops)).to.equal(loops)\r\n        orderCreated.push(data)\r\n    })\r\n\r\n    it(`user1 sell usdc got from market to user2 and got 2 btc @ 20000`, async () => {\r\n        let user1BtcBalancePre = btc.balanceOf(user1.address);\r\n        let user2BtcBalancePre = btc.balanceOf(user2.address);\r\n        let user2UsdcBalancePre = usdc.balanceOf(user2.address);\r\n        let user1UsdcBalancePre = usdc.balanceOf(user1.address);\r\n        let promise = await Promise.all([user1BtcBalancePre, user2BtcBalancePre, user2UsdcBalancePre, user1UsdcBalancePre])\r\n        user1BtcBalancePre = promise[0].toString();\r\n        user2BtcBalancePre = promise[1].toString()\r\n        user2UsdcBalancePre = promise[2].toString()\r\n        user1UsdcBalancePre = promise[3].toString()\r\n        // console.log(user1BtcBalancePre)\r\n        const btcAmount = ethers.utils.parseEther('2').toString();\r\n        await lever.connect(user1).enterMarkets([cBtc.address, cUsdc.address]);\r\n        await lever.connect(user2).enterMarkets([cBtc.address, cUsdc.address]);\r\n\r\n        let exTxn = await exchange.connect(user2).executeT0LimitOrders(\r\n            [signatures[0]],\r\n            [orders[0]],\r\n            btcAmount,\r\n            { gasLimit: \"100000000\" }\r\n        );\r\n\r\n        await exTxn.wait(1)\r\n        let user1BtcBalancePost = btc.balanceOf(user1.address);\r\n        let user1UsdcBalancePost = usdc.balanceOf(user1.address);\r\n        let user2UsdcBalancePost = usdc.balanceOf(user2.address);\r\n        let user2BtcBalancePost = btc.balanceOf(user2.address);\r\n\r\n        let promise1 = await Promise.all([user1BtcBalancePost, user1UsdcBalancePost, user2UsdcBalancePost, user2BtcBalancePost]);\r\n        user1BtcBalancePost = promise1[0].toString();\r\n        user1UsdcBalancePost = promise1[1].toString();\r\n        user2UsdcBalancePost = promise1[2].toString();\r\n        user2BtcBalancePost = promise1[3].toString();\r\n        // console.log(user2UsdcBalancePost,btcAmount );\r\n\r\n        let fee = await Sync.findOne().lean()! as any;\r\n        let makerFeeAmount = Big(fee?.makerFee).div(1e18).times(btcAmount);\r\n\r\n        let takerFeeAmount = Big(Big(fee.takerFee).div(1e18)).times(Big(btcAmount));\r\n\r\n        expect(user2BtcBalancePost).to.equal(parseEther(Big(user2BtcBalancePre).minus(btcAmount).toString()));\r\n        expect(user2UsdcBalancePost).to.equal(\r\n            parseEther(\r\n                Big(user2UsdcBalancePre)\r\n                    .plus(\r\n                        Big(btcAmount).minus(takerFeeAmount)\r\n                            .times(exchangeRate)\r\n                            .div(Big(10).pow(18))).toString()))\r\n\r\n    });\r\n\r\n    it(`cancelled  order `, async () => {\r\n\r\n\r\n\r\n        let exTxn = await exchange.connect(user1).cancelOrder(\r\n            signatures[0],\r\n            orders[0],\r\n            { gasLimit: \"100000000\" }\r\n        )\r\n        await exTxn.wait(1);\r\n\r\n        let wait = () => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                let timeOutId = setTimeout(() => {\r\n                    return resolve(\"Success\")\r\n                }, 15000)\r\n\r\n                socket.on(EVENT_NAME.CANCEL_ORDER, (data) => {\r\n                    clearTimeout(timeOutId)\r\n                    return resolve(\"Success\")\r\n                })\r\n            })\r\n        }\r\n        let res = await wait()\r\n        expect(res).to.equal(\"Success\")\r\n        let data = await OrderCreated.findOne({ signature: signatures[0] }).lean()! as ifOrderCreated;\r\n        expect(data).to.be.an('object')\r\n        expect(data).not.to.be.null;\r\n        expect(data.cancelled).to.equal(true)\r\n\r\n    })\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"60cc736a899529bf8b3c755dec9735080358824d","contentHash":"4fa19f143979dcadffd39930495de900f0c8253d9677eb641095dbcb3eca76a4"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\unitTest\\CmarginOrderShort.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\unitTest\\CmarginOrderShort.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"15":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"16":{"start":{"line":17,"column":15},"end":{"line":17,"column":30}},"17":{"start":{"line":18,"column":20},"end":{"line":18,"column":57}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}},"19":{"start":{"line":20,"column":17},"end":{"line":20,"column":34}},"20":{"start":{"line":21,"column":17},"end":{"line":21,"column":51}},"21":{"start":{"line":22,"column":20},"end":{"line":22,"column":55}},"22":{"start":{"line":23,"column":16},"end":{"line":23,"column":44}},"23":{"start":{"line":24,"column":16},"end":{"line":24,"column":45}},"24":{"start":{"line":25,"column":27},"end":{"line":25,"column":54}},"25":{"start":{"line":26,"column":15},"end":{"line":26,"column":47}},"26":{"start":{"line":27,"column":13},"end":{"line":27,"column":32}},"27":{"start":{"line":28,"column":19},"end":{"line":28,"column":51}},"28":{"start":{"line":29,"column":0},"end":{"line":29,"column":185}},"29":{"start":{"line":30,"column":15},"end":{"line":30,"column":66}},"30":{"start":{"line":31,"column":0},"end":{"line":178,"column":4}},"31":{"start":{"line":31,"column":93},"end":{"line":178,"column":2}},"32":{"start":{"line":33,"column":18},"end":{"line":33,"column":26}},"33":{"start":{"line":34,"column":19},"end":{"line":34,"column":52}},"34":{"start":{"line":35,"column":19},"end":{"line":35,"column":58}},"35":{"start":{"line":36,"column":14},"end":{"line":36,"column":48}},"36":{"start":{"line":37,"column":15},"end":{"line":37,"column":50}},"37":{"start":{"line":38,"column":16},"end":{"line":38,"column":52}},"38":{"start":{"line":39,"column":16},"end":{"line":39,"column":59}},"39":{"start":{"line":40,"column":15},"end":{"line":40,"column":57}},"40":{"start":{"line":41,"column":16},"end":{"line":41,"column":86}},"41":{"start":{"line":42,"column":16},"end":{"line":42,"column":86}},"42":{"start":{"line":43,"column":21},"end":{"line":43,"column":23}},"43":{"start":{"line":44,"column":17},"end":{"line":44,"column":19}},"44":{"start":{"line":45,"column":23},"end":{"line":45,"column":25}},"45":{"start":{"line":46,"column":23},"end":{"line":46,"column":75}},"46":{"start":{"line":47,"column":15},"end":{"line":47,"column":50}},"47":{"start":{"line":48,"column":17},"end":{"line":48,"column":65}},"48":{"start":{"line":49,"column":16},"end":{"line":49,"column":17}},"49":{"start":{"line":50,"column":20},"end":{"line":50,"column":21}},"50":{"start":{"line":51,"column":4},"end":{"line":113,"column":8}},"51":{"start":{"line":51,"column":63},"end":{"line":113,"column":6}},"52":{"start":{"line":52,"column":23},"end":{"line":57,"column":9}},"53":{"start":{"line":59,"column":22},"end":{"line":71,"column":9}},"54":{"start":{"line":72,"column":22},"end":{"line":82,"column":9}},"55":{"start":{"line":84,"column":8},"end":{"line":84,"column":27}},"56":{"start":{"line":86,"column":32},"end":{"line":86,"column":80}},"57":{"start":{"line":87,"column":8},"end":{"line":87,"column":41}},"58":{"start":{"line":88,"column":8},"end":{"line":90,"column":11}},"59":{"start":{"line":91,"column":18},"end":{"line":107,"column":10}},"60":{"start":{"line":108,"column":8},"end":{"line":108,"column":30}},"61":{"start":{"line":109,"column":8},"end":{"line":109,"column":52}},"62":{"start":{"line":110,"column":8},"end":{"line":110,"column":62}},"63":{"start":{"line":111,"column":8},"end":{"line":111,"column":56}},"64":{"start":{"line":112,"column":8},"end":{"line":112,"column":90}},"65":{"start":{"line":114,"column":4},"end":{"line":121,"column":8}},"66":{"start":{"line":114,"column":48},"end":{"line":121,"column":6}},"67":{"start":{"line":115,"column":19},"end":{"line":115,"column":87}},"68":{"start":{"line":116,"column":8},"end":{"line":116,"column":52}},"69":{"start":{"line":117,"column":8},"end":{"line":117,"column":57}},"70":{"start":{"line":118,"column":8},"end":{"line":118,"column":77}},"71":{"start":{"line":119,"column":8},"end":{"line":119,"column":63}},"72":{"start":{"line":120,"column":8},"end":{"line":120,"column":32}},"73":{"start":{"line":122,"column":4},"end":{"line":156,"column":8}},"74":{"start":{"line":122,"column":96},"end":{"line":156,"column":6}},"75":{"start":{"line":123,"column":33},"end":{"line":123,"column":61}},"76":{"start":{"line":124,"column":33},"end":{"line":124,"column":61}},"77":{"start":{"line":125,"column":34},"end":{"line":125,"column":63}},"78":{"start":{"line":126,"column":34},"end":{"line":126,"column":63}},"79":{"start":{"line":127,"column":22},"end":{"line":127,"column":123}},"80":{"start":{"line":128,"column":8},"end":{"line":128,"column":51}},"81":{"start":{"line":129,"column":8},"end":{"line":129,"column":51}},"82":{"start":{"line":130,"column":8},"end":{"line":130,"column":52}},"83":{"start":{"line":131,"column":8},"end":{"line":131,"column":52}},"84":{"start":{"line":133,"column":26},"end":{"line":133,"column":74}},"85":{"start":{"line":136,"column":20},"end":{"line":136,"column":138}},"86":{"start":{"line":137,"column":8},"end":{"line":137,"column":28}},"87":{"start":{"line":138,"column":34},"end":{"line":138,"column":62}},"88":{"start":{"line":139,"column":35},"end":{"line":139,"column":64}},"89":{"start":{"line":140,"column":35},"end":{"line":140,"column":64}},"90":{"start":{"line":141,"column":34},"end":{"line":141,"column":62}},"91":{"start":{"line":142,"column":23},"end":{"line":142,"column":128}},"92":{"start":{"line":143,"column":8},"end":{"line":143,"column":53}},"93":{"start":{"line":144,"column":8},"end":{"line":144,"column":54}},"94":{"start":{"line":145,"column":8},"end":{"line":145,"column":54}},"95":{"start":{"line":146,"column":8},"end":{"line":146,"column":53}},"96":{"start":{"line":148,"column":18},"end":{"line":148,"column":50}},"97":{"start":{"line":149,"column":29},"end":{"line":149,"column":133}},"98":{"start":{"line":150,"column":29},"end":{"line":150,"column":137}},"99":{"start":{"line":151,"column":8},"end":{"line":151,"column":174}},"100":{"start":{"line":152,"column":8},"end":{"line":155,"column":66}},"101":{"start":{"line":157,"column":4},"end":{"line":177,"column":8}},"102":{"start":{"line":157,"column":34},"end":{"line":177,"column":6}},"103":{"start":{"line":158,"column":20},"end":{"line":158,"column":114}},"104":{"start":{"line":159,"column":8},"end":{"line":159,"column":28}},"105":{"start":{"line":160,"column":19},"end":{"line":170,"column":9}},"106":{"start":{"line":161,"column":12},"end":{"line":169,"column":15}},"107":{"start":{"line":162,"column":32},"end":{"line":164,"column":25}},"108":{"start":{"line":163,"column":20},"end":{"line":163,"column":46}},"109":{"start":{"line":165,"column":16},"end":{"line":168,"column":19}},"110":{"start":{"line":166,"column":20},"end":{"line":166,"column":44}},"111":{"start":{"line":167,"column":20},"end":{"line":167,"column":46}},"112":{"start":{"line":171,"column":18},"end":{"line":171,"column":30}},"113":{"start":{"line":172,"column":8},"end":{"line":172,"column":52}},"114":{"start":{"line":173,"column":19},"end":{"line":173,"column":87}},"115":{"start":{"line":174,"column":8},"end":{"line":174,"column":52}},"116":{"start":{"line":175,"column":8},"end":{"line":175,"column":48}},"117":{"start":{"line":176,"column":8},"end":{"line":176,"column":58}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":31,"column":87},"end":{"line":31,"column":88}},"loc":{"start":{"line":31,"column":93},"end":{"line":178,"column":2}},"line":31},"9":{"name":"(anonymous_9)","decl":{"start":{"line":31,"column":127},"end":{"line":31,"column":128}},"loc":{"start":{"line":31,"column":140},"end":{"line":178,"column":1}},"line":31},"10":{"name":"(anonymous_10)","decl":{"start":{"line":51,"column":57},"end":{"line":51,"column":58}},"loc":{"start":{"line":51,"column":63},"end":{"line":113,"column":6}},"line":51},"11":{"name":"(anonymous_11)","decl":{"start":{"line":51,"column":97},"end":{"line":51,"column":98}},"loc":{"start":{"line":51,"column":110},"end":{"line":113,"column":5}},"line":51},"12":{"name":"(anonymous_12)","decl":{"start":{"line":114,"column":42},"end":{"line":114,"column":43}},"loc":{"start":{"line":114,"column":48},"end":{"line":121,"column":6}},"line":114},"13":{"name":"(anonymous_13)","decl":{"start":{"line":114,"column":82},"end":{"line":114,"column":83}},"loc":{"start":{"line":114,"column":95},"end":{"line":121,"column":5}},"line":114},"14":{"name":"(anonymous_14)","decl":{"start":{"line":122,"column":90},"end":{"line":122,"column":91}},"loc":{"start":{"line":122,"column":96},"end":{"line":156,"column":6}},"line":122},"15":{"name":"(anonymous_15)","decl":{"start":{"line":122,"column":130},"end":{"line":122,"column":131}},"loc":{"start":{"line":122,"column":143},"end":{"line":156,"column":5}},"line":122},"16":{"name":"(anonymous_16)","decl":{"start":{"line":157,"column":28},"end":{"line":157,"column":29}},"loc":{"start":{"line":157,"column":34},"end":{"line":177,"column":6}},"line":157},"17":{"name":"(anonymous_17)","decl":{"start":{"line":157,"column":68},"end":{"line":157,"column":69}},"loc":{"start":{"line":157,"column":81},"end":{"line":177,"column":5}},"line":157},"18":{"name":"(anonymous_18)","decl":{"start":{"line":160,"column":19},"end":{"line":160,"column":20}},"loc":{"start":{"line":160,"column":25},"end":{"line":170,"column":9}},"line":160},"19":{"name":"(anonymous_19)","decl":{"start":{"line":161,"column":31},"end":{"line":161,"column":32}},"loc":{"start":{"line":161,"column":52},"end":{"line":169,"column":13}},"line":161},"20":{"name":"(anonymous_20)","decl":{"start":{"line":162,"column":43},"end":{"line":162,"column":44}},"loc":{"start":{"line":162,"column":49},"end":{"line":164,"column":17}},"line":162},"21":{"name":"(anonymous_21)","decl":{"start":{"line":165,"column":63},"end":{"line":165,"column":64}},"loc":{"start":{"line":165,"column":73},"end":{"line":168,"column":17}},"line":165}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":29,"column":71},"end":{"line":29,"column":180}},"type":"cond-expr","locations":[{"start":{"line":29,"column":160},"end":{"line":29,"column":171}},{"start":{"line":29,"column":174},"end":{"line":29,"column":180}}],"line":29},"9":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":156}},"type":"cond-expr","locations":[{"start":{"line":29,"column":128},"end":{"line":29,"column":134}},{"start":{"line":29,"column":137},"end":{"line":29,"column":156}}],"line":29},"10":{"loc":{"start":{"line":29,"column":72},"end":{"line":29,"column":125}},"type":"binary-expr","locations":[{"start":{"line":29,"column":72},"end":{"line":29,"column":108}},{"start":{"line":29,"column":112},"end":{"line":29,"column":125}}],"line":29},"11":{"loc":{"start":{"line":149,"column":51},"end":{"line":149,"column":105}},"type":"cond-expr","locations":[{"start":{"line":149,"column":84},"end":{"line":149,"column":90}},{"start":{"line":149,"column":93},"end":{"line":149,"column":105}}],"line":149},"12":{"loc":{"start":{"line":149,"column":51},"end":{"line":149,"column":81}},"type":"binary-expr","locations":[{"start":{"line":149,"column":51},"end":{"line":149,"column":63}},{"start":{"line":149,"column":67},"end":{"line":149,"column":81}}],"line":149}},"s":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0},"f":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":1,"7":3,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"0":[1,1,1],"1":[0,0],"2":[1,1],"3":[1,0],"4":[1,1],"5":[1,1,1],"6":[0,3],"7":[3,3],"8":[0,1],"9":[0,1],"10":[1,1],"11":[0,0],"12":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/unitTest/CmarginOrderShort.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/unitTest/CmarginOrderShort.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport { use, request } from \"chai\";\r\nimport { expect } from \"chai\";\r\nimport chaiHttp from \"chai-http\";\r\nuse(chaiHttp);\r\nimport { ethers } from \"ethers\";\r\nimport Big from \"big.js\";\r\nimport { EVENT_NAME } from \"../../socketIo/socket.io\";\r\nimport { getERC20ABI, getExchangeABI, getProvider, leverageAbi, parseEther } from \"../../utils/utils\";\r\nimport { getExchangeAddress } from \"../../helper/chain\";\r\nimport { io } from \"socket.io-client\";\r\nimport path from \"path\";\r\nimport { connect, OrderCreated, Sync } from \"../../db\";\r\nimport { ifOrderCreated } from \"../../helper/interface\";\r\nimport { contractName, getContract, version } from \"../../helper/constant\";\r\n\r\n\r\n\r\nrequire(\"dotenv\").config({ path: path.resolve(process.cwd(), process.env.NODE_ENV?.includes('test') ? \".env.test\" : \".env\") });\r\n\r\n\r\n\r\nconst socket = io(\"http://localhost:3010\");\r\n\r\n\r\n\r\n\r\ndescribe(\"Margin Order Short=> Mint token, create order, execute order, cancel order\", async () => {\r\n\r\n    // requirements\r\n    let chainId = \"421613\"\r\n    let provider = getProvider(chainId);\r\n\r\n    let exchange = getContract(\"Exchange\")\r\n    let btc = getContract(\"BTC\")\r\n    let usdc = getContract(\"USDC\")\r\n    let lever = getContract(\"Lever\")\r\n    let cUsdc = getContract(\"lUSDC_Market\")\r\n    let cBtc = getContract(\"lBTC_Market\")\r\n    let user1 = new ethers.Wallet(process.env.PRIVATE_KEY1! as string).connect(provider); //2\r\n    let user2 = new ethers.Wallet(process.env.PRIVATE_KEY2! as string).connect(provider); //1\r\n\r\n\r\n    let signatures: any[] = [];\r\n    let orders: any[] = [];\r\n    let orderCreated: any[] = []\r\n    let exchangeRate = ethers.utils.parseEther('20000').toString();\r\n\r\n    let salt = Math.floor(Math.random() * 9000000);\r\n    let amount = ethers.utils.parseEther('1').toString();\r\n    let loops = 5;\r\n    let orderType = 3 // short\r\n\r\n    it(`user1 create short margin order 1 btc @ 20000}`, async () => {\r\n        const domain = {\r\n            name: contractName,\r\n            version: version,\r\n            chainId: chainId.toString(),\r\n            verifyingContract: getExchangeAddress(chainId),\r\n        };\r\n\r\n        // The named list of all type definitions\r\n        const types = {\r\n            Order: [\r\n                { name: 'maker', type: 'address' },\r\n                { name: 'token0', type: 'address' },\r\n                { name: 'token1', type: 'address' },\r\n                { name: 'amount', type: 'uint256' },\r\n                { name: 'orderType', type: 'uint8' },\r\n                { name: 'salt', type: 'uint32' },\r\n                { name: 'exchangeRate', type: 'uint176' },\r\n                { name: 'borrowLimit', type: 'uint32' },\r\n                { name: 'loops', type: 'uint8' }\r\n            ]\r\n        };\r\n\r\n        const value = {\r\n            maker: user1.address.toLowerCase(),\r\n            token0: btc.address.toLowerCase(),\r\n            token1: usdc.address.toLowerCase(),\r\n            amount: amount,\r\n            orderType: orderType,\r\n            salt: salt,\r\n            exchangeRate: exchangeRate,\r\n            borrowLimit: Big(0.75).times(Big(10).pow(6)).toNumber(),\r\n            loops: loops\r\n        };\r\n        // The data to sign\r\n\r\n\r\n        orders.push(value);\r\n        // sign typed data\r\n        const storedSignature = await user1._signTypedData(\r\n            domain,\r\n            types,\r\n            value\r\n        );\r\n        signatures.push(storedSignature);\r\n        console.log([\r\n            value, storedSignature\r\n        ]);\r\n        let res = await request(\"http://localhost:3010\")\r\n            .post(`/v/${version}/order/create`)\r\n            .send(\r\n                {\r\n                    \"data\": {\r\n                        \"maker\": user1.address.toLowerCase(),\r\n                        \"token0\": btc.address.toLowerCase(),\r\n                        \"token1\": usdc.address.toLowerCase(),\r\n                        \"amount\": amount,\r\n                        \"orderType\": orderType,\r\n                        \"salt\": salt,\r\n                        \"exchangeRate\": exchangeRate,\r\n                        borrowLimit: Big(0.75).times(Big(10).pow(6)).toNumber(),\r\n                        loops: loops\r\n\r\n                    },\r\n                    \"signature\": storedSignature,\r\n                    \"chainId\": chainId\r\n                }\r\n            );\r\n        console.log(res.body)\r\n        expect(res).to.have.status(201);\r\n        expect(res.body.status).to.be.equal(true);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.message).to.have.string('Order created successfully');\r\n\r\n    });\r\n\r\n    it(`find created order in data base`, async () => {\r\n\r\n        let data = await OrderCreated.findOne({ signature: signatures[0] }).lean()! as ifOrderCreated;\r\n        expect(data).to.be.an('object');\r\n        expect(data.amount).to.equal(amount);\r\n        expect(data.maker).to.equal(user1.address.toLowerCase());\r\n        expect(Number(data.loops)).to.equal(loops)\r\n        orderCreated.push(data)\r\n    })\r\n\r\n\r\n    it(`user1 sell btc got from market to user2 and got 40000 usdc @ 20000 exchangeRate`, async () => {\r\n        let user1BtcBalancePre = btc.balanceOf(user1.address);\r\n        let user2BtcBalancePre = btc.balanceOf(user2.address);\r\n        let user2UsdcBalancePre = usdc.balanceOf(user2.address);\r\n        let user1UsdcBalancePre = usdc.balanceOf(user1.address);\r\n        let promise = await Promise.all([user1BtcBalancePre, user2BtcBalancePre, user2UsdcBalancePre, user1UsdcBalancePre])\r\n        user1BtcBalancePre = promise[0].toString();\r\n        user2BtcBalancePre = promise[1].toString()\r\n        user2UsdcBalancePre = promise[2].toString()\r\n        user1UsdcBalancePre = promise[3].toString()\r\n        // console.log(user1BtcBalancePre)\r\n        const btcAmount = ethers.utils.parseEther('2').toString();\r\n        // await lever.connect(user1).enterMarkets([cBtc.address, cUsdc.address]);\r\n        // await lever.connect(user2).enterMarkets([cBtc.address, cUsdc.address]);\r\n\r\n        let exTxn = await exchange.connect(user2).executeT0LimitOrders(\r\n            [signatures[0]],\r\n            [orders[0]],\r\n            btcAmount,\r\n            { gasLimit: \"100000000\" }\r\n        );\r\n\r\n        await exTxn.wait(1)\r\n        let user1BtcBalancePost = btc.balanceOf(user1.address);\r\n        let user1UsdcBalancePost = usdc.balanceOf(user1.address);\r\n        let user2UsdcBalancePost = usdc.balanceOf(user2.address);\r\n        let user2BtcBalancePost = btc.balanceOf(user2.address);\r\n\r\n        let promise1 = await Promise.all([user1BtcBalancePost, user1UsdcBalancePost, user2UsdcBalancePost, user2BtcBalancePost]);\r\n        user1BtcBalancePost = promise1[0].toString();\r\n        user1UsdcBalancePost = promise1[1].toString();\r\n        user2UsdcBalancePost = promise1[2].toString();\r\n        user2BtcBalancePost = promise1[3].toString();\r\n        // console.log(user1BtcBalancePost)\r\n\r\n        let fee = await Sync.findOne().lean()! as any;\r\n        let makerFeeAmount = Big(fee?.makerFee).div(1e18).times(btcAmount);\r\n\r\n        let takerFeeAmount = Big(Big(fee.takerFee).div(1e18)).times(Big(btcAmount));\r\n\r\n        expect(user2BtcBalancePost).to.equal(parseEther(Big(user2BtcBalancePre).plus(btcAmount).minus(takerFeeAmount).toString()));\r\n        expect(user2UsdcBalancePost).to.equal(\r\n            parseEther(\r\n                Big(user2UsdcBalancePre)\r\n                    .minus(\r\n                        Big(btcAmount)\r\n                            .times(exchangeRate)\r\n                            .div(Big(10).pow(18))).toString()))\r\n\r\n    });\r\n\r\n    it(`cancelled  order `, async () => {\r\n\r\n\r\n\r\n        let exTxn = await exchange.connect(user1).cancelOrder(\r\n            signatures[0],\r\n            orders[0],\r\n            { gasLimit: \"100000000\" }\r\n        )\r\n        await exTxn.wait(1);\r\n\r\n        let wait = () => {\r\n            return new Promise((resolve, reject) => {\r\n\r\n                let timeOutId = setTimeout(() => {\r\n                    return resolve(\"Success\")\r\n                }, 15000)\r\n\r\n                socket.on(EVENT_NAME.CANCEL_ORDER, (data) => {\r\n                    clearTimeout(timeOutId)\r\n                    return resolve(\"Success\")\r\n                })\r\n            })\r\n        }\r\n        let res = await wait()\r\n        expect(res).to.equal(\"Success\")\r\n        let data = await OrderCreated.findOne({ signature: signatures[0] }).lean()! as ifOrderCreated;\r\n        expect(data).to.be.an('object')\r\n        expect(data).not.to.be.null;\r\n        expect(data.cancelled).to.equal(true)\r\n\r\n    })\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2cf450106999c17a1148728f2f37d14012b48cac","contentHash":"ec3680726acc5609d22956ada7c30b8a2af43460d128139ca5ddf830c6c5e586"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\unitTest\\DblackListSignature.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\unitTest\\DblackListSignature.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":62}},"15":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"16":{"start":{"line":17,"column":15},"end":{"line":17,"column":30}},"17":{"start":{"line":18,"column":20},"end":{"line":18,"column":57}},"18":{"start":{"line":19,"column":17},"end":{"line":19,"column":34}},"19":{"start":{"line":20,"column":16},"end":{"line":20,"column":45}},"20":{"start":{"line":21,"column":16},"end":{"line":21,"column":44}},"21":{"start":{"line":22,"column":15},"end":{"line":22,"column":47}},"22":{"start":{"line":23,"column":19},"end":{"line":23,"column":51}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":37}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":185}},"25":{"start":{"line":26,"column":0},"end":{"line":116,"column":4}},"26":{"start":{"line":26,"column":87},"end":{"line":116,"column":2}},"27":{"start":{"line":28,"column":18},"end":{"line":28,"column":26}},"28":{"start":{"line":29,"column":19},"end":{"line":29,"column":52}},"29":{"start":{"line":30,"column":16},"end":{"line":30,"column":86}},"30":{"start":{"line":31,"column":21},"end":{"line":31,"column":23}},"31":{"start":{"line":32,"column":17},"end":{"line":32,"column":19}},"32":{"start":{"line":33,"column":4},"end":{"line":35,"column":8}},"33":{"start":{"line":33,"column":17},"end":{"line":35,"column":6}},"34":{"start":{"line":36,"column":4},"end":{"line":75,"column":8}},"35":{"start":{"line":36,"column":46},"end":{"line":75,"column":6}},"36":{"start":{"line":37,"column":23},"end":{"line":42,"column":9}},"37":{"start":{"line":44,"column":22},"end":{"line":49,"column":9}},"38":{"start":{"line":51,"column":22},"end":{"line":54,"column":9}},"39":{"start":{"line":55,"column":8},"end":{"line":55,"column":27}},"40":{"start":{"line":57,"column":32},"end":{"line":57,"column":80}},"41":{"start":{"line":58,"column":8},"end":{"line":58,"column":41}},"42":{"start":{"line":62,"column":18},"end":{"line":69,"column":10}},"43":{"start":{"line":70,"column":8},"end":{"line":70,"column":30}},"44":{"start":{"line":71,"column":8},"end":{"line":71,"column":52}},"45":{"start":{"line":72,"column":8},"end":{"line":72,"column":62}},"46":{"start":{"line":73,"column":8},"end":{"line":73,"column":56}},"47":{"start":{"line":74,"column":8},"end":{"line":74,"column":80}},"48":{"start":{"line":76,"column":4},"end":{"line":115,"column":8}},"49":{"start":{"line":76,"column":48},"end":{"line":115,"column":6}},"50":{"start":{"line":77,"column":23},"end":{"line":82,"column":9}},"51":{"start":{"line":84,"column":22},"end":{"line":89,"column":9}},"52":{"start":{"line":91,"column":22},"end":{"line":94,"column":9}},"53":{"start":{"line":95,"column":8},"end":{"line":95,"column":27}},"54":{"start":{"line":97,"column":32},"end":{"line":97,"column":80}},"55":{"start":{"line":98,"column":8},"end":{"line":98,"column":41}},"56":{"start":{"line":102,"column":18},"end":{"line":109,"column":10}},"57":{"start":{"line":110,"column":8},"end":{"line":110,"column":30}},"58":{"start":{"line":111,"column":8},"end":{"line":111,"column":52}},"59":{"start":{"line":112,"column":8},"end":{"line":112,"column":62}},"60":{"start":{"line":113,"column":8},"end":{"line":113,"column":56}},"61":{"start":{"line":114,"column":8},"end":{"line":114,"column":72}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":26,"column":81},"end":{"line":26,"column":82}},"loc":{"start":{"line":26,"column":87},"end":{"line":116,"column":2}},"line":26},"9":{"name":"(anonymous_9)","decl":{"start":{"line":26,"column":121},"end":{"line":26,"column":122}},"loc":{"start":{"line":26,"column":134},"end":{"line":116,"column":1}},"line":26},"10":{"name":"(anonymous_10)","decl":{"start":{"line":33,"column":11},"end":{"line":33,"column":12}},"loc":{"start":{"line":33,"column":17},"end":{"line":35,"column":6}},"line":33},"11":{"name":"(anonymous_11)","decl":{"start":{"line":33,"column":51},"end":{"line":33,"column":52}},"loc":{"start":{"line":33,"column":64},"end":{"line":35,"column":5}},"line":33},"12":{"name":"(anonymous_12)","decl":{"start":{"line":36,"column":40},"end":{"line":36,"column":41}},"loc":{"start":{"line":36,"column":46},"end":{"line":75,"column":6}},"line":36},"13":{"name":"(anonymous_13)","decl":{"start":{"line":36,"column":80},"end":{"line":36,"column":81}},"loc":{"start":{"line":36,"column":93},"end":{"line":75,"column":5}},"line":36},"14":{"name":"(anonymous_14)","decl":{"start":{"line":76,"column":42},"end":{"line":76,"column":43}},"loc":{"start":{"line":76,"column":48},"end":{"line":115,"column":6}},"line":76},"15":{"name":"(anonymous_15)","decl":{"start":{"line":76,"column":82},"end":{"line":76,"column":83}},"loc":{"start":{"line":76,"column":95},"end":{"line":115,"column":5}},"line":76}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":25,"column":71},"end":{"line":25,"column":180}},"type":"cond-expr","locations":[{"start":{"line":25,"column":160},"end":{"line":25,"column":171}},{"start":{"line":25,"column":174},"end":{"line":25,"column":180}}],"line":25},"9":{"loc":{"start":{"line":25,"column":72},"end":{"line":25,"column":156}},"type":"cond-expr","locations":[{"start":{"line":25,"column":128},"end":{"line":25,"column":134}},{"start":{"line":25,"column":137},"end":{"line":25,"column":156}}],"line":25},"10":{"loc":{"start":{"line":25,"column":72},"end":{"line":25,"column":125}},"type":"binary-expr","locations":[{"start":{"line":25,"column":72},"end":{"line":25,"column":108}},{"start":{"line":25,"column":112},"end":{"line":25,"column":125}}],"line":25}},"s":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0},"f":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":1,"7":2,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"0":[1,1,1],"1":[0,0],"2":[1,1],"3":[1,0],"4":[1,1],"5":[1,1,1],"6":[0,2],"7":[2,2],"8":[0,1],"9":[0,1],"10":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/unitTest/DblackListSignature.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/unitTest/DblackListSignature.ts"],"names":[],"mappings":"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","sourcesContent":["\r\n\r\n\r\n\r\nimport { use, request } from \"chai\";\r\nimport { expect } from \"chai\";\r\nimport chaiHttp from \"chai-http\";\r\nimport { ethers } from \"ethers\";\r\nimport { connect } from \"../../db\";\r\nimport { getExchangeAddress } from \"../../helper/chain\";\r\nimport { ifOrderCreated } from \"../../helper/interface\";\r\nimport {  getProvider } from \"../../utils/utils\";\r\nimport path from \"path\";\r\nimport { contractName,  LinkAddress, version } from \"../../helper/constant\";\r\nuse(chaiHttp);\r\nrequire(\"dotenv\").config({ path: path.resolve(process.cwd(), process.env.NODE_ENV?.includes('test') ? \".env.test\" : \".env\") });\r\n\r\n\r\n\r\ndescribe(\"Limit Order => Mint token, create order, execute order, cancel order\", async () => {\r\n\r\n    // requirements\r\n    let chainId = \"421613\"\r\n    let provider = getProvider(chainId);\r\n    let user1 = new ethers.Wallet(process.env.PRIVATE_KEY1! as string).connect(provider); //1 \r\n    let signatures: any[] = [];\r\n    let orders: any[] = [];\r\n   \r\n    before(async () => { \r\n        // await connect()\r\n    });\r\n\r\n\r\n    it(`Add link address in blacklist`, async () => {\r\n\r\n        const domain = {\r\n            name: contractName,\r\n            version: version,\r\n            chainId: chainId.toString(),\r\n            verifyingContract: getExchangeAddress(chainId),\r\n        };\r\n\r\n        // The named list of all type definitions\r\n        const types = {\r\n            Request: [\r\n                { name: 'token', type: 'address' },\r\n                { name: 'blackList', type: 'uint8' },\r\n            ]\r\n        };\r\n\r\n        // The data to sign\r\n        const value = {\r\n            token: LinkAddress,\r\n            blackList: 0\r\n        };\r\n\r\n        orders.push(value);\r\n        // sign typed data\r\n        const storedSignature = await user1._signTypedData(\r\n            domain,\r\n            types,\r\n            value\r\n        );\r\n        signatures.push(storedSignature);\r\n        // console.log([\r\n        //     value, storedSignature\r\n        // ]);\r\n\r\n        let res = await request(\"http://localhost:3010\")\r\n            .put(`/v/${version}/pair/blacklist `)\r\n            .send(\r\n                {\r\n                    \"token\": LinkAddress,\r\n                    \"blackList\": 0,\r\n                    \"signature\": storedSignature.toLowerCase(),\r\n                    \"chainId\": chainId\r\n                }\r\n            );\r\n\r\n       \r\n        console.log(res.body)\r\n        expect(res).to.have.status(200);\r\n        expect(res.body.status).to.be.equal(true);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.message).to.have.string(\"Token Deactivate\");\r\n\r\n    });\r\n    it(`Remove Linktoken from blacklist`, async () => {\r\n\r\n        const domain = {\r\n            name: contractName,\r\n            version: version,\r\n            chainId: chainId.toString(),\r\n            verifyingContract: getExchangeAddress(chainId),\r\n        };\r\n\r\n        // The named list of all type definitions\r\n        const types = {\r\n            Request: [\r\n                { name: 'token', type: 'address' },\r\n                { name: 'blackList', type: 'uint8' },\r\n            ]\r\n        };\r\n\r\n        // The data to sign\r\n        const value = {\r\n            token: LinkAddress,\r\n            blackList: 1\r\n        };\r\n\r\n        orders.push(value);\r\n        // sign typed data\r\n        const storedSignature = await user1._signTypedData(\r\n            domain,\r\n            types,\r\n            value\r\n        );\r\n        signatures.push(storedSignature);\r\n        // console.log([\r\n        //     value, storedSignature\r\n        // ]);\r\n\r\n        let res = await request(\"http://localhost:3010\")\r\n            .put(`/v/${version}/pair/blacklist `)\r\n            .send(\r\n                {\r\n                    \"token\": LinkAddress,\r\n                    \"blackList\": 1,\r\n                    \"signature\": storedSignature.toLowerCase(),\r\n                    \"chainId\": chainId\r\n                }\r\n            );\r\n\r\n       \r\n        console.log(res.body)\r\n        expect(res).to.have.status(200);\r\n        expect(res.body.status).to.be.equal(true);\r\n        expect(res.body).to.be.an('object');\r\n        expect(res.body.message).to.equal(\"Token Activate\")\r\n       \r\n\r\n    });\r\n\r\n\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e28779174174a4884d0cd09d5c15227e640f2ec8","contentHash":"bae712f6c36b56054d9030d6e950fdea9e58fcf7682a3cf0034671f47d303089"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\unitTest\\handleMinTokenAmountSet.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\unitTest\\handleMinTokenAmountSet.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":13},"end":{"line":12,"column":32}},"14":{"start":{"line":13,"column":34},"end":{"line":13,"column":83}},"15":{"start":{"line":14,"column":15},"end":{"line":14,"column":30}},"16":{"start":{"line":15,"column":19},"end":{"line":15,"column":51}},"17":{"start":{"line":17,"column":0},"end":{"line":45,"column":4}},"18":{"start":{"line":17,"column":75},"end":{"line":45,"column":2}},"19":{"start":{"line":18,"column":26},"end":{"line":18,"column":29}},"20":{"start":{"line":20,"column":4},"end":{"line":44,"column":8}},"21":{"start":{"line":20,"column":79},"end":{"line":44,"column":6}},"22":{"start":{"line":21,"column":27},"end":{"line":21,"column":48}},"23":{"start":{"line":22,"column":23},"end":{"line":22,"column":34}},"24":{"start":{"line":24,"column":30},"end":{"line":24,"column":81}},"25":{"start":{"line":25,"column":8},"end":{"line":25,"column":57}},"26":{"start":{"line":26,"column":19},"end":{"line":26,"column":41}},"27":{"start":{"line":27,"column":8},"end":{"line":27,"column":75}},"28":{"start":{"line":29,"column":34},"end":{"line":29,"column":95}},"29":{"start":{"line":30,"column":8},"end":{"line":30,"column":82}},"30":{"start":{"line":32,"column":23},"end":{"line":32,"column":95}},"31":{"start":{"line":33,"column":8},"end":{"line":35,"column":11}},"32":{"start":{"line":34,"column":12},"end":{"line":34,"column":61}},"33":{"start":{"line":37,"column":8},"end":{"line":37,"column":100}},"34":{"start":{"line":38,"column":35},"end":{"line":38,"column":96}},"35":{"start":{"line":39,"column":8},"end":{"line":39,"column":90}},"36":{"start":{"line":40,"column":24},"end":{"line":40,"column":96}},"37":{"start":{"line":41,"column":8},"end":{"line":43,"column":11}},"38":{"start":{"line":42,"column":12},"end":{"line":42,"column":68}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":17,"column":69},"end":{"line":17,"column":70}},"loc":{"start":{"line":17,"column":75},"end":{"line":45,"column":2}},"line":17},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":109},"end":{"line":17,"column":110}},"loc":{"start":{"line":17,"column":122},"end":{"line":45,"column":1}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":20,"column":73},"end":{"line":20,"column":74}},"loc":{"start":{"line":20,"column":79},"end":{"line":44,"column":6}},"line":20},"10":{"name":"(anonymous_10)","decl":{"start":{"line":20,"column":113},"end":{"line":20,"column":114}},"loc":{"start":{"line":20,"column":126},"end":{"line":44,"column":5}},"line":20},"11":{"name":"(anonymous_11)","decl":{"start":{"line":33,"column":25},"end":{"line":33,"column":26}},"loc":{"start":{"line":33,"column":32},"end":{"line":35,"column":9}},"line":33},"12":{"name":"(anonymous_12)","decl":{"start":{"line":41,"column":26},"end":{"line":41,"column":27}},"loc":{"start":{"line":41,"column":33},"end":{"line":43,"column":9}},"line":41}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"f":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0},"b":{"0":[1,1,1],"1":[0,0],"2":[1,1],"3":[1,0],"4":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/unitTest/handleMinTokenAmountSet.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/unitTest/handleMinTokenAmountSet.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,iCAAuD;AACvD,oFAAiF;AACjF,+BAA8B;AAC9B,oDAAmD;AAGnD,wFAAwF;AAExF,QAAQ,CAAC,0DAA0D,EAAE,GAAS,EAAE;IAC5E,IAAI,eAAe,GAAG,GAAG,CAAA;IACzB,mBAAmB;IACnB,EAAE,CAAC,gEAAgE,EAAE,GAAS,EAAE;QAE5E,MAAM,UAAU,GAAG,qBAAU,CAAC;QAC9B,IAAI,QAAQ,GAAG,WAAW,CAAC;QAE3B,wBAAwB;QAExB,IAAI,eAAe,GAAG,MAAM,UAAK,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,IAAI,EAAU,CAAA;QAC5E,eAAe,GAAG,eAAe,CAAC,cAAc,CAAC;QACjD,IAAI,IAAI,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;QACjC,MAAM,IAAA,iDAAuB,EAAC,IAAI,CAAC,CAAC;QAEpC,mCAAmC;QAEnC,IAAI,mBAAmB,GAAG,MAAM,UAAK,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAU,CAAA;QAE1F,IAAA,aAAM,EAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAE9D,8CAA8C;QAE9C,IAAI,QAAQ,GAAG,MAAM,gBAAW,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAEnF,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACnB,IAAA,aAAM,EAAC,CAAC,CAAC,cAAc,IAAI,QAAQ,CAAC,CAAA;QACxC,CAAC,CAAC,CAAA;QAEF,6BAA6B;QAE7B,MAAM,IAAA,iDAAuB,EAAC,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC,CAAA;QAE5D,IAAI,oBAAoB,GAAG,MAAM,UAAK,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAU,CAAA;QAE3F,IAAA,aAAM,EAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QAEtE,IAAI,SAAS,GAAG,MAAM,gBAAW,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAEpF,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACpB,IAAA,aAAM,EAAC,CAAC,CAAC,cAAc,IAAI,eAAe,CAAC,CAAA;QAC/C,CAAC,CAAC,CAAA;IAIN,CAAC,CAAA,CAAC,CAAC;AAIP,CAAC,CAAA,CAAC,CAAA","sourcesContent":["\r\nimport { connect, PairCreated, Token } from \"../../db\";\r\nimport { handleMinTokenAmountSet } from \"../../handlers/handleMinTokenAmountSet\";\r\nimport { expect } from \"chai\";\r\nimport { BtcAddress } from \"../../helper/constant\";\r\n\r\n\r\n// befor running this make sure btc token present in the database, and its piar created.\r\n\r\ndescribe(\"handleMinTokenAmountSet, change its minToken and restore\", async () => {\r\n    let currentMinToken = \"0\"\r\n    // await connect();\r\n    it(\"it will change btc minToken and then restore to previous value\", async () => {\r\n       \r\n        const btcAddress = BtcAddress;\r\n        let minToken = \"123456789\";\r\n\r\n        // get current minToken \r\n\r\n        let getTokenDetails = await Token.findOne({ id: btcAddress }).lean()! as any\r\n        currentMinToken = getTokenDetails.minTokenAmount;\r\n        let data = [btcAddress, minToken]\r\n        await handleMinTokenAmountSet(data);\r\n\r\n        // check new amount updated or not;\r\n\r\n        let getTokenAfterUpdate = await Token.findOne({ _id: getTokenDetails._id }).lean()! as any\r\n\r\n        expect(getTokenAfterUpdate.minTokenAmount).to.equal(minToken);\r\n\r\n        // checking pairs updated where btc is token0;\r\n\r\n        let getPairs = await PairCreated.find({ token0: btcAddress, active: true }).lean();\r\n\r\n        getPairs.forEach((x) => {\r\n            expect(x.minToken0Order == minToken)\r\n        })\r\n\r\n        // updating as per old value;\r\n\r\n        await handleMinTokenAmountSet([btcAddress, currentMinToken])\r\n\r\n        let getTokenAfterUpdate1 = await Token.findOne({ _id: getTokenDetails._id }).lean()! as any\r\n\r\n        expect(getTokenAfterUpdate1.minTokenAmount).to.equal(currentMinToken);\r\n\r\n        let getPairs1 = await PairCreated.find({ token0: btcAddress, active: true }).lean();\r\n\r\n        getPairs1.forEach((x) => {\r\n            expect(x.minToken0Order == currentMinToken)\r\n        })\r\n\r\n\r\n\r\n    });\r\n\r\n\r\n\r\n})"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"15a265b2c99205466027079ef60e31d1679e7272","contentHash":"6196098ebc771a575c0c4436d28be59d041c5c21f8d9dcefe8e195bc57dd066d"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\handlers\\handleMinTokenAmountSet.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\handlers\\handleMinTokenAmountSet.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"14":{"start":{"line":13,"column":13},"end":{"line":13,"column":29}},"15":{"start":{"line":15,"column":4},"end":{"line":30,"column":7}},"16":{"start":{"line":16,"column":8},"end":{"line":29,"column":9}},"17":{"start":{"line":17,"column":26},"end":{"line":17,"column":53}},"18":{"start":{"line":18,"column":30},"end":{"line":18,"column":48}},"19":{"start":{"line":19,"column":12},"end":{"line":19,"column":116}},"20":{"start":{"line":20,"column":24},"end":{"line":20,"column":91}},"21":{"start":{"line":21,"column":12},"end":{"line":23,"column":16}},"22":{"start":{"line":21,"column":33},"end":{"line":23,"column":14}},"23":{"start":{"line":22,"column":16},"end":{"line":22,"column":113}},"24":{"start":{"line":24,"column":12},"end":{"line":24,"column":95}},"25":{"start":{"line":27,"column":12},"end":{"line":27,"column":66}},"26":{"start":{"line":32,"column":0},"end":{"line":32,"column":58}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"handleMinTokenAmountSet","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":32}},"loc":{"start":{"line":14,"column":39},"end":{"line":31,"column":1}},"line":14},"8":{"name":"(anonymous_8)","decl":{"start":{"line":15,"column":43},"end":{"line":15,"column":44}},"loc":{"start":{"line":15,"column":56},"end":{"line":30,"column":5}},"line":15},"9":{"name":"(anonymous_9)","decl":{"start":{"line":21,"column":26},"end":{"line":21,"column":27}},"loc":{"start":{"line":21,"column":33},"end":{"line":23,"column":14}},"line":21},"10":{"name":"(anonymous_10)","decl":{"start":{"line":21,"column":65},"end":{"line":21,"column":66}},"loc":{"start":{"line":21,"column":78},"end":{"line":23,"column":13}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/handlers/handleMinTokenAmountSet.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/handlers/handleMinTokenAmountSet.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,8BAA2C;AAO3C,SAAsB,uBAAuB,CAAC,IAAS;;QAEnD,IAAG;YACC,MAAM,KAAK,GAAI,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;YAC3C,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAErC,MAAM,UAAK,CAAC,gBAAgB,CACxB,EAAC,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC,EACzB,EAAC,IAAI,EAAC,EAAC,cAAc,EAAE,SAAS,EAAC,EAAC,CACrC,CAAC;YAEF,IAAI,KAAK,GAAG,MAAM,gBAAW,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YAEzE,KAAK,CAAC,OAAO,CAAC,CAAO,CAAC,EAAC,EAAE;gBACrB,MAAM,gBAAW,CAAC,gBAAgB,CAC9B,EAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAC,EACZ,EAAC,IAAI,EAAC,EAAC,cAAc,EAAE,SAAS,EAAC,EAAC,CACrC,CAAA;YACL,CAAC,CAAA,CAAC,CAAC;YAEH,OAAO,CAAC,GAAG,CAAC,oCAAoC,KAAK,iBAAiB,SAAS,EAAE,CAAC,CAAA;SAErF;QACD,OAAM,KAAK,EAAC;YAER,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;YACtD,iCAAiC;SACpC;IACL,CAAC;CAAA;AA5BD,0DA4BC","sourcesContent":["import { sentry } from \"../../app\";\r\nimport { PairCreated, Token } from \"../db\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport async function handleMinTokenAmountSet(data: any){\r\n\r\n    try{\r\n        const token =  data[0].toLocaleLowerCase();\r\n        const minAMount = data[1].toString();\r\n\r\n        await Token.findOneAndUpdate(\r\n            {id: token, active: true},\r\n            {$set:{minTokenAmount: minAMount}}\r\n        );\r\n\r\n        let pairs = await PairCreated.find({token0: token, active: true}).lean();\r\n        \r\n        pairs.forEach(async (x)=>{\r\n            await PairCreated.findOneAndUpdate(\r\n                {_id: x._id},\r\n                {$set:{minToken0Order: minAMount}}\r\n            )\r\n        });\r\n\r\n        console.log(`Min token amount updated token = ${token}, minAmount = ${minAMount}`)\r\n\r\n    }\r\n    catch(error){\r\n\r\n        console.log(\"Error @ handleMinTokenAmountSet\", error);\r\n        // sentry.captureException(error)\r\n    }\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"97e8c35c3857a9186f8613746384c35b8d2416a0","contentHash":"f79dcf0057245767e8f2e0f53324e24f42b4c3c532528ec404e0da655bad2a91"},"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\unitTest\\pairTest.ts":{"path":"C:\\Users\\mubas\\Desktop\\chainscore\\backend\\zexe-arbitrum.01-ts\\src\\test\\unitTest\\pairTest.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":15},"end":{"line":15,"column":30}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"17":{"start":{"line":17,"column":20},"end":{"line":17,"column":57}},"18":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}},"19":{"start":{"line":19,"column":19},"end":{"line":19,"column":51}},"20":{"start":{"line":20,"column":0},"end":{"line":46,"column":3}},"21":{"start":{"line":21,"column":4},"end":{"line":23,"column":8}},"22":{"start":{"line":21,"column":17},"end":{"line":23,"column":6}},"23":{"start":{"line":27,"column":4},"end":{"line":45,"column":8}},"24":{"start":{"line":27,"column":42},"end":{"line":45,"column":6}},"25":{"start":{"line":28,"column":8},"end":{"line":36,"column":12}},"26":{"start":{"line":28,"column":51},"end":{"line":36,"column":10}},"27":{"start":{"line":29,"column":22},"end":{"line":30,"column":77}},"28":{"start":{"line":31,"column":12},"end":{"line":31,"column":56}},"29":{"start":{"line":32,"column":12},"end":{"line":32,"column":60}},"30":{"start":{"line":33,"column":12},"end":{"line":33,"column":64}},"31":{"start":{"line":34,"column":12},"end":{"line":34,"column":70}},"32":{"start":{"line":35,"column":12},"end":{"line":35,"column":66}},"33":{"start":{"line":37,"column":8},"end":{"line":44,"column":12}},"34":{"start":{"line":37,"column":67},"end":{"line":44,"column":10}},"35":{"start":{"line":38,"column":22},"end":{"line":39,"column":62}},"36":{"start":{"line":40,"column":12},"end":{"line":40,"column":56}},"37":{"start":{"line":41,"column":12},"end":{"line":41,"column":67}},"38":{"start":{"line":42,"column":12},"end":{"line":42,"column":60}},"39":{"start":{"line":43,"column":12},"end":{"line":43,"column":85}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":20,"column":29},"end":{"line":20,"column":30}},"loc":{"start":{"line":20,"column":35},"end":{"line":46,"column":1}},"line":20},"9":{"name":"(anonymous_9)","decl":{"start":{"line":21,"column":11},"end":{"line":21,"column":12}},"loc":{"start":{"line":21,"column":17},"end":{"line":23,"column":6}},"line":21},"10":{"name":"(anonymous_10)","decl":{"start":{"line":21,"column":51},"end":{"line":21,"column":52}},"loc":{"start":{"line":21,"column":64},"end":{"line":23,"column":5}},"line":21},"11":{"name":"(anonymous_11)","decl":{"start":{"line":27,"column":36},"end":{"line":27,"column":37}},"loc":{"start":{"line":27,"column":42},"end":{"line":45,"column":6}},"line":27},"12":{"name":"(anonymous_12)","decl":{"start":{"line":27,"column":76},"end":{"line":27,"column":77}},"loc":{"start":{"line":27,"column":89},"end":{"line":45,"column":5}},"line":27},"13":{"name":"(anonymous_13)","decl":{"start":{"line":28,"column":45},"end":{"line":28,"column":46}},"loc":{"start":{"line":28,"column":51},"end":{"line":36,"column":10}},"line":28},"14":{"name":"(anonymous_14)","decl":{"start":{"line":28,"column":85},"end":{"line":28,"column":86}},"loc":{"start":{"line":28,"column":98},"end":{"line":36,"column":9}},"line":28},"15":{"name":"(anonymous_15)","decl":{"start":{"line":37,"column":61},"end":{"line":37,"column":62}},"loc":{"start":{"line":37,"column":67},"end":{"line":44,"column":10}},"line":37},"16":{"name":"(anonymous_16)","decl":{"start":{"line":37,"column":101},"end":{"line":37,"column":102}},"loc":{"start":{"line":37,"column":114},"end":{"line":44,"column":9}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":1,"24":1,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"f":{"0":1,"1":0,"2":0,"3":1,"4":0,"5":0,"6":1,"7":1,"8":1,"9":0,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0},"b":{"0":[1,1,1],"1":[0,0],"2":[1,1],"3":[1,0],"4":[1,1],"5":[1,1,1],"6":[0,1],"7":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/unitTest/pairTest.ts","sources":["C:/Users/mubas/Desktop/chainscore/backend/zexe-arbitrum.01-ts/src/test/unitTest/pairTest.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA,+BAAoC;AACpC,+BAA8B;AAC9B,0DAAiC;AACjC,IAAA,UAAG,EAAC,mBAAQ,CAAC,CAAC;AAEd,oDAAgD;AAIhD,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAE9B,MAAM,CAAC,GAAS,EAAE;QACd,iBAAiB;IACrB,CAAC,CAAA,CAAC,CAAC;IACH;;QAEI;IACJ,QAAQ,CAAC,qBAAqB,EAAE,GAAS,EAAE;QAEvC,EAAE,CAAC,gCAAgC,EAAE,GAAS,EAAE;YAE5C,IAAI,GAAG,GAAG,MAAM,IAAA,cAAO,EAAC,uBAAuB,CAAC;iBAC3C,GAAG,CAAC,MAAM,kBAAO,+BAA+B,CAAC,CAAA;YACtD,IAAA,aAAM,EAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAChC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;YACxC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC,CAAA,CAAC,CAAC;QAGH,EAAE,CAAC,gDAAgD,EAAE,GAAS,EAAE;YAC5D,IAAI,GAAG,GAAG,MAAM,IAAA,cAAO,EAAC,uBAAuB,CAAC;iBAC3C,GAAG,CAAC,MAAM,kBAAO,gBAAgB,CAAC,CAAA;YAEvC,IAAA,aAAM,EAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAChC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3C,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAA,aAAM,EAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;QACjE,CAAC,CAAA,CAAC,CAAC;IAGP,CAAC,CAAA,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","sourcesContent":["\r\n\r\nimport { use, request } from \"chai\";\r\nimport { expect } from \"chai\";\r\nimport chaiHttp from \"chai-http\";\r\nuse(chaiHttp);\r\n\r\nimport { version } from \"../../helper/constant\";\r\n\r\n\r\n\r\ndescribe('Testing Pair Api', () => {\r\n\r\n    before(async () => {\r\n        //await connect()\r\n    });\r\n    /*\r\n      * Test the /GET route\r\n      */\r\n    describe('Get(/pair/allpairs)', async () => {\r\n\r\n        it('it should  have atleast a pair', async () => {\r\n\r\n            let res = await request(\"http://localhost:3010\")\r\n                .get(`/v/${version}/pair/allpairs?chainId=421613`)\r\n            expect(res).to.have.status(200);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body.data).to.be.an('array');\r\n            expect(res.body.data).not.to.have.lengthOf(0);\r\n            expect(res.body.status).to.be.equal(true);\r\n        });\r\n\r\n\r\n        it('it should send error for not providing chainId', async () => {\r\n            let res = await request(\"http://localhost:3010\")\r\n                .get(`/v/${version}/pair/allpairs`)\r\n\r\n            expect(res).to.have.status(400);\r\n            expect(res.body.status).to.be.equal(false);\r\n            expect(res.body).to.be.an('object');\r\n            expect(res.body.error).to.have.string('chainId is required');\r\n        });\r\n\r\n\r\n    });\r\n\r\n});"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"620fdbcd6719647ff9f37296c5f67aa1a305e542","contentHash":"fc22f612e036438ff53c2fbdc843265f264011ce4ed5082395a5bdb202daf769"}}